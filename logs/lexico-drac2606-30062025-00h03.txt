VOID (void) -> línea 1
ID (main) -> línea 1
LPAREN (() -> línea 1
RPAREN ()) -> línea 1
LBRACE ({) -> línea 1
LIST (List) -> línea 2
LESS (<) -> línea 2
STRING (String) -> línea 2
QUESTION (?) -> línea 2
GREATER (>) -> línea 2
ID (pruebas) -> línea 2
ASSIGN (=) -> línea 2
LBRACKET ([) -> línea 2
STRING (Anita lava la tina) -> línea 3
COMMA (,) -> línea 3
STRING (¿Acaso hubo búhos acá?) -> línea 4
COMMA (,) -> línea 4
STRING (No es palindromo) -> línea 5
COMMA (,) -> línea 5
STRING () -> línea 6
COMMA (,) -> línea 6
ID (null) -> línea 7
COMMA (,) -> línea 7
RBRACKET (]) -> línea 8
SEMICOLON (;) -> línea 8
FOR (for) -> línea 9
LPAREN (() -> línea 9
VAR (var) -> línea 9
ID (texto) -> línea 9
IN (in) -> línea 9
ID (pruebas) -> línea 9
RPAREN ()) -> línea 9
LBRACE ({) -> línea 9
TRY (try) -> línea 10
LBRACE ({) -> línea 10
BOOL (bool) -> línea 11
ID (es) -> línea 11
ASSIGN (=) -> línea 11
ID (esPalindromo) -> línea 11
LPAREN (() -> línea 11
ID (texto) -> línea 11
RPAREN ()) -> línea 11
SEMICOLON (;) -> línea 11
PRINT (print) -> línea 12
LPAREN (() -> línea 12
SINGLE_QUOTE (') -> línea 12
STRING ($texto) -> línea 12
DOLLAR_SIGN ($) -> línea 12
LBRACE ({) -> línea 12
ID (es) -> línea 12
QUESTION (?) -> línea 12
STRING (es) -> línea 12
COLON (:) -> línea 12
STRING (no es) -> línea 12
RBRACE (}) -> línea 12
ID (un) -> línea 12
ID (pal) -> línea 12
ID (ndromo) -> línea 12
DOT (.) -> línea 12
SINGLE_QUOTE (') -> línea 12
RPAREN ()) -> línea 12
SEMICOLON (;) -> línea 12
RBRACE (}) -> línea 13
CATCH (catch) -> línea 13
LPAREN (() -> línea 13
ID (e) -> línea 13
RPAREN ()) -> línea 13
LBRACE ({) -> línea 13
PRINT (print) -> línea 14
LPAREN (() -> línea 14
SINGLE_QUOTE (') -> línea 14
ID (Error) -> línea 14
ID (con) -> línea 14
ID (entrada) -> línea 14
STRING ($texto) -> línea 14
COLON (:) -> línea 14
DOLLAR_SIGN ($) -> línea 14
ID (e) -> línea 14
SINGLE_QUOTE (') -> línea 14
RPAREN ()) -> línea 14
SEMICOLON (;) -> línea 14
RBRACE (}) -> línea 15
RBRACE (}) -> línea 16
RBRACE (}) -> línea 17
BOOL (bool) -> línea 19
ID (esPalindromo) -> línea 19
LPAREN (() -> línea 19
STRING (String) -> línea 19
QUESTION (?) -> línea 19
ID (input) -> línea 19
RPAREN ()) -> línea 19
LBRACE ({) -> línea 19
IF (if) -> línea 20
LPAREN (() -> línea 20
ID (input) -> línea 20
EQUALS (==) -> línea 20
ID (null) -> línea 20
RPAREN ()) -> línea 20
THROW (throw) -> línea 20
ID (ArgumentError) -> línea 20
LPAREN (() -> línea 20
STRING (El texto no puede ser null) -> línea 20
RPAREN ()) -> línea 20
SEMICOLON (;) -> línea 20
IF (if) -> línea 21
LPAREN (() -> línea 21
ID (input) -> línea 21
DOT (.) -> línea 21
ID (trim) -> línea 21
LPAREN (() -> línea 21
RPAREN ()) -> línea 21
DOT (.) -> línea 21
ID (isEmpty) -> línea 21
RPAREN ()) -> línea 21
THROW (throw) -> línea 21
ID (FormatException) -> línea 21
LPAREN (() -> línea 21
STRING (Cadena vacía no válida) -> línea 21
RPAREN ()) -> línea 21
SEMICOLON (;) -> línea 21
FINAL (final) -> línea 22
STRING (String) -> línea 22
ID (procesado) -> línea 22
ASSIGN (=) -> línea 22
ID (input) -> línea 22
DOT (.) -> línea 22
ID (toLowerCase) -> línea 22
LPAREN (() -> línea 22
RPAREN ()) -> línea 22
DOT (.) -> línea 22
ID (replaceAll) -> línea 22
LPAREN (() -> línea 22
ID (RegExp) -> línea 23
LPAREN (() -> línea 23
ID (r) -> línea 23
SINGLE_QUOTE (') -> línea 23
LBRACKET ([) -> línea 23
CIRCUMFLEX (^) -> línea 23
ID (a) -> línea 23
MINUS (-) -> línea 23
ID (z0) -> línea 23
MINUS (-) -> línea 23
INT (9) -> línea 23
RBRACKET (]) -> línea 23
SINGLE_QUOTE (') -> línea 23
RPAREN ()) -> línea 23
COMMA (,) -> línea 23
SINGLE_QUOTE (') -> línea 24
SINGLE_QUOTE (') -> línea 24
COMMA (,) -> línea 24
RPAREN ()) -> línea 25
SEMICOLON (;) -> línea 25
INT (int) -> línea 26
ID (izquierda) -> línea 26
ASSIGN (=) -> línea 26
INT (0) -> línea 26
SEMICOLON (;) -> línea 26
INT (int) -> línea 27
ID (derecha) -> línea 27
ASSIGN (=) -> línea 27
ID (procesado) -> línea 27
DOT (.) -> línea 27
LENGTH (length) -> línea 27
MINUS (-) -> línea 27
INT (1) -> línea 27
SEMICOLON (;) -> línea 27
WHILE (while) -> línea 28
LPAREN (() -> línea 28
ID (izquierda) -> línea 28
LESS (<) -> línea 28
ID (derecha) -> línea 28
RPAREN ()) -> línea 28
LBRACE ({) -> línea 28
IF (if) -> línea 29
LPAREN (() -> línea 29
ID (procesado) -> línea 29
LBRACKET ([) -> línea 29
ID (izquierda) -> línea 29
RBRACKET (]) -> línea 29
NOT_EQUALS (!=) -> línea 29
ID (procesado) -> línea 29
LBRACKET ([) -> línea 29
ID (derecha) -> línea 29
RBRACKET (]) -> línea 29
RPAREN ()) -> línea 29
LBRACE ({) -> línea 29
RETURN (return) -> línea 30
FALSE (false) -> línea 30
SEMICOLON (;) -> línea 30
RBRACE (}) -> línea 31
ID (izquierda) -> línea 32
INCREMENT (++) -> línea 32
SEMICOLON (;) -> línea 32
ID (derecha) -> línea 33
DECREMENT (--) -> línea 33
SEMICOLON (;) -> línea 33
RBRACE (}) -> línea 34
RETURN (return) -> línea 35
TRUE (true) -> línea 35
SEMICOLON (;) -> línea 35
RBRACE (}) -> línea 36
