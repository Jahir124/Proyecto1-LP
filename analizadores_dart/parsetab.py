
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ADD AND AND_EQUAL ARROW AS ASSERT ASSIGN ASYNC AT_SIGN AWAIT BACKSLASH BACKTICK BASE BITAND BITNOT BITOR BITXOR BOOL BOOLEAN_LITERAL BREAK CASE CATCH CHAR_LITERAL CIRCUMFLEX CLASS CLEAR COLON COMMA COMMENT_DOC COMMENT_MULTI COMMENT_SINGLE CONST CONTAINS CONTINUE DEBUGPRINT DECREMENT DEFAULT DEFERRED DIVIDE DIVIDE_EQUAL DO DOLLAR_SIGN DOT DOUBLE DOUBLE_COLON DOUBLE_DOT DOUBLE_LITERAL DYNAMIC ELSE ENUM EQUALS EXCLAMATION EXPORT EXTENDS EXTERNAL FACTORY FALSE FAT_ARROW FINAL FINALLY FIRST FOR FOREACH FUNCTION GET GREATER GREATER_EQUAL HASH HIDE ID IDENTICAL IF IMPLEMENTS IMPORT IN INCREMENT INT INTERFACE INT_DIVIDE INT_DIVIDE_EQUAL INT_LITERAL IS ISEMPTY ISNOTEMPTY IS_NOT ITERABLE LAST LATE LBRACE LBRACKET LEFT_SHIFT LEFT_SHIFT_EQUAL LENGTH LESS LESS_EQUAL LIBRARY LIST LPAREN MAP MAP_FUNC MINUS MINUS_EQUAL MIXIN_CLASS MODULE MODULE_EQUAL MULTILINE_STRING_LITERAL NEVER NEW NOT NOT_EQUALS NOT_IDENTICAL NULL NULL_LITERAL NUM OBJECT OF ON OPERATOR OR OR_EQUAL PART PART_OF PLUS PLUS_EQUAL POWER POWER_EQUAL PRINT QUESTION QUESTION_DOT QUOTATION_MARK RAW_STRING_LITERAL RBRACE RBRACKET READLINESYNC REMOVE REQUIRED RETHROW RETURN RIGHT_SHIFT RIGHT_SHIFT_EQUAL RPAREN SEALED SEMICOLON SET SETTER SHOW SINGLE_QUOTE STATIC STDERR STDIN STDOUT STRING STRING_LITERAL SUPER SWITCH SYNC THIS THROW TIMES TIMES_EQUAL TRIPLE_DOT TRUE TRY TYPEDEF UNDERSCORE UNSIGNED_RIGHT_SHIFT VAR VOID WHERE WHILE WITH XOR_EQUAL YIELDcompiler : statement_composedstatement_composed : statement\n| statement_composed statementstatement : print_stmt\n| input_stmt\n| control_structures\n| function\n| lambda_function\n| list_def\n| map_def\n| variable_def\n| variable_only_def\n| SEMICOLON\n| function_call\n| return_statement\n| incdec_statement\n| class_def\n| object_instantiation\n| break_stmt\n| expression SEMICOLONstatement : variable_only_def : type ID SEMICOLON\n| DYNAMIC ID SEMICOLON\n| VAR ID SEMICOLON\n| STATIC type ID SEMICOLON\n| STATIC VAR ID SEMICOLON\n| STATIC DYNAMIC ID SEMICOLONvariable_def : type ID ASSIGN expression SEMICOLON\n| DYNAMIC ID ASSIGN expression SEMICOLON\n| VAR ID ASSIGN expression SEMICOLON\n| STATIC type ID ASSIGN expression SEMICOLON\n| STATIC VAR ID ASSIGN expression SEMICOLON\n| STATIC DYNAMIC ID ASSIGN expression SEMICOLONexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression INT_DIVIDE expression\n| expression MODULE expressionexpression : LPAREN expression RPARENexpression : valueexpression : ID INCREMENT\n| ID DECREMENTexpression : expression DOT ID\n| expression DOT function_callexpression : expression DOT ID LPAREN argument_list_opt RPARENexpression : ID PLUS_EQUAL expression\n| ID MINUS_EQUAL expression\n| ID TIMES_EQUAL expression\n| ID DIVIDE_EQUAL expression\n| ID MODULE_EQUAL expressionexpression : INCREMENT ID\n| DECREMENT ID\n| PLUS ID\n| MINUS IDexpression : expression QUESTION expression COLON expressionexpression : expression DOUBLE_DOT expressionexpression : LPAREN parameters RPAREN ARROW expression\n| LPAREN RPAREN ARROW expressionexpression : TRUE\n| FALSE\n| NULL_LITERALcontrol_structures : if_block\n| if_block else_block\n| while_loop\n| for_loopif_block : IF LPAREN conditions RPAREN LBRACE statement_composed RBRACEelse_block : ELSE LBRACE statement_composed RBRACEconditions : condition\n| conditions AND condition\n| conditions OR conditioncondition : value comparison_operator value\n| NOT value\n| TRUE\n| FALSE\n| ID comparison_operator value\n| ID comparison_operator IDcomparison_operator : GREATER\n| LESS\n| GREATER_EQUAL\n| LESS_EQUAL\n| EQUALS\n| NOT_EQUALSwhile_loop : WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACEfor_loop : FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE\n| FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACEfor_init : variable_def\n| emptyfor_update : incdec_statement\n| ID ASSIGN expression\n| emptybreak_stmt : BREAK SEMICOLONfor_in_loop : FOR LPAREN VAR ID IN ID RPAREN LBRACE statement_composed RBRACE\n| FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACEtry_catch_block : TRY LBRACE statement_composed RBRACE CATCH LPAREN ID RPAREN LBRACE statement_composed RBRACEfunction : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n| VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE\n| type ID LPAREN optional_parameters RPAREN LBRACE statement_composed RBRACE\n| VOID ID LPAREN optional_parameters RPAREN LBRACE statement_composed RBRACEparameters : parameter\n| parameters COMMA parameterparameter : type ID\n| REQUIRED type IDoptional_parameters : LBRACKET parameters RBRACKET\n| LBRACE named_parameters RBRACEnamed_parameters : named_parameter\n| named_parameters COMMA named_parameternamed_parameter : type ID\n| REQUIRED type IDfunction_call : ID LPAREN RPAREN SEMICOLON\n| ID LPAREN argument_list RPAREN SEMICOLONargument_list : expression\n| argument_list COMMA expressionargument_list_opt : argument_list\n| emptyreturn_statement : RETURN expression SEMICOLON\n| RETURN SEMICOLONlambda_function : type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n| VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n| type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON\n| VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLONanonymous_function : LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| LPAREN RPAREN LBRACE statement_composed RBRACEvariable_def : VAR ID ASSIGN anonymous_function SEMICOLON\n| type ID ASSIGN anonymous_function SEMICOLONlist_def : LIST LBRACKET value_list RBRACKET SEMICOLON\n| LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON\n| LIST LESS type GREATER ID SEMICOLON\n| LIST LESS type GREATER ID ASSIGN LBRACKET list_of_lists RBRACKET SEMICOLONvalue_list : value\n| value_list COMMA valuelist_of_lists : LBRACKET value_list RBRACKET\n| list_of_lists COMMA LBRACKET value_list RBRACKETmap_def : MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON\n| MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON\n| MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_of_lists RBRACE SEMICOLONmap_entries : map_entry\n| map_entries COMMA map_entrymap_entry : value COLON valuemap_of_lists : map_list_entry\n| map_of_lists COMMA map_list_entrymap_list_entry : value COLON LBRACKET value_list RBRACKETset_value : LBRACE value_list RBRACEclass_def : CLASS ID LBRACE class_body RBRACE\n| CLASS ID EXTENDS ID LBRACE class_body RBRACE\n| CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE\n| CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE\n| CLASS ID EXTENDS ID WITH ID IMPLEMENTS ID LBRACE class_body RBRACEclass_body : class_member\n| class_body class_memberclass_member : class_property\n| class_method\n| constructorclass_property : type ID SEMICOLON\n| VAR ID SEMICOLON\n| FINAL type ID SEMICOLON\n| CONST type ID SEMICOLON\n| STATIC type ID SEMICOLON\n| type ID ASSIGN expression SEMICOLON\n| VAR ID ASSIGN expression SEMICOLON\n| FINAL type ID ASSIGN expression SEMICOLON\n| CONST type ID ASSIGN expression SEMICOLON\n| STATIC type ID ASSIGN expression SEMICOLONclass_method : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n| VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE\n| STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACEconstructor : ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n| ID LPAREN RPAREN LBRACE statement_composed RBRACEobject_instantiation : VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n| type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n| VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n| type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n| ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n| ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n| ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n| ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n| ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n| ID ASSIGN ID LPAREN RPAREN SEMICOLON\n| VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n| VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON\n| type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n| type ID ASSIGN ID LPAREN RPAREN SEMICOLONprint_stmt : PRINT LPAREN RPAREN SEMICOLON\n| PRINT LPAREN value RPAREN SEMICOLON\n| PRINT LPAREN expression RPAREN SEMICOLONinput_stmt : STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n| VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n| type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLONtype : STRING\n| INT\n| DOUBLE\n| BOOL\n| set_typeset_type : SET\n| SET LESS type GREATERvalue : INT\n| DOUBLE\n| STRING\n| ID\n| TRUE\n| FALSE\n| set_valueincdec_statement : ID INCREMENT SEMICOLON\n| ID DECREMENT SEMICOLON\n| INCREMENT ID SEMICOLON\n| DECREMENT ID SEMICOLONempty :'
    
_lr_action_items = {'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,26,28,29,30,37,41,44,45,46,47,48,49,55,57,58,72,82,85,86,93,94,98,99,100,101,102,103,109,116,117,118,119,121,122,123,126,128,129,130,131,132,133,134,135,137,138,144,148,149,150,151,156,158,161,162,165,166,167,168,169,172,173,174,182,183,184,185,186,187,188,193,196,197,200,202,203,210,211,212,213,218,221,222,226,227,231,234,235,242,247,251,253,255,257,282,296,297,298,299,300,305,306,310,313,320,321,324,331,333,335,336,341,342,343,344,346,348,349,359,360,361,362,363,364,365,366,373,374,376,380,384,385,387,389,394,395,400,402,403,404,406,408,411,412,413,421,422,423,430,431,435,436,439,440,441,443,444,446,447,448,449,450,453,455,456,457,460,461,462,463,466,470,471,474,485,488,489,490,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,525,526,529,531,532,533,537,542,543,544,545,546,548,549,550,551,552,553,554,555,557,558,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,596,598,601,602,604,605,607,610,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,58,-41,-204,-63,-65,-66,117,121,-60,-61,-62,-203,-201,-202,-207,-3,-20,-204,156,161,162,172,-64,-201,-202,-203,-204,-205,-206,182,186,-119,187,188,-92,-54,-55,-212,-34,-35,-36,-37,-38,-39,-44,-45,-57,210,-40,-42,-43,-52,-53,-24,226,-208,-209,-47,-48,-49,-50,-51,-22,13,-145,-23,253,255,257,-118,-210,-211,-69,-74,-75,285,-87,-88,-188,297,298,-59,-204,305,306,-112,310,-204,320,321,13,335,341,-25,-26,-27,-73,-56,-189,-190,-58,374,-30,-126,-113,385,-28,-127,13,-68,13,-128,406,-29,411,412,413,-146,416,419,13,-70,-71,-72,-77,-76,13,432,-46,-191,436,13,446,-183,448,450,13,13,13,13,13,13,-130,466,-31,-32,-33,475,477,479,13,13,500,-185,13,504,13,507,508,-181,510,-182,511,-187,514,516,13,-98,13,13,-99,13,-137,13,527,530,-147,-148,-67,-84,-176,548,549,13,-123,-125,551,-184,-179,552,-180,-177,553,554,-122,555,-186,-96,-100,-97,-101,13,13,13,565,566,567,13,161,162,187,188,13,-192,-121,-124,-174,-178,-193,-120,-175,578,579,13,13,13,13,13,-149,13,13,-129,-131,13,13,13,13,13,-86,607,610,13,13,-150,-85,-136,-138,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,21,-23,-118,-210,-211,-188,-112,21,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,21,-68,21,-128,-29,-146,21,21,-191,21,-183,21,21,21,21,21,21,-130,-31,-32,-33,21,21,-185,21,21,-181,-182,-187,21,-98,21,21,-99,21,-137,21,-147,-148,-67,-84,-176,21,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,21,21,21,21,21,-192,-121,-174,-178,-193,-120,-175,21,21,21,21,21,-149,21,21,-129,-131,21,21,21,21,21,-86,21,21,-150,-85,-136,-138,]),'STDIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,155,156,161,162,170,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,219,-24,-208,-209,232,-22,24,-23,-118,-210,-211,-188,-112,24,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,24,-68,24,-128,-29,-146,24,24,-191,24,-183,24,24,24,24,24,24,-130,-31,-32,-33,24,24,-185,24,24,-181,-182,-187,24,-98,24,24,-99,24,-137,24,-147,-148,-67,-84,-176,24,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,24,24,24,24,24,-192,-121,-174,-178,-193,-120,-175,24,24,24,24,24,-149,24,24,-129,-131,24,24,24,24,24,-86,24,24,-150,-85,-136,-138,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,36,57,58,94,117,121,126,156,161,162,172,173,182,186,187,188,189,206,210,226,242,253,255,257,259,260,261,262,263,297,298,305,306,310,320,321,324,331,333,335,341,346,347,355,358,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,416,419,426,429,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,475,477,479,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,610,612,613,],[25,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,111,-3,-20,-64,-119,-92,205,-24,-208,-209,-22,25,-23,-118,-210,-211,265,290,-188,-112,25,-25,-26,-27,265,-151,-153,-154,-155,-189,-190,-30,-126,-113,-28,-127,25,-68,25,-128,-29,-146,-152,265,265,25,25,-191,25,-183,25,25,25,25,25,25,-130,-31,-32,-33,-156,-157,265,265,25,25,-185,25,25,-181,-182,-187,25,-98,25,25,-99,25,-137,25,-158,-159,-160,-147,265,-148,-67,-84,-176,25,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,25,25,-161,25,-162,25,265,25,-192,-121,-174,-178,-193,-120,-175,25,-173,25,25,-163,-164,-165,25,25,-149,265,25,25,-129,-131,-172,25,-168,25,25,25,-169,265,25,-86,-166,25,25,-167,-150,-85,-136,-138,-170,-171,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,189,210,226,242,253,255,257,259,260,261,262,263,268,297,298,305,306,310,320,321,324,331,333,335,341,346,347,355,358,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,416,419,426,429,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,475,477,479,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,610,612,613,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,32,-23,-118,-210,-211,269,-188,-112,32,-25,-26,-27,269,-151,-153,-154,-155,353,-189,-190,-30,-126,-113,-28,-127,32,-68,32,-128,-29,-146,-152,269,269,32,32,-191,32,-183,32,32,32,32,32,32,-130,-31,-32,-33,-156,-157,269,269,32,32,-185,32,32,-181,-182,-187,32,-98,32,32,-99,32,-137,32,-158,-159,-160,-147,269,-148,-67,-84,-176,32,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,32,32,-161,32,-162,32,269,32,-192,-121,-174,-178,-193,-120,-175,32,-173,32,32,-163,-164,-165,32,32,-149,269,32,32,-129,-131,-172,32,-168,32,32,32,-169,269,32,-86,-166,32,32,-167,-150,-85,-136,-138,-170,-171,]),'LIST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,33,-23,-118,-210,-211,-188,-112,33,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,33,-68,33,-128,-29,-146,33,33,-191,33,-183,33,33,33,33,33,33,-130,-31,-32,-33,33,33,-185,33,33,-181,-182,-187,33,-98,33,33,-99,33,-137,33,-147,-148,-67,-84,-176,33,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,33,33,33,33,33,-192,-121,-174,-178,-193,-120,-175,33,33,33,33,33,-149,33,33,-129,-131,33,33,33,33,33,-86,33,33,-150,-85,-136,-138,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,34,-23,-118,-210,-211,-188,-112,34,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,34,-68,34,-128,-29,-146,34,34,-191,34,-183,34,34,34,34,34,34,-130,-31,-32,-33,34,34,-185,34,34,-181,-182,-187,34,-98,34,34,-99,34,-137,34,-147,-148,-67,-84,-176,34,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,34,34,34,34,34,-192,-121,-174,-178,-193,-120,-175,34,34,34,34,34,-149,34,34,-129,-131,34,34,34,34,34,-86,34,34,-150,-85,-136,-138,]),'DYNAMIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,36,57,58,94,117,121,126,156,161,162,172,173,182,186,187,188,206,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,112,-3,-20,-64,-119,-92,204,-24,-208,-209,-22,35,-23,-118,-210,-211,291,-188,-112,35,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,35,-68,35,-128,-29,-146,35,35,-191,35,-183,35,35,35,35,35,35,-130,-31,-32,-33,35,35,-185,35,35,-181,-182,-187,35,-98,35,35,-99,35,-137,35,-147,-148,-67,-84,-176,35,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,35,35,35,35,35,-192,-121,-174,-178,-193,-120,-175,35,35,35,35,35,-149,35,35,-129,-131,35,35,35,35,35,-86,35,35,-150,-85,-136,-138,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,126,156,161,162,172,173,182,186,187,188,189,210,226,242,253,255,257,259,260,261,262,263,297,298,305,306,310,320,321,324,331,333,335,341,346,347,355,358,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,416,419,426,429,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,475,477,479,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,610,612,613,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,206,-24,-208,-209,-22,36,-23,-118,-210,-211,268,-188,-112,36,-25,-26,-27,268,-151,-153,-154,-155,-189,-190,-30,-126,-113,-28,-127,36,-68,36,-128,-29,-146,-152,268,268,36,36,-191,36,-183,36,36,36,36,36,36,-130,-31,-32,-33,-156,-157,268,268,36,36,-185,36,36,-181,-182,-187,36,-98,36,36,-99,36,-137,36,-158,-159,-160,-147,268,-148,-67,-84,-176,36,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,36,36,-161,36,-162,36,268,36,-192,-121,-174,-178,-193,-120,-175,36,-173,36,36,-163,-164,-165,36,36,-149,268,36,36,-129,-131,-172,36,-168,36,36,36,-169,268,36,-86,-166,36,36,-167,-150,-85,-136,-138,-170,-171,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,25,26,27,28,29,30,31,32,34,35,37,38,39,40,42,43,47,48,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,76,77,78,79,84,87,88,89,90,91,92,94,105,110,111,112,113,114,115,117,121,124,125,145,153,155,156,157,161,162,164,170,172,173,175,181,182,186,187,188,189,190,191,195,201,204,205,208,209,210,214,220,223,225,226,228,229,233,236,242,248,250,252,253,254,255,256,257,259,260,261,262,263,264,265,269,273,274,275,276,277,278,279,280,281,283,285,289,290,291,292,297,298,301,305,306,308,310,315,316,320,321,324,327,331,333,335,341,346,347,350,351,352,353,355,356,357,358,359,365,367,368,369,374,379,380,381,383,385,392,393,394,395,399,400,402,403,404,406,407,409,410,411,412,413,416,417,419,420,426,429,430,431,432,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,475,476,477,478,479,480,485,486,487,488,489,490,495,496,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,527,529,530,537,538,541,546,548,549,551,552,553,554,555,560,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,580,585,586,587,588,589,590,591,592,593,594,597,599,600,601,602,603,604,605,607,610,611,612,613,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,72,82,83,93,-63,-65,-66,101,104,108,109,72,118,119,120,122,123,-194,-195,-196,-197,-198,-199,-3,-20,72,72,72,72,72,72,134,72,72,141,150,151,-195,-196,-194,152,72,163,72,72,72,72,72,-64,101,183,184,185,-194,-195,-196,-119,-92,198,198,72,216,218,-24,224,-208,-209,230,231,-22,26,101,72,-23,-118,-210,-211,258,270,271,101,286,287,288,72,72,-188,72,72,307,309,-112,72,72,72,322,26,336,101,72,-25,72,-26,72,-27,258,-151,-153,-154,-155,348,349,354,198,198,101,-78,-79,-80,-81,-82,-83,363,198,370,371,372,-200,-189,-190,72,-30,-126,72,-113,72,72,-28,-127,26,398,-68,26,-128,-29,-146,-152,421,422,423,424,258,427,428,258,26,26,433,72,72,-191,72,26,72,72,-183,72,72,26,26,459,26,26,26,26,-130,465,101,101,-31,-32,-33,-156,72,-157,72,258,258,26,26,493,72,-185,72,26,26,-181,-182,-187,72,26,-98,26,26,-99,26,101,-137,26,-158,72,-159,72,-160,72,-147,258,539,-148,-67,-84,544,545,-176,26,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,101,26,26,-161,26,-162,26,258,72,26,-192,-121,-174,-178,-193,-120,-175,101,26,-173,26,26,-163,-164,-165,26,26,-149,258,26,26,-129,-131,101,-172,26,-168,26,26,26,-169,258,26,-86,101,101,-166,26,26,-167,-150,-85,-136,-138,101,-170,-171,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,37,-23,-118,-210,-211,-188,-112,37,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,37,-68,37,-128,-29,-146,37,37,-191,37,-183,37,37,37,37,37,37,-130,-31,-32,-33,37,37,-185,37,37,-181,-182,-187,37,-98,37,37,-99,37,-137,37,-147,-148,-67,-84,-176,37,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,37,37,37,37,37,-192,-121,-174,-178,-193,-120,-175,37,37,37,37,37,-149,37,37,-129,-131,37,37,37,37,37,-86,37,37,-150,-85,-136,-138,]),'INCREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,26,28,29,30,37,57,58,59,60,61,62,63,64,66,67,68,72,84,88,89,90,91,92,94,117,121,141,145,155,156,161,162,170,172,173,181,182,186,187,188,208,209,210,214,218,220,226,228,229,231,233,242,252,253,254,255,256,257,297,298,301,305,306,308,310,315,316,320,321,324,331,333,335,341,346,359,365,368,369,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,411,412,413,417,420,430,431,432,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,466,470,476,478,480,485,488,489,490,493,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,73,85,-63,-65,-66,73,-3,-20,73,73,73,73,73,73,73,73,73,148,73,73,73,73,73,73,-64,-119,-92,148,73,73,-24,-208,-209,73,-22,38,73,-23,-118,-210,-211,73,73,-188,73,148,73,-112,73,73,148,73,38,73,-25,73,-26,73,-27,-189,-190,73,-30,-126,73,-113,73,73,-28,-127,38,-68,38,-128,-29,-146,38,38,73,73,-191,73,38,73,73,-183,73,73,38,38,38,38,38,38,-130,-31,-32,-33,73,73,38,38,495,73,-185,73,38,38,-181,-182,-187,73,38,-98,38,38,-99,38,-137,38,73,73,73,-147,-148,-67,-84,542,-176,38,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,38,38,38,38,73,38,-192,-121,-174,-178,-193,-120,-175,38,38,38,38,38,-149,38,38,-129,-131,38,38,38,38,38,-86,38,38,-150,-85,-136,-138,]),'DECREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,26,28,29,30,37,57,58,59,60,61,62,63,64,66,67,68,72,84,88,89,90,91,92,94,117,121,141,145,155,156,161,162,170,172,173,181,182,186,187,188,208,209,210,214,218,220,226,228,229,231,233,242,252,253,254,255,256,257,297,298,301,305,306,308,310,315,316,320,321,324,331,333,335,341,346,359,365,368,369,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,411,412,413,417,420,430,431,432,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,466,470,476,478,480,485,488,489,490,493,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,74,86,-63,-65,-66,74,-3,-20,74,74,74,74,74,74,74,74,74,149,74,74,74,74,74,74,-64,-119,-92,149,74,74,-24,-208,-209,74,-22,39,74,-23,-118,-210,-211,74,74,-188,74,149,74,-112,74,74,149,74,39,74,-25,74,-26,74,-27,-189,-190,74,-30,-126,74,-113,74,74,-28,-127,39,-68,39,-128,-29,-146,39,39,74,74,-191,74,39,74,74,-183,74,74,39,39,39,39,39,39,-130,-31,-32,-33,74,74,39,39,496,74,-185,74,39,39,-181,-182,-187,74,39,-98,39,39,-99,39,-137,39,74,74,74,-147,-148,-67,-84,543,-176,39,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,39,39,39,39,74,39,-192,-121,-174,-178,-193,-120,-175,39,39,39,39,39,-149,39,39,-129,-131,39,39,39,39,39,-86,39,39,-150,-85,-136,-138,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,40,-23,-118,-210,-211,-188,-112,40,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,40,-68,40,-128,-29,-146,40,40,-191,40,-183,40,40,40,40,40,40,-130,-31,-32,-33,40,40,-185,40,40,-181,-182,-187,40,-98,40,40,-99,40,-137,40,-147,-148,-67,-84,-176,40,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,40,40,40,40,40,-192,-121,-174,-178,-193,-120,-175,40,40,40,40,40,-149,40,40,-129,-131,40,40,40,40,40,-86,40,40,-150,-85,-136,-138,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,41,-23,-118,-210,-211,-188,-112,41,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,41,-68,41,-128,-29,-146,41,41,-191,41,-183,41,41,41,41,41,41,-130,-31,-32,-33,41,41,-185,41,41,-181,-182,-187,41,-98,41,41,-99,41,-137,41,-147,-148,-67,-84,-176,41,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,41,41,41,41,41,-192,-121,-174,-178,-193,-120,-175,41,41,41,41,41,-149,41,41,-129,-131,41,41,41,41,41,-86,41,41,-150,-85,-136,-138,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,26,28,29,30,37,52,53,54,57,58,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,93,94,104,117,121,134,145,154,155,156,161,162,163,170,172,173,181,182,186,187,188,208,209,210,214,218,220,224,226,228,229,230,231,233,242,252,253,254,255,256,257,258,297,298,301,305,306,307,308,309,310,315,316,320,321,322,324,331,333,335,341,346,348,354,359,365,368,369,374,377,379,380,381,383,385,390,392,393,394,395,400,402,403,404,406,411,412,413,417,420,423,424,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,466,470,476,478,480,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,68,22,84,-63,-65,-66,22,124,125,126,-3,-20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,171,-64,176,-119,-92,208,22,217,220,-24,-208,-209,229,233,-22,22,22,-23,-118,-210,-211,22,22,-188,22,301,22,308,-112,22,22,315,316,22,22,22,-25,22,-26,22,-27,345,-189,-190,22,-30,-126,381,22,383,-113,22,22,-28,-127,393,22,-68,22,-128,-29,-146,418,425,22,22,434,434,-191,437,22,22,22,22,-183,451,22,22,22,22,22,22,22,22,-130,-31,-32,-33,22,22,481,482,22,22,22,-185,22,22,22,-181,-182,-187,22,22,-98,22,22,-99,22,-137,22,22,22,22,-147,-148,-67,-84,-176,22,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,22,22,22,22,22,22,-192,-121,-174,-178,-193,-120,-175,22,22,22,22,22,-149,22,22,-129,-131,22,22,22,22,22,-86,22,22,-150,-85,-136,-138,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,26,28,29,30,37,44,45,46,47,48,49,55,57,58,59,60,61,62,63,64,66,67,68,69,72,76,77,78,84,85,86,88,89,90,91,92,94,98,99,100,116,117,118,119,121,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,148,149,150,151,155,156,160,161,162,165,166,167,168,169,170,172,173,174,181,182,186,187,188,208,209,210,213,214,218,220,221,226,228,229,231,233,234,242,251,252,253,254,255,256,257,296,297,298,299,301,305,306,308,310,311,315,316,320,321,324,331,333,335,341,342,343,344,346,359,365,368,369,373,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,411,412,413,417,420,430,431,434,436,438,439,440,441,446,448,450,452,453,456,457,460,461,462,463,466,470,471,474,476,478,480,485,488,489,490,500,502,503,504,507,508,510,511,513,514,516,517,518,519,520,525,526,529,531,532,533,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,575,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,59,42,-41,-204,-63,-65,-66,42,-60,-61,-62,-203,-201,-202,-207,-3,-20,42,42,42,42,42,42,42,42,42,59,-204,-201,-202,-203,42,-42,-43,42,42,42,42,42,-64,-201,-202,-203,59,-119,-52,-53,-92,-54,-55,59,59,59,59,59,59,-44,-45,59,59,-41,59,-204,-60,-61,-40,42,-42,-43,-52,-53,42,-24,59,-208,-209,59,59,59,59,59,42,-22,42,-145,42,-23,-118,-210,-211,42,42,-188,59,42,-204,42,59,-112,42,42,-204,42,59,42,59,42,-25,42,-26,42,-27,59,-189,-190,59,42,-30,-126,42,-113,59,42,42,-28,-127,42,-68,42,-128,-29,59,59,59,-146,42,42,42,42,-46,-191,42,42,42,42,-183,42,42,42,42,42,42,42,42,-130,-31,-32,-33,42,42,42,42,42,-185,42,42,59,42,-181,-182,-187,42,59,42,-98,42,42,-99,42,-137,42,59,59,42,42,42,-147,-148,-67,-84,-176,59,42,-123,-184,-179,-180,-177,59,-122,-186,-96,-100,-97,-101,42,42,42,59,59,59,42,42,42,-192,-121,-174,-178,-193,-120,-175,42,42,42,42,42,-149,42,59,42,-129,-131,42,42,42,42,42,-86,42,42,-150,-85,-136,-138,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,26,28,29,30,37,44,45,46,47,48,49,55,57,58,59,60,61,62,63,64,66,67,68,69,72,76,77,78,84,85,86,88,89,90,91,92,94,98,99,100,116,117,118,119,121,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,148,149,150,151,155,156,160,161,162,165,166,167,168,169,170,172,173,174,181,182,186,187,188,208,209,210,213,214,218,220,221,226,228,229,231,233,234,242,251,252,253,254,255,256,257,296,297,298,299,301,305,306,308,310,311,315,316,320,321,324,331,333,335,341,342,343,344,346,359,365,368,369,373,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,411,412,413,417,420,430,431,434,436,438,439,440,441,446,448,450,452,453,456,457,460,461,462,463,466,470,471,474,476,478,480,485,488,489,490,500,502,503,504,507,508,510,511,513,514,516,517,518,519,520,525,526,529,531,532,533,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,575,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,60,43,-41,-204,-63,-65,-66,43,-60,-61,-62,-203,-201,-202,-207,-3,-20,43,43,43,43,43,43,43,43,43,60,-204,-201,-202,-203,43,-42,-43,43,43,43,43,43,-64,-201,-202,-203,60,-119,-52,-53,-92,-54,-55,60,60,60,60,60,60,-44,-45,60,60,-41,60,-204,-60,-61,-40,43,-42,-43,-52,-53,43,-24,60,-208,-209,60,60,60,60,60,43,-22,43,-145,43,-23,-118,-210,-211,43,43,-188,60,43,-204,43,60,-112,43,43,-204,43,60,43,60,43,-25,43,-26,43,-27,60,-189,-190,60,43,-30,-126,43,-113,60,43,43,-28,-127,43,-68,43,-128,-29,60,60,60,-146,43,43,43,43,-46,-191,43,43,43,43,-183,43,43,43,43,43,43,43,43,-130,-31,-32,-33,43,43,43,43,43,-185,43,43,60,43,-181,-182,-187,43,60,43,-98,43,43,-99,43,-137,43,60,60,43,43,43,-147,-148,-67,-84,-176,60,43,-123,-184,-179,-180,-177,60,-122,-186,-96,-100,-97,-101,43,43,43,60,60,60,43,43,43,-192,-121,-174,-178,-193,-120,-175,43,43,43,43,43,-149,43,60,43,-129,-131,43,43,43,43,43,-86,43,43,-150,-85,-136,-138,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,37,57,58,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,94,105,117,121,124,125,145,155,156,161,162,170,172,173,175,181,182,186,187,188,195,208,209,210,214,220,226,228,229,233,242,250,252,253,254,255,256,257,273,274,275,276,277,278,279,280,281,283,285,297,298,301,305,306,308,310,315,316,320,321,324,331,333,335,341,346,359,365,368,369,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,409,410,411,412,413,417,420,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,476,478,480,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,529,537,541,546,548,549,551,552,553,554,555,560,561,563,564,570,571,572,574,576,578,579,580,586,588,589,590,593,594,597,599,601,602,604,605,607,610,611,],[44,44,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,44,-63,-65,-66,102,44,-3,-20,44,44,44,44,44,44,44,44,142,44,44,44,44,44,44,-64,102,-119,-92,196,196,44,44,-24,-208,-209,44,-22,44,102,44,-23,-118,-210,-211,102,44,44,-188,44,44,-112,44,44,44,44,102,44,-25,44,-26,44,-27,196,196,102,-78,-79,-80,-81,-82,-83,102,196,-189,-190,44,-30,-126,44,-113,44,44,-28,-127,44,-68,44,-128,-29,-146,44,44,44,44,-191,44,44,44,44,-183,44,44,44,44,44,44,44,44,-130,102,102,-31,-32,-33,44,44,44,44,44,-185,44,44,44,-181,-182,-187,44,44,-98,44,44,-99,44,102,-137,44,44,44,44,-147,-148,-67,-84,-176,44,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,102,44,44,44,44,44,44,-192,-121,-174,-178,-193,-120,-175,102,44,44,44,44,44,-149,44,44,-129,-131,102,44,44,44,44,44,-86,102,102,44,44,-150,-85,-136,-138,102,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,37,57,58,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,94,105,117,121,124,125,145,155,156,161,162,170,172,173,175,181,182,186,187,188,195,208,209,210,214,220,226,228,229,233,242,250,252,253,254,255,256,257,273,274,275,276,277,278,279,280,281,283,285,297,298,301,305,306,308,310,315,316,320,321,324,331,333,335,341,346,359,365,368,369,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,409,410,411,412,413,417,420,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,476,478,480,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,529,537,541,546,548,549,551,552,553,554,555,560,561,563,564,570,571,572,574,576,578,579,580,586,588,589,590,593,594,597,599,601,602,604,605,607,610,611,],[45,45,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,45,-63,-65,-66,103,45,-3,-20,45,45,45,45,45,45,45,45,143,45,45,45,45,45,45,-64,103,-119,-92,197,197,45,45,-24,-208,-209,45,-22,45,103,45,-23,-118,-210,-211,103,45,45,-188,45,45,-112,45,45,45,45,103,45,-25,45,-26,45,-27,197,197,103,-78,-79,-80,-81,-82,-83,103,197,-189,-190,45,-30,-126,45,-113,45,45,-28,-127,45,-68,45,-128,-29,-146,45,45,45,45,-191,45,45,45,45,-183,45,45,45,45,45,45,45,45,-130,103,103,-31,-32,-33,45,45,45,45,45,-185,45,45,45,-181,-182,-187,45,45,-98,45,45,-99,45,103,-137,45,45,45,45,-147,-148,-67,-84,-176,45,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,103,45,45,45,45,45,45,-192,-121,-174,-178,-193,-120,-175,103,45,45,45,45,45,-149,45,45,-129,-131,103,45,45,45,45,45,-86,103,103,45,45,-150,-85,-136,-138,103,]),'NULL_LITERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,37,57,58,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,94,117,121,145,155,156,161,162,170,172,173,181,182,186,187,188,208,209,210,214,220,226,228,229,233,242,252,253,254,255,256,257,297,298,301,305,306,308,310,315,316,320,321,324,331,333,335,341,346,359,365,368,369,374,379,380,381,383,385,392,393,394,395,400,402,403,404,406,411,412,413,417,420,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,466,470,476,478,480,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,541,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[46,46,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,46,-63,-65,-66,46,-3,-20,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-64,-119,-92,46,46,-24,-208,-209,46,-22,46,46,-23,-118,-210,-211,46,46,-188,46,46,-112,46,46,46,46,46,-25,46,-26,46,-27,-189,-190,46,-30,-126,46,-113,46,46,-28,-127,46,-68,46,-128,-29,-146,46,46,46,46,-191,46,46,46,46,-183,46,46,46,46,46,46,46,46,-130,-31,-32,-33,46,46,46,46,46,-185,46,46,46,-181,-182,-187,46,46,-98,46,46,-99,46,-137,46,46,46,46,-147,-148,-67,-84,-176,46,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,46,46,46,46,46,46,-192,-121,-174,-178,-193,-120,-175,46,46,46,46,46,-149,46,46,-129,-131,46,46,46,46,46,-86,46,46,-150,-85,-136,-138,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,36,37,57,58,59,60,61,62,63,64,66,67,68,80,84,88,89,90,91,92,94,105,106,107,117,121,124,125,126,127,145,147,155,156,161,162,170,171,172,173,175,176,181,182,186,187,188,189,195,206,208,209,210,214,220,226,228,229,233,239,241,242,249,250,252,253,254,255,256,257,259,260,261,262,263,266,267,268,273,274,275,276,277,278,279,280,281,283,285,297,298,301,305,306,308,310,315,316,320,321,324,328,331,333,335,341,345,346,347,355,358,359,365,368,369,374,379,380,381,383,385,392,393,394,395,397,400,402,403,404,406,409,410,411,412,413,416,417,418,419,420,425,426,429,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,475,476,477,478,479,480,481,482,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,527,529,530,537,538,541,546,548,549,551,552,553,554,555,560,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,580,585,586,587,588,589,590,591,592,593,594,597,599,600,601,602,603,604,605,607,610,611,612,613,],[47,47,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,78,-63,-65,-66,100,113,100,-3,-20,100,100,100,100,100,100,100,100,100,113,100,100,100,100,100,100,-64,100,113,113,-119,-92,100,100,113,113,100,113,100,-24,-208,-209,100,113,-22,47,100,113,100,-23,-118,-210,-211,113,100,113,100,100,-188,100,78,-112,100,100,78,113,113,47,113,100,100,-25,100,-26,100,-27,113,-151,-153,-154,-155,113,113,113,100,100,100,-78,-79,-80,-81,-82,-83,100,100,-189,-190,100,-30,-126,100,-113,100,100,-28,-127,47,113,-68,47,-128,-29,113,-146,-152,113,113,47,47,100,100,-191,100,47,100,100,-183,100,100,47,47,113,47,47,47,47,-130,100,100,-31,-32,-33,-156,100,113,-157,100,113,113,113,47,47,78,-185,100,47,47,-181,-182,-187,100,47,-98,47,47,-99,47,100,-137,47,-158,100,-159,100,-160,100,113,113,-147,113,-148,-67,-84,-176,47,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,100,47,47,-161,47,-162,47,113,100,47,-192,-121,-174,-178,-193,-120,-175,100,47,-173,47,47,-163,-164,-165,47,47,-149,113,47,47,-129,-131,100,-172,47,-168,47,47,47,-169,113,47,-86,100,100,-166,47,47,-167,-150,-85,-136,-138,100,-170,-171,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,36,37,57,58,59,60,61,62,63,64,66,67,68,80,84,88,89,90,91,92,94,105,106,107,117,121,124,125,126,127,145,147,155,156,161,162,170,171,172,173,175,176,181,182,186,187,188,189,195,206,208,209,210,214,220,226,228,229,233,239,241,242,249,250,252,253,254,255,256,257,259,260,261,262,263,266,267,268,273,274,275,276,277,278,279,280,281,283,285,297,298,301,305,306,308,310,315,316,320,321,324,328,331,333,335,341,345,346,347,355,358,359,365,368,369,374,379,380,381,383,385,392,393,394,395,397,400,402,403,404,406,409,410,411,412,413,416,417,418,419,420,425,426,429,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,475,476,477,478,479,480,481,482,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,527,529,530,537,538,541,546,548,549,551,552,553,554,555,560,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,580,585,586,587,588,589,590,591,592,593,594,597,599,600,601,602,603,604,605,607,610,611,612,613,],[48,48,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,76,-63,-65,-66,98,114,98,-3,-20,98,98,98,98,98,98,98,98,98,114,98,98,98,98,98,98,-64,98,114,114,-119,-92,98,98,114,114,98,114,98,-24,-208,-209,98,114,-22,48,98,114,98,-23,-118,-210,-211,114,98,114,98,98,-188,98,76,-112,98,98,76,114,114,48,114,98,98,-25,98,-26,98,-27,114,-151,-153,-154,-155,114,114,114,98,98,98,-78,-79,-80,-81,-82,-83,98,98,-189,-190,98,-30,-126,98,-113,98,98,-28,-127,48,114,-68,48,-128,-29,114,-146,-152,114,114,48,48,98,98,-191,98,48,98,98,-183,98,98,48,48,114,48,48,48,48,-130,98,98,-31,-32,-33,-156,98,114,-157,98,114,114,114,48,48,76,-185,98,48,48,-181,-182,-187,98,48,-98,48,48,-99,48,98,-137,48,-158,98,-159,98,-160,98,114,114,-147,114,-148,-67,-84,-176,48,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,98,48,48,-161,48,-162,48,114,98,48,-192,-121,-174,-178,-193,-120,-175,98,48,-173,48,48,-163,-164,-165,48,48,-149,114,48,48,-129,-131,98,-172,48,-168,48,48,48,-169,114,48,-86,98,98,-166,48,48,-167,-150,-85,-136,-138,98,-170,-171,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,36,37,57,58,59,60,61,62,63,64,66,67,68,80,84,88,89,90,91,92,94,105,106,107,117,121,124,125,126,127,145,147,155,156,161,162,170,171,172,173,175,176,181,182,186,187,188,189,195,206,208,209,210,214,220,226,228,229,233,239,241,242,249,250,252,253,254,255,256,257,259,260,261,262,263,266,267,268,273,274,275,276,277,278,279,280,281,283,285,297,298,301,305,306,308,310,315,316,320,321,324,328,331,333,335,341,345,346,347,355,358,359,365,368,369,374,379,380,381,383,385,392,393,394,395,397,400,402,403,404,406,409,410,411,412,413,416,417,418,419,420,425,426,429,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,470,475,476,477,478,479,480,481,482,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,521,525,526,527,529,530,537,538,541,546,548,549,551,552,553,554,555,560,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,580,585,586,587,588,589,590,591,592,593,594,597,599,600,601,602,603,604,605,607,610,611,612,613,],[49,49,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,77,-63,-65,-66,99,115,99,-3,-20,99,99,99,99,99,99,99,99,99,115,99,99,99,99,99,99,-64,99,115,115,-119,-92,99,99,115,115,99,115,99,-24,-208,-209,99,115,-22,49,99,115,99,-23,-118,-210,-211,115,99,115,99,99,-188,99,77,-112,99,99,77,115,115,49,115,99,99,-25,99,-26,99,-27,115,-151,-153,-154,-155,115,115,115,99,99,99,-78,-79,-80,-81,-82,-83,99,99,-189,-190,99,-30,-126,99,-113,99,99,-28,-127,49,115,-68,49,-128,-29,115,-146,-152,115,115,49,49,99,99,-191,99,49,99,99,-183,99,99,49,49,115,49,49,49,49,-130,99,99,-31,-32,-33,-156,99,115,-157,99,115,115,115,49,49,77,-185,99,49,49,-181,-182,-187,99,49,-98,49,49,-99,49,99,-137,49,-158,99,-159,99,-160,99,115,115,-147,115,-148,-67,-84,-176,49,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,99,49,49,-161,49,-162,49,115,99,49,-192,-121,-174,-178,-193,-120,-175,99,49,-173,49,49,-163,-164,-165,49,49,-149,115,49,49,-129,-131,99,-172,49,-168,49,49,49,-169,115,49,-86,99,99,-166,49,49,-167,-150,-85,-136,-138,99,-170,-171,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,36,57,58,80,94,106,107,117,121,126,127,147,156,161,162,171,172,173,176,182,186,187,188,189,206,210,220,226,233,239,241,242,249,253,255,257,259,260,261,262,263,266,267,268,297,298,305,306,310,320,321,324,328,331,333,335,341,345,346,347,355,358,359,365,374,380,385,394,395,397,400,402,403,404,406,411,412,413,416,418,419,425,426,429,430,431,434,436,439,441,446,448,450,456,457,460,461,462,463,466,470,475,477,479,481,482,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,610,612,613,],[50,50,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,-63,-65,-66,50,-3,-20,50,-64,50,50,-119,-92,50,50,50,-24,-208,-209,50,-22,50,50,-23,-118,-210,-211,50,50,-188,50,-112,50,50,50,50,50,-25,-26,-27,50,-151,-153,-154,-155,50,50,50,-189,-190,-30,-126,-113,-28,-127,50,50,-68,50,-128,-29,50,-146,-152,50,50,50,50,-191,50,-183,50,50,50,50,50,50,50,-130,-31,-32,-33,-156,50,-157,50,50,50,50,50,50,-185,50,50,-181,-182,-187,50,-98,50,50,-99,50,-137,50,-158,-159,-160,50,50,-147,50,-148,-67,-84,-176,50,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,50,50,-161,50,-162,50,50,50,-192,-121,-174,-178,-193,-120,-175,50,-173,50,50,-163,-164,-165,50,50,-149,50,50,50,-129,-131,-172,50,-168,50,50,50,-169,50,50,-86,-166,50,50,-167,-150,-85,-136,-138,-170,-171,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[52,52,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,52,-23,-118,-210,-211,-188,-112,52,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,52,-68,52,-128,-29,-146,52,52,-191,52,-183,52,52,52,52,52,52,-130,-31,-32,-33,52,52,-185,52,52,-181,-182,-187,52,-98,52,52,-99,52,-137,52,-147,-148,-67,-84,-176,52,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,52,52,52,52,52,-192,-121,-174,-178,-193,-120,-175,52,52,52,52,52,-149,52,52,-129,-131,52,52,52,52,52,-86,52,52,-150,-85,-136,-138,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[53,53,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,53,-23,-118,-210,-211,-188,-112,53,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,53,-68,53,-128,-29,-146,53,53,-191,53,-183,53,53,53,53,53,53,-130,-31,-32,-33,53,53,-185,53,53,-181,-182,-187,53,-98,53,53,-99,53,-137,53,-147,-148,-67,-84,-176,53,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,53,53,53,53,53,-192,-121,-174,-178,-193,-120,-175,53,53,53,53,53,-149,53,53,-129,-131,53,53,53,53,53,-86,53,53,-150,-85,-136,-138,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,173,182,186,187,188,210,226,242,253,255,257,297,298,305,306,310,320,321,324,331,333,335,341,346,359,365,374,380,385,394,395,400,402,403,404,406,411,412,413,430,431,436,439,441,446,448,450,456,457,460,461,462,463,466,470,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,529,537,546,548,549,551,552,553,554,555,561,563,564,570,571,572,574,576,578,579,586,588,589,590,593,594,601,602,604,605,607,610,],[54,54,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,54,-23,-118,-210,-211,-188,-112,54,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,54,-68,54,-128,-29,-146,54,54,-191,54,-183,54,54,54,54,54,54,-130,-31,-32,-33,54,54,-185,54,54,-181,-182,-187,54,-98,54,54,-99,54,-137,54,-147,-148,-67,-84,-176,54,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,54,54,54,54,54,-192,-121,-174,-178,-193,-120,-175,54,54,54,54,54,-149,54,54,-129,-131,54,54,54,54,54,-86,54,54,-150,-85,-136,-138,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,36,57,58,80,94,106,107,117,121,126,127,147,156,161,162,171,172,173,176,182,186,187,188,189,206,210,220,226,233,239,241,242,249,253,255,257,259,260,261,262,263,266,267,268,297,298,305,306,310,320,321,324,328,331,333,335,341,345,346,347,355,358,359,365,374,380,385,394,395,397,400,402,403,404,406,411,412,413,416,418,419,425,426,429,430,431,434,436,439,441,446,448,450,456,457,460,461,462,463,466,470,475,477,479,481,482,485,486,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,573,574,576,578,579,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,610,612,613,],[56,56,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,56,-63,-65,-66,56,-3,-20,56,-64,56,56,-119,-92,56,56,56,-24,-208,-209,56,-22,56,56,-23,-118,-210,-211,56,56,-188,56,-112,56,56,56,56,56,-25,-26,-27,56,-151,-153,-154,-155,56,56,56,-189,-190,-30,-126,-113,-28,-127,56,56,-68,56,-128,-29,56,-146,-152,56,56,56,56,-191,56,-183,56,56,56,56,56,56,56,-130,-31,-32,-33,-156,56,-157,56,56,56,56,56,56,-185,56,56,-181,-182,-187,56,-98,56,56,-99,56,-137,56,-158,-159,-160,56,56,-147,56,-148,-67,-84,-176,56,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,56,56,-161,56,-162,56,56,56,-192,-121,-174,-178,-193,-120,-175,56,-173,56,56,-163,-164,-165,56,56,-149,56,56,56,-129,-131,-172,56,-168,56,56,56,-169,56,56,-86,-166,56,56,-167,-150,-85,-136,-138,-170,-171,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,28,29,30,31,37,57,58,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,94,95,105,117,120,121,124,125,145,155,156,161,162,170,171,172,173,175,176,180,181,182,186,187,188,195,208,209,210,214,220,226,228,229,233,238,242,245,250,252,253,254,255,256,257,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,297,298,301,304,305,306,308,310,315,316,319,320,321,323,324,329,331,332,333,334,335,341,346,359,365,368,369,374,378,379,380,381,383,385,391,392,393,394,395,400,402,403,404,406,409,410,411,412,413,415,417,420,427,430,431,434,436,438,439,441,446,448,450,452,456,457,460,461,462,463,464,466,469,470,473,476,478,480,484,485,488,489,490,497,498,500,503,504,507,508,510,511,514,516,517,518,519,520,521,524,525,526,528,529,536,537,539,540,541,546,547,548,549,551,552,553,554,555,560,561,563,564,568,569,570,571,572,574,576,578,579,580,586,588,589,590,593,594,597,599,601,602,604,605,607,610,611,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,31,-63,-65,-66,31,31,-3,-20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-64,173,31,-119,189,-92,31,31,31,31,-24,-208,-209,31,239,-22,31,31,239,250,31,-23,-118,-210,-211,31,31,31,-188,31,31,-112,31,31,31,324,31,333,31,31,-25,31,-26,31,-27,355,358,359,31,31,31,-78,-79,-80,-81,-82,-83,31,365,31,-189,-190,31,380,-30,-126,31,-113,31,31,380,-28,-127,394,31,400,-68,402,31,404,-128,-29,-146,31,31,31,31,-191,439,31,31,31,31,-183,439,31,31,31,31,31,31,31,31,-130,31,31,-31,-32,-33,470,31,31,486,31,31,31,-185,31,31,31,-181,-182,-187,31,31,-98,31,31,-99,31,31,-137,525,31,529,31,31,31,537,-147,-148,-67,-84,546,380,-176,31,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,31,560,31,31,563,31,570,31,573,574,31,31,439,-192,-121,-174,-178,-193,-120,-175,31,31,31,31,588,589,31,31,-149,31,31,-129,-131,31,31,31,31,31,31,-86,31,31,31,31,-150,-85,-136,-138,31,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,57,58,94,117,121,156,161,162,172,182,186,187,188,210,226,253,255,257,297,298,305,306,310,320,321,331,335,341,346,374,385,406,411,412,413,436,446,448,450,457,462,466,485,488,489,490,500,504,507,508,510,511,514,516,517,518,519,520,548,549,551,552,553,554,555,572,578,579,594,604,605,607,610,],[-21,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-3,-20,-64,-119,-92,-24,-208,-209,-22,-23,-118,-210,-211,-188,-112,-25,-26,-27,-189,-190,-30,-126,-113,-28,-127,-68,-128,-29,-146,-191,-183,-130,-31,-32,-33,-185,-181,-182,-187,-98,-99,-137,-147,-148,-67,-84,-176,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,-192,-121,-174,-178,-193,-120,-175,-149,-129,-131,-86,-150,-85,-136,-138,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,28,29,30,55,57,58,94,96,97,98,99,100,101,102,103,117,121,156,161,162,172,173,174,182,186,187,188,210,226,242,243,253,255,257,259,260,261,262,263,297,298,305,306,310,320,321,324,325,326,331,333,335,338,339,341,346,347,359,365,374,380,385,394,395,398,400,402,403,404,406,411,412,413,416,419,426,429,430,431,436,439,441,446,448,450,456,457,458,459,460,461,462,463,466,467,468,470,475,477,479,485,488,489,490,500,503,504,507,508,510,511,514,516,517,518,519,520,525,526,527,529,530,537,538,546,548,549,551,552,553,554,555,561,562,563,564,565,566,567,570,571,572,574,576,578,579,581,582,583,585,586,587,588,589,590,591,592,593,594,600,601,602,603,604,605,607,608,610,612,613,616,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-63,-65,-66,-207,-3,-20,-64,174,-132,-201,-202,-203,-204,-205,-206,-119,-92,-24,-208,-209,-22,-21,-145,-23,-118,-210,-211,-188,-112,331,-133,-25,-26,-27,346,-151,-153,-154,-155,-189,-190,-30,-126,-113,-28,-127,-21,396,-108,-68,-21,-128,408,-139,-29,-146,-152,-21,-21,-191,-21,-183,-21,457,-110,-21,-21,462,-21,-130,-31,-32,-33,-156,-157,485,488,489,490,-185,-21,505,-181,-182,-187,517,-98,-109,-111,518,519,-99,520,-137,-140,-141,-21,-158,-159,-160,-147,-148,-67,-84,-176,550,-123,-184,-179,-180,-177,-122,-186,-96,-100,-97,-101,-21,562,-161,-21,-162,-21,572,-21,-192,-121,-174,-178,-193,-120,-175,585,-173,-21,587,-163,-164,-165,-21,591,-149,-21,594,-129,-131,596,598,-142,-172,600,-168,-21,-21,603,-169,604,605,-86,-166,612,613,-167,-150,-85,-136,-143,-138,-170,-171,-144,]),'TIMES':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[61,-41,-204,-60,-61,-62,-203,-201,-202,-207,61,-204,-201,-202,-203,-42,-43,-201,-202,-203,61,-52,-53,-54,-55,61,61,61,61,61,61,-44,-45,61,61,-41,61,-204,-60,-61,-40,-42,-43,-52,-53,61,61,61,61,61,61,-145,61,-204,61,-112,-204,61,61,61,61,-113,61,61,61,61,-46,61,61,61,61,61,61,61,61,61,61,]),'DIVIDE':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[62,-41,-204,-60,-61,-62,-203,-201,-202,-207,62,-204,-201,-202,-203,-42,-43,-201,-202,-203,62,-52,-53,-54,-55,62,62,62,62,62,62,-44,-45,62,62,-41,62,-204,-60,-61,-40,-42,-43,-52,-53,62,62,62,62,62,62,-145,62,-204,62,-112,-204,62,62,62,62,-113,62,62,62,62,-46,62,62,62,62,62,62,62,62,62,62,]),'INT_DIVIDE':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[63,-41,-204,-60,-61,-62,-203,-201,-202,-207,63,-204,-201,-202,-203,-42,-43,-201,-202,-203,63,-52,-53,-54,-55,63,63,63,63,63,63,-44,-45,63,63,-41,63,-204,-60,-61,-40,-42,-43,-52,-53,63,63,63,63,63,63,-145,63,-204,63,-112,-204,63,63,63,63,-113,63,63,63,63,-46,63,63,63,63,63,63,63,63,63,63,]),'MODULE':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[64,-41,-204,-60,-61,-62,-203,-201,-202,-207,64,-204,-201,-202,-203,-42,-43,-201,-202,-203,64,-52,-53,-54,-55,64,64,64,64,64,64,-44,-45,64,64,-41,64,-204,-60,-61,-40,-42,-43,-52,-53,64,64,64,64,64,64,-145,64,-204,64,-112,-204,64,64,64,64,-113,64,64,64,64,-46,64,64,64,64,64,64,64,64,64,64,]),'DOT':([20,23,24,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,219,221,226,231,232,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[65,-41,81,-204,-60,-61,-62,-203,-201,-202,-207,65,-204,-201,-202,-203,-42,-43,-201,-202,-203,65,-52,-53,-54,-55,65,65,65,65,65,65,-44,-45,65,65,-41,65,-204,-60,-61,-40,-42,-43,-52,-53,65,65,65,65,65,65,-145,65,-204,302,65,-112,-204,317,65,65,65,65,-113,65,65,65,65,-46,65,65,65,65,65,65,65,65,65,65,]),'QUESTION':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[66,-41,-204,-60,-61,-62,-203,-201,-202,-207,66,-204,-201,-202,-203,-42,-43,-201,-202,-203,66,-52,-53,-54,-55,66,66,66,66,66,66,-44,-45,66,66,-41,66,-204,-60,-61,-40,-42,-43,-52,-53,66,66,66,66,66,66,-145,66,-204,66,-112,-204,66,66,66,66,-113,66,66,66,66,-46,66,66,66,66,66,66,66,66,66,66,]),'DOUBLE_DOT':([20,23,26,44,45,46,47,48,49,55,69,72,76,77,78,85,86,98,99,100,116,118,119,122,123,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,148,149,150,151,160,165,166,167,168,169,174,213,218,221,226,231,234,251,296,299,310,311,342,343,344,373,440,453,471,474,502,513,531,532,533,575,],[67,-41,-204,-60,-61,-62,-203,-201,-202,-207,67,-204,-201,-202,-203,-42,-43,-201,-202,-203,67,-52,-53,-54,-55,67,67,67,67,67,67,-44,-45,67,67,-41,67,-204,-60,-61,-40,-42,-43,-52,-53,67,67,67,67,67,67,-145,67,-204,67,-112,-204,67,67,67,67,-113,67,67,67,67,-46,67,67,67,67,67,67,67,67,67,67,]),'RPAREN':([22,23,44,45,46,55,68,69,71,72,75,76,77,78,84,98,99,100,101,102,103,122,123,128,129,130,131,132,133,134,135,137,139,140,141,142,143,144,148,149,150,151,152,159,160,161,162,165,166,167,168,169,171,174,176,187,188,192,193,196,197,199,208,213,215,216,217,220,226,229,233,237,240,244,246,282,293,294,295,296,299,301,303,308,310,311,312,314,315,316,318,345,360,361,362,363,364,373,375,381,382,383,386,388,393,396,401,414,418,425,432,433,434,437,442,445,451,454,472,483,491,492,494,499,534,535,575,],[70,-41,-60,-61,-62,-207,138,144,146,-204,-102,-201,-202,-203,158,-201,-202,-203,-204,-205,-206,-54,-55,-34,-35,-36,-37,-38,-39,-44,-45,-57,211,212,-204,-60,-61,-40,-42,-43,-52,-53,-104,227,-114,-208,-209,-47,-48,-49,-50,-51,238,-145,245,-210,-211,272,-69,-74,-75,284,158,-59,-103,-105,300,304,-112,313,319,323,329,332,334,-73,373,227,-117,-56,-58,376,378,-212,-113,-115,384,-116,387,389,391,415,-70,-71,-72,-77,-76,-46,435,443,444,-212,447,449,455,-107,-106,469,473,484,-212,497,498,501,506,509,512,515,528,536,540,-89,-91,547,568,569,-90,]),'REQUIRED':([22,147,171,176,220,233,239,241,345,397,418,425,434,481,482,],[80,80,80,80,80,80,328,80,80,328,80,80,80,80,80,]),'COLON':([23,44,45,46,55,72,98,99,100,101,102,103,122,123,128,129,130,131,132,133,134,135,136,137,144,148,149,150,151,165,166,167,168,169,174,213,226,296,299,310,340,373,584,609,],[-41,-60,-61,-62,-207,-204,-201,-202,-203,-204,-205,-206,-54,-55,-34,-35,-36,-37,-38,-39,-44,-45,209,-57,-40,-42,-43,-52,-53,-47,-48,-49,-50,-51,-145,-59,-112,-56,-58,-113,410,-46,599,614,]),'COMMA':([23,44,45,46,50,51,55,56,71,72,75,96,97,98,99,100,101,102,103,113,114,115,122,123,128,129,130,131,132,133,134,135,137,144,148,149,150,151,152,159,160,165,166,167,168,169,174,177,179,213,215,216,226,237,243,244,292,294,296,299,303,310,311,314,318,325,326,330,338,339,373,398,414,458,459,467,468,472,483,499,522,523,534,535,556,577,581,582,583,595,606,608,615,616,],[-41,-60,-61,-62,-197,-198,-207,-199,147,-204,-102,175,-132,-201,-202,-203,-204,-205,-206,-194,-195,-196,-54,-55,-34,-35,-36,-37,-38,-39,-44,-45,-57,-40,-42,-43,-52,-53,-104,228,-114,-47,-48,-49,-50,-51,-145,175,249,-59,-103,-105,-112,147,-133,147,-200,228,-56,-58,147,-113,-115,228,147,397,-108,147,409,-139,-46,-110,147,-109,-111,-140,-141,147,147,147,175,559,147,147,175,-134,409,597,-142,175,-135,-143,175,-144,]),'ASSIGN':([26,82,83,93,108,109,183,184,185,286,287,288,336,348,349,370,371,372,421,422,423,465,493,],[87,155,157,170,180,181,252,254,256,368,181,369,405,417,420,252,254,256,476,478,480,524,541,]),'PLUS_EQUAL':([26,72,141,218,231,],[88,88,88,88,88,]),'MINUS_EQUAL':([26,72,141,218,231,],[89,89,89,89,89,]),'TIMES_EQUAL':([26,72,141,218,231,],[90,90,90,90,90,]),'DIVIDE_EQUAL':([26,72,141,218,231,],[91,91,91,91,91,]),'MODULE_EQUAL':([26,72,141,218,231,],[92,92,92,92,92,]),'ELSE':([28,489,],[95,-67,]),'LBRACKET':([33,171,176,405,464,559,599,614,],[105,241,241,464,521,580,611,611,]),'LESS':([33,34,55,56,98,99,100,174,194,196,197,198,],[106,107,-207,127,-201,-202,-203,-145,277,-205,-206,277,]),'GREATER':([50,51,55,56,98,99,100,113,114,115,174,178,194,196,197,198,207,292,337,],[-197,-198,-207,-199,-201,-202,-203,-194,-195,-196,-145,248,276,-205,-206,276,292,-200,407,]),'RBRACKET':([55,75,97,98,99,100,101,102,103,152,174,177,215,216,243,330,522,523,556,577,595,606,615,],[-207,-102,-132,-201,-202,-203,-204,-205,-206,-104,-145,247,-103,-105,-133,401,557,558,577,-134,606,-135,616,]),'GREATER_EQUAL':([55,98,99,100,174,194,196,197,198,],[-207,-201,-202,-203,-145,278,-205,-206,278,]),'LESS_EQUAL':([55,98,99,100,174,194,196,197,198,],[-207,-201,-202,-203,-145,279,-205,-206,279,]),'EQUALS':([55,98,99,100,174,194,196,197,198,],[-207,-201,-202,-203,-145,280,-205,-206,280,]),'NOT_EQUALS':([55,98,99,100,174,194,196,197,198,],[-207,-201,-202,-203,-145,281,-205,-206,281,]),'AND':([55,98,99,100,101,102,103,174,192,193,196,197,199,282,360,361,362,363,364,366,],[-207,-201,-202,-203,-204,-205,-206,-145,273,-69,-74,-75,273,-73,-70,-71,-72,-77,-76,273,]),'OR':([55,98,99,100,101,102,103,174,192,193,196,197,199,282,360,361,362,363,364,366,],[-207,-201,-202,-203,-204,-205,-206,-145,274,-69,-74,-75,274,-73,-70,-71,-72,-77,-76,274,]),'ARROW':([70,146,304,319,378,391,498,547,],[145,214,379,392,438,452,145,214,]),'READLINESYNC':([81,302,317,],[154,377,390,]),'NEW':([87,155,157,170,],[164,223,225,236,]),'EXTENDS':([120,],[190,]),'IMPLEMENTS':([120,270,428,],[191,356,487,]),'NOT':([124,125,273,274,285,],[195,195,195,195,195,]),'FINAL':([189,259,260,261,262,263,347,355,358,416,419,426,429,475,477,479,486,527,530,538,562,565,566,567,573,585,587,591,592,600,603,612,613,],[266,266,-151,-153,-154,-155,-152,266,266,-156,-157,266,266,-158,-159,-160,266,-161,-162,266,-173,-163,-164,-165,266,-172,-168,-169,266,-166,-167,-170,-171,]),'CONST':([189,259,260,261,262,263,347,355,358,416,419,426,429,475,477,479,486,527,530,538,562,565,566,567,573,585,587,591,592,600,603,612,613,],[267,267,-151,-153,-154,-155,-152,267,267,-156,-157,267,267,-158,-159,-160,267,-161,-162,267,-173,-163,-164,-165,267,-172,-168,-169,267,-166,-167,-170,-171,]),'WITH':([270,],[357,]),'IN':([286,],[367,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compiler':([0,],[1,]),'statement_composed':([0,173,324,333,359,365,380,394,400,402,404,439,470,525,529,537,546,563,570,574,588,589,],[2,242,395,403,430,431,441,456,460,461,463,503,526,561,564,571,576,586,590,593,601,602,]),'statement':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[3,57,3,57,3,3,3,3,3,3,57,3,3,57,3,57,57,3,57,57,57,57,57,3,57,3,57,3,3,3,57,3,57,3,57,3,57,57,3,3,57,57,57,57,]),'print_stmt':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input_stmt':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'control_structures':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'function':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'lambda_function':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list_def':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'map_def':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'variable_def':([0,2,126,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[11,11,202,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'variable_only_def':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call':([0,2,65,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[14,14,135,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_statement':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'incdec_statement':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,432,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,492,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'object_instantiation':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'break_stmt':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expression':([0,2,22,37,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,145,155,170,173,181,208,209,214,220,228,229,233,242,252,254,256,301,308,315,316,324,333,359,365,368,369,379,380,381,383,392,393,394,395,400,402,403,404,417,420,430,431,434,438,439,441,452,456,460,461,463,470,476,478,480,503,525,526,529,537,541,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[20,20,69,116,128,129,130,131,132,133,136,137,140,160,165,166,167,168,169,213,221,234,20,251,160,296,299,69,311,160,69,20,342,343,344,160,160,160,160,20,20,20,20,234,221,440,20,160,160,453,160,20,20,20,20,20,20,471,474,20,20,69,502,20,20,513,20,20,20,20,20,531,532,533,20,20,20,20,20,575,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'value':([0,2,22,31,37,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,105,124,125,145,155,170,173,175,181,195,208,209,214,220,228,229,233,242,250,252,254,256,273,274,275,283,285,301,308,315,316,324,333,359,365,368,369,379,380,381,383,392,393,394,395,400,402,403,404,409,410,417,420,430,431,434,438,439,441,452,456,460,461,463,464,470,476,478,480,503,521,525,526,529,537,541,546,560,561,563,564,570,571,574,576,580,586,588,589,590,593,597,599,601,602,611,],[23,23,23,97,23,23,23,23,23,23,23,23,23,139,23,23,23,23,23,23,97,194,194,23,23,23,23,243,23,282,23,23,23,23,23,23,23,23,340,23,23,23,194,194,362,364,194,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,340,468,23,23,23,23,23,23,23,23,23,23,23,23,23,97,23,23,23,23,23,97,23,23,23,23,23,23,584,23,23,23,23,23,23,23,97,23,23,23,23,23,609,468,23,23,97,]),'type':([0,2,22,36,80,106,107,126,127,147,171,173,176,189,206,220,233,239,241,242,249,259,266,267,268,324,328,333,345,355,358,359,365,380,394,395,397,400,402,403,404,418,425,426,429,430,431,434,439,441,456,460,461,463,470,481,482,486,503,525,526,529,537,538,546,561,563,564,570,571,573,574,576,586,588,589,590,592,593,601,602,],[27,27,79,110,153,178,179,201,207,79,79,27,79,264,289,79,79,327,79,27,337,264,350,351,352,27,399,27,79,264,264,27,27,27,27,27,327,27,27,27,27,79,79,264,264,27,27,79,27,27,27,27,27,27,27,79,79,264,27,27,27,27,27,264,27,27,27,27,27,27,264,27,27,27,27,27,27,264,27,27,27,]),'if_block':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'while_loop':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'for_loop':([0,2,173,242,324,333,359,365,380,394,395,400,402,403,404,430,431,439,441,456,460,461,463,470,503,525,526,529,537,546,561,563,564,570,571,574,576,586,588,589,590,593,601,602,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'set_type':([0,2,22,36,80,106,107,126,127,147,171,173,176,189,206,220,233,239,241,242,249,259,266,267,268,324,328,333,345,355,358,359,365,380,394,395,397,400,402,403,404,418,425,426,429,430,431,434,439,441,456,460,461,463,470,481,482,486,503,525,526,529,537,538,546,561,563,564,570,571,573,574,576,586,588,589,590,592,593,601,602,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'set_value':([0,2,22,31,37,59,60,61,62,63,64,66,67,68,84,88,89,90,91,92,105,124,125,145,155,170,173,175,181,195,208,209,214,220,228,229,233,242,250,252,254,256,273,274,275,283,285,301,308,315,316,324,333,359,365,368,369,379,380,381,383,392,393,394,395,400,402,403,404,409,410,417,420,430,431,434,438,439,441,452,456,460,461,463,464,470,476,478,480,503,521,525,526,529,537,541,546,560,561,563,564,570,571,574,576,580,586,588,589,590,593,597,599,601,602,611,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'parameters':([22,171,176,220,233,241,345,418,425,434,481,482,],[71,237,244,303,318,330,414,472,483,499,534,535,]),'parameter':([22,147,171,176,220,233,241,345,418,425,434,481,482,],[75,215,75,75,75,75,75,75,75,75,75,75,75,]),'else_block':([28,],[94,]),'value_list':([31,105,464,521,580,611,],[96,177,522,556,595,615,]),'argument_list':([84,208,229,301,308,315,316,381,383,393,],[159,294,314,314,314,314,314,314,314,314,]),'conditions':([124,125,285,],[192,199,366,]),'condition':([124,125,273,274,285,],[193,193,360,361,193,]),'for_init':([126,],[200,]),'empty':([126,208,229,301,308,315,316,381,383,393,432,],[203,295,295,295,295,295,295,295,295,295,494,]),'anonymous_function':([155,170,368,369,],[222,235,235,222,]),'optional_parameters':([171,176,],[240,246,]),'class_body':([189,355,358,486,573,],[259,426,429,538,592,]),'class_member':([189,259,355,358,426,429,486,538,573,592,],[260,347,260,260,347,347,260,347,260,347,]),'class_property':([189,259,355,358,426,429,486,538,573,592,],[261,261,261,261,261,261,261,261,261,261,]),'class_method':([189,259,355,358,426,429,486,538,573,592,],[262,262,262,262,262,262,262,262,262,262,]),'constructor':([189,259,355,358,426,429,486,538,573,592,],[263,263,263,263,263,263,263,263,263,263,]),'comparison_operator':([194,198,],[275,283,]),'argument_list_opt':([208,229,301,308,315,316,381,383,393,],[293,312,375,382,386,388,442,445,454,]),'named_parameters':([239,],[325,]),'named_parameter':([239,397,],[326,458,]),'map_entries':([250,560,],[338,581,]),'map_entry':([250,409,560,],[339,467,339,]),'for_update':([432,],[491,]),'list_of_lists':([464,],[523,]),'map_of_lists':([560,],[582,]),'map_list_entry':([560,597,],[583,608,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compiler","S'",1,None,None,None),
  ('compiler -> statement_composed','compiler',1,'p_compiler','analizador_sintactico.py',21),
  ('statement_composed -> statement','statement_composed',1,'p_statement_composed','analizador_sintactico.py',25),
  ('statement_composed -> statement_composed statement','statement_composed',2,'p_statement_composed','analizador_sintactico.py',26),
  ('statement -> print_stmt','statement',1,'p_statement','analizador_sintactico.py',33),
  ('statement -> input_stmt','statement',1,'p_statement','analizador_sintactico.py',34),
  ('statement -> control_structures','statement',1,'p_statement','analizador_sintactico.py',35),
  ('statement -> function','statement',1,'p_statement','analizador_sintactico.py',36),
  ('statement -> lambda_function','statement',1,'p_statement','analizador_sintactico.py',37),
  ('statement -> list_def','statement',1,'p_statement','analizador_sintactico.py',38),
  ('statement -> map_def','statement',1,'p_statement','analizador_sintactico.py',39),
  ('statement -> variable_def','statement',1,'p_statement','analizador_sintactico.py',40),
  ('statement -> variable_only_def','statement',1,'p_statement','analizador_sintactico.py',41),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',42),
  ('statement -> function_call','statement',1,'p_statement','analizador_sintactico.py',43),
  ('statement -> return_statement','statement',1,'p_statement','analizador_sintactico.py',44),
  ('statement -> incdec_statement','statement',1,'p_statement','analizador_sintactico.py',45),
  ('statement -> class_def','statement',1,'p_statement','analizador_sintactico.py',46),
  ('statement -> object_instantiation','statement',1,'p_statement','analizador_sintactico.py',47),
  ('statement -> break_stmt','statement',1,'p_statement','analizador_sintactico.py',48),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizador_sintactico.py',49),
  ('statement -> <empty>','statement',0,'p_empty_statement','analizador_sintactico.py',53),
  ('variable_only_def -> type ID SEMICOLON','variable_only_def',3,'p_variable_only_def','analizador_sintactico.py',61),
  ('variable_only_def -> DYNAMIC ID SEMICOLON','variable_only_def',3,'p_variable_only_def','analizador_sintactico.py',62),
  ('variable_only_def -> VAR ID SEMICOLON','variable_only_def',3,'p_variable_only_def','analizador_sintactico.py',63),
  ('variable_only_def -> STATIC type ID SEMICOLON','variable_only_def',4,'p_variable_only_def','analizador_sintactico.py',64),
  ('variable_only_def -> STATIC VAR ID SEMICOLON','variable_only_def',4,'p_variable_only_def','analizador_sintactico.py',65),
  ('variable_only_def -> STATIC DYNAMIC ID SEMICOLON','variable_only_def',4,'p_variable_only_def','analizador_sintactico.py',66),
  ('variable_def -> type ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',83),
  ('variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',84),
  ('variable_def -> VAR ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',85),
  ('variable_def -> STATIC type ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',86),
  ('variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',87),
  ('variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',88),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',123),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',124),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',125),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',126),
  ('expression -> expression INT_DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',127),
  ('expression -> expression MODULE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',128),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','analizador_sintactico.py',150),
  ('expression -> value','expression',1,'p_expression_value','analizador_sintactico.py',154),
  ('expression -> ID INCREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',158),
  ('expression -> ID DECREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',159),
  ('expression -> expression DOT ID','expression',3,'p_expression_property_access','analizador_sintactico.py',163),
  ('expression -> expression DOT function_call','expression',3,'p_expression_property_access','analizador_sintactico.py',164),
  ('expression -> expression DOT ID LPAREN argument_list_opt RPAREN','expression',6,'p_expression_method_call','analizador_sintactico.py',168),
  ('expression -> ID PLUS_EQUAL expression','expression',3,'p_expression_compound_assign','analizador_sintactico.py',172),
  ('expression -> ID MINUS_EQUAL expression','expression',3,'p_expression_compound_assign','analizador_sintactico.py',173),
  ('expression -> ID TIMES_EQUAL expression','expression',3,'p_expression_compound_assign','analizador_sintactico.py',174),
  ('expression -> ID DIVIDE_EQUAL expression','expression',3,'p_expression_compound_assign','analizador_sintactico.py',175),
  ('expression -> ID MODULE_EQUAL expression','expression',3,'p_expression_compound_assign','analizador_sintactico.py',176),
  ('expression -> INCREMENT ID','expression',2,'p_expression_unary','analizador_sintactico.py',180),
  ('expression -> DECREMENT ID','expression',2,'p_expression_unary','analizador_sintactico.py',181),
  ('expression -> PLUS ID','expression',2,'p_expression_unary','analizador_sintactico.py',182),
  ('expression -> MINUS ID','expression',2,'p_expression_unary','analizador_sintactico.py',183),
  ('expression -> expression QUESTION expression COLON expression','expression',5,'p_expression_ternary','analizador_sintactico.py',187),
  ('expression -> expression DOUBLE_DOT expression','expression',3,'p_expression_cascade','analizador_sintactico.py',191),
  ('expression -> LPAREN parameters RPAREN ARROW expression','expression',5,'p_expression_lambda_anywhere','analizador_sintactico.py',195),
  ('expression -> LPAREN RPAREN ARROW expression','expression',4,'p_expression_lambda_anywhere','analizador_sintactico.py',196),
  ('expression -> TRUE','expression',1,'p_expression_bool_null_literals','analizador_sintactico.py',200),
  ('expression -> FALSE','expression',1,'p_expression_bool_null_literals','analizador_sintactico.py',201),
  ('expression -> NULL_LITERAL','expression',1,'p_expression_bool_null_literals','analizador_sintactico.py',202),
  ('control_structures -> if_block','control_structures',1,'p_control_structures','analizador_sintactico.py',210),
  ('control_structures -> if_block else_block','control_structures',2,'p_control_structures','analizador_sintactico.py',211),
  ('control_structures -> while_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',212),
  ('control_structures -> for_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',213),
  ('if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE','if_block',7,'p_if_block','analizador_sintactico.py',217),
  ('else_block -> ELSE LBRACE statement_composed RBRACE','else_block',4,'p_else_block','analizador_sintactico.py',221),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',225),
  ('conditions -> conditions AND condition','conditions',3,'p_conditions','analizador_sintactico.py',226),
  ('conditions -> conditions OR condition','conditions',3,'p_conditions','analizador_sintactico.py',227),
  ('condition -> value comparison_operator value','condition',3,'p_condition','analizador_sintactico.py',231),
  ('condition -> NOT value','condition',2,'p_condition','analizador_sintactico.py',232),
  ('condition -> TRUE','condition',1,'p_condition','analizador_sintactico.py',233),
  ('condition -> FALSE','condition',1,'p_condition','analizador_sintactico.py',234),
  ('condition -> ID comparison_operator value','condition',3,'p_condition','analizador_sintactico.py',235),
  ('condition -> ID comparison_operator ID','condition',3,'p_condition','analizador_sintactico.py',236),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',240),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',241),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',242),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',243),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',244),
  ('comparison_operator -> NOT_EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',245),
  ('while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE','while_loop',7,'p_while_loop','analizador_sintactico.py',249),
  ('for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE','for_loop',11,'p_for_loop','analizador_sintactico.py',257),
  ('for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE','for_loop',10,'p_for_loop','analizador_sintactico.py',258),
  ('for_init -> variable_def','for_init',1,'p_for_init','analizador_sintactico.py',266),
  ('for_init -> empty','for_init',1,'p_for_init','analizador_sintactico.py',267),
  ('for_update -> incdec_statement','for_update',1,'p_for_update','analizador_sintactico.py',271),
  ('for_update -> ID ASSIGN expression','for_update',3,'p_for_update','analizador_sintactico.py',272),
  ('for_update -> empty','for_update',1,'p_for_update','analizador_sintactico.py',273),
  ('break_stmt -> BREAK SEMICOLON','break_stmt',2,'p_break_stmt','analizador_sintactico.py',277),
  ('for_in_loop -> FOR LPAREN VAR ID IN ID RPAREN LBRACE statement_composed RBRACE','for_in_loop',10,'p_for_in_loop','analizador_sintactico.py',287),
  ('for_in_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE','for_in_loop',10,'p_for_in_loop','analizador_sintactico.py',288),
  ('try_catch_block -> TRY LBRACE statement_composed RBRACE CATCH LPAREN ID RPAREN LBRACE statement_composed RBRACE','try_catch_block',11,'p_try_catch_block','analizador_sintactico.py',296),
  ('function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',307),
  ('function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',308),
  ('function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',309),
  ('function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',310),
  ('function -> type ID LPAREN optional_parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',311),
  ('function -> VOID ID LPAREN optional_parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',312),
  ('parameters -> parameter','parameters',1,'p_parameters','analizador_sintactico.py',330),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizador_sintactico.py',331),
  ('parameter -> type ID','parameter',2,'p_parameter','analizador_sintactico.py',335),
  ('parameter -> REQUIRED type ID','parameter',3,'p_parameter','analizador_sintactico.py',336),
  ('optional_parameters -> LBRACKET parameters RBRACKET','optional_parameters',3,'p_optional_parameters','analizador_sintactico.py',340),
  ('optional_parameters -> LBRACE named_parameters RBRACE','optional_parameters',3,'p_optional_parameters','analizador_sintactico.py',341),
  ('named_parameters -> named_parameter','named_parameters',1,'p_named_parameters','analizador_sintactico.py',345),
  ('named_parameters -> named_parameters COMMA named_parameter','named_parameters',3,'p_named_parameters','analizador_sintactico.py',346),
  ('named_parameter -> type ID','named_parameter',2,'p_named_parameter','analizador_sintactico.py',353),
  ('named_parameter -> REQUIRED type ID','named_parameter',3,'p_named_parameter','analizador_sintactico.py',354),
  ('function_call -> ID LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','analizador_sintactico.py',358),
  ('function_call -> ID LPAREN argument_list RPAREN SEMICOLON','function_call',5,'p_function_call','analizador_sintactico.py',359),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizador_sintactico.py',370),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizador_sintactico.py',371),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',375),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',376),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','analizador_sintactico.py',380),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','analizador_sintactico.py',381),
  ('lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',407),
  ('lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',408),
  ('lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',409),
  ('lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',410),
  ('anonymous_function -> LPAREN parameters RPAREN LBRACE statement_composed RBRACE','anonymous_function',6,'p_anonymous_function','analizador_sintactico.py',414),
  ('anonymous_function -> LPAREN RPAREN LBRACE statement_composed RBRACE','anonymous_function',5,'p_anonymous_function','analizador_sintactico.py',415),
  ('variable_def -> VAR ID ASSIGN anonymous_function SEMICOLON','variable_def',5,'p_variable_def_anonymous_func','analizador_sintactico.py',419),
  ('variable_def -> type ID ASSIGN anonymous_function SEMICOLON','variable_def',5,'p_variable_def_anonymous_func','analizador_sintactico.py',420),
  ('list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON','list_def',5,'p_list_def','analizador_sintactico.py',428),
  ('list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON','list_def',10,'p_list_def','analizador_sintactico.py',429),
  ('list_def -> LIST LESS type GREATER ID SEMICOLON','list_def',6,'p_list_def','analizador_sintactico.py',430),
  ('list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET list_of_lists RBRACKET SEMICOLON','list_def',10,'p_list_def','analizador_sintactico.py',431),
  ('value_list -> value','value_list',1,'p_value_list','analizador_sintactico.py',435),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','analizador_sintactico.py',436),
  ('list_of_lists -> LBRACKET value_list RBRACKET','list_of_lists',3,'p_list_of_lists','analizador_sintactico.py',443),
  ('list_of_lists -> list_of_lists COMMA LBRACKET value_list RBRACKET','list_of_lists',5,'p_list_of_lists','analizador_sintactico.py',444),
  ('map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',12,'p_map_def','analizador_sintactico.py',451),
  ('map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',7,'p_map_def','analizador_sintactico.py',452),
  ('map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_of_lists RBRACE SEMICOLON','map_def',12,'p_map_def','analizador_sintactico.py',453),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries','analizador_sintactico.py',457),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries','analizador_sintactico.py',458),
  ('map_entry -> value COLON value','map_entry',3,'p_map_entry','analizador_sintactico.py',462),
  ('map_of_lists -> map_list_entry','map_of_lists',1,'p_map_of_lists','analizador_sintactico.py',466),
  ('map_of_lists -> map_of_lists COMMA map_list_entry','map_of_lists',3,'p_map_of_lists','analizador_sintactico.py',467),
  ('map_list_entry -> value COLON LBRACKET value_list RBRACKET','map_list_entry',5,'p_map_list_entry','analizador_sintactico.py',474),
  ('set_value -> LBRACE value_list RBRACE','set_value',3,'p_set_value','analizador_sintactico.py',478),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','analizador_sintactico.py',491),
  ('class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',492),
  ('class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',493),
  ('class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',9,'p_class_def','analizador_sintactico.py',494),
  ('class_def -> CLASS ID EXTENDS ID WITH ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',11,'p_class_def','analizador_sintactico.py',495),
  ('class_body -> class_member','class_body',1,'p_class_body','analizador_sintactico.py',499),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','analizador_sintactico.py',500),
  ('class_member -> class_property','class_member',1,'p_class_member','analizador_sintactico.py',504),
  ('class_member -> class_method','class_member',1,'p_class_member','analizador_sintactico.py',505),
  ('class_member -> constructor','class_member',1,'p_class_member','analizador_sintactico.py',506),
  ('class_property -> type ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',510),
  ('class_property -> VAR ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',511),
  ('class_property -> FINAL type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',512),
  ('class_property -> CONST type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',513),
  ('class_property -> STATIC type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',514),
  ('class_property -> type ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',515),
  ('class_property -> VAR ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',516),
  ('class_property -> FINAL type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',517),
  ('class_property -> CONST type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',518),
  ('class_property -> STATIC type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',519),
  ('class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',523),
  ('class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',524),
  ('class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',525),
  ('class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',526),
  ('class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',527),
  ('class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',528),
  ('constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','constructor',7,'p_constructor','analizador_sintactico.py',532),
  ('constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE','constructor',6,'p_constructor','analizador_sintactico.py',533),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',537),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',538),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',539),
  ('object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',540),
  ('object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',541),
  ('object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',542),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',543),
  ('object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',544),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',545),
  ('object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',6,'p_object_instantiation','analizador_sintactico.py',546),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',547),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',548),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',549),
  ('object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',550),
  ('print_stmt -> PRINT LPAREN RPAREN SEMICOLON','print_stmt',4,'p_print_stmt','analizador_sintactico.py',558),
  ('print_stmt -> PRINT LPAREN value RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',559),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',560),
  ('input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',6,'p_input_stmt','analizador_sintactico.py',564),
  ('input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',565),
  ('input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',566),
  ('type -> STRING','type',1,'p_type','analizador_sintactico.py',574),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',575),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',576),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',577),
  ('type -> set_type','type',1,'p_type','analizador_sintactico.py',578),
  ('set_type -> SET','set_type',1,'p_set_type','analizador_sintactico.py',593),
  ('set_type -> SET LESS type GREATER','set_type',4,'p_set_type','analizador_sintactico.py',594),
  ('value -> INT','value',1,'p_value','analizador_sintactico.py',601),
  ('value -> DOUBLE','value',1,'p_value','analizador_sintactico.py',602),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',603),
  ('value -> ID','value',1,'p_value','analizador_sintactico.py',604),
  ('value -> TRUE','value',1,'p_value','analizador_sintactico.py',605),
  ('value -> FALSE','value',1,'p_value','analizador_sintactico.py',606),
  ('value -> set_value','value',1,'p_value','analizador_sintactico.py',607),
  ('incdec_statement -> ID INCREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',633),
  ('incdec_statement -> ID DECREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',634),
  ('incdec_statement -> INCREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',635),
  ('incdec_statement -> DECREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',636),
  ('empty -> <empty>','empty',0,'p_empty','analizador_sintactico.py',640),
]
