
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARROW AS ASSERT ASSIGN BITNOT BOOL BREAK CASE CATCH CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUAL DO DOLLAR_SIGN DOT DOUBLE DOUBLE_COLON DYNAMIC ELSE ENUM EQUALS EXPORT EXTENDS FALSE FINAL FINALLY FOR FUNCTION GREATER GREATER_EQUAL ID IF IMPLEMENTS IMPORT IN INCREMENT INT INT_DIVIDE IS LBRACE LBRACKET LENGTH LESS LESS_EQUAL LIBRARY LIST LPAREN MAP MINUS MINUS_EQUAL MODULE MODULE_EQUAL NEW NOT NOT_EQUALS OF OR PART PLUS PLUS_EQUAL PRINT QUESTION QUOTATION_MARK RBRACE RBRACKET READLINESYNC REQUIRED RETURN RPAREN SEMICOLON SET SINGLE_QUOTE STATIC STDIN STRING SUPER SWITCH THIS THROW TIMES TIMES_EQUAL TRUE TRY VAR VOID WHILE WITHcompiler : statement_composedstatement_composed : statement\n                          | statement_composed statementstatement : print_stmt\n                 | input_stmt\n                 | control_structures\n                 | function\n                 | lambda_function\n                 | list_def\n                 | map_def\n                 | variable_def\n                 | SEMICOLON\n                 | function_call\n                 | return_statement\n                 | incdec_statement\n                 | class_def\n                 | object_instantiationvariable_def : type ID ASSIGN expression SEMICOLON\n                    | DYNAMIC ID ASSIGN expression SEMICOLON\n                    | VAR ID ASSIGN expression SEMICOLON\n                    | STATIC type ID ASSIGN expression SEMICOLON\n                    | STATIC VAR ID ASSIGN expression SEMICOLON\n                    | STATIC DYNAMIC ID ASSIGN expression SEMICOLONprint_stmt : PRINT LPAREN RPAREN SEMICOLON\n                  | PRINT LPAREN value RPAREN SEMICOLON\n                  | PRINT LPAREN expression RPAREN SEMICOLONinput_stmt : STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n                  | VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n                  | type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression INT_DIVIDE expression\n                  | expression MODULE expressionexpression : LPAREN expression RPARENexpression : valuecontrol_structures : if_block\n                          | if_block else_block\n                          | while_loop\n                          | for_loopif_block : IF LPAREN conditions RPAREN LBRACE statement_composed RBRACEelse_block : ELSE LBRACE statement_composed RBRACEconditions : condition\n                  | conditions AND condition\n                  | conditions OR conditioncondition : value comparison_operator value\n                 | NOT valuecomparison_operator : GREATER\n                           | LESS\n                           | GREATER_EQUAL\n                           | LESS_EQUAL\n                           | EQUALS\n                           | NOT_EQUALSfunction : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                | VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                | type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                | VOID ID LPAREN RPAREN LBRACE statement_composed RBRACEparameters : parameter\n                  | parameters COMMA parameterparameter : type ID\n                 | REQUIRED type IDexpression : ID INCREMENT\n                  | ID DECREMENT\n                  | INCREMENT ID\n                  | DECREMENT IDincdec_statement : ID INCREMENT SEMICOLON\n                        | ID DECREMENT SEMICOLON\n                        | INCREMENT ID SEMICOLON\n                        | DECREMENT ID SEMICOLONfunction_call : ID LPAREN RPAREN SEMICOLON\n                     | ID LPAREN argument_list RPAREN SEMICOLONargument_list : expression\n                     | argument_list COMMA expressionreturn_statement : RETURN expression SEMICOLON\n                       | RETURN SEMICOLONwhile_loop : WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACEobject_instantiation : VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | ID ASSIGN ID LPAREN RPAREN SEMICOLON\n                            | VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON\n                            | type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | type ID ASSIGN ID LPAREN RPAREN SEMICOLON\n    class_body : class_member\n                  | class_body class_memberclass_def : CLASS ID LBRACE class_body RBRACE\n                 | CLASS ID EXTENDS ID LBRACE class_body RBRACE\n                 | CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE\n                 | CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACEfor_loop : FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE\n                | FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACEfor_init : variable_def\n                | emptyfor_update : incdec_statement\n                  | ID ASSIGN expression\n                  | emptyclass_member : class_property\n                    | class_method\n                    | constructorclass_property : type ID SEMICOLON\n                      | VAR ID SEMICOLON\n                      | FINAL type ID SEMICOLON\n                      | CONST type ID SEMICOLON\n                      | STATIC type ID SEMICOLON\n                      | type ID ASSIGN expression SEMICOLON\n                      | VAR ID ASSIGN expression SEMICOLON\n                      | FINAL type ID ASSIGN expression SEMICOLON\n                      | CONST type ID ASSIGN expression SEMICOLON\n                      | STATIC type ID ASSIGN expression SEMICOLONclass_method : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                    | VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                    | STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACEconstructor : ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                   | ID LPAREN RPAREN LBRACE statement_composed RBRACEtype : STRING\n            | INT\n            | DOUBLE\n            | BOOLargument_list_opt : argument_list\n                         | emptyempty :list_def : LIST LBRACKET value_list RBRACKET SEMICOLON\n                | LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLONvalue_list : value\n                  | value_list COMMA valuemap_def : MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON\n               | MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLONmap_entries : map_entry\n                   | map_entries COMMA map_entrymap_entry : value COLON valuevalue : INT\n             | DOUBLE\n             | STRING\n             | ID\n             | TRUE\n             | FALSElambda_function : type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n                       | VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n                       | type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON\n                       | VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON'
    
_lr_action_items = {'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,31,42,48,49,52,63,64,66,67,70,71,72,73,74,75,76,80,81,88,91,92,97,101,109,117,118,119,120,121,122,127,131,133,134,136,137,138,140,143,147,148,152,155,162,165,170,174,175,176,177,178,179,180,205,210,211,212,220,224,227,235,240,242,244,245,252,253,254,255,257,259,260,269,270,271,272,273,274,278,280,287,288,290,292,297,299,301,302,305,308,309,310,318,319,320,326,327,330,331,334,336,337,339,340,341,342,343,346,348,349,350,351,352,355,359,360,363,374,376,377,378,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,403,404,407,409,410,411,415,419,420,421,422,423,424,425,426,427,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,455,457,458,460,461,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,64,-3,91,92,-39,109,-76,-37,-145,-142,-143,-144,-146,-147,121,122,-132,136,147,-67,-68,12,-145,-75,-63,-64,-65,-66,-69,-70,-44,207,-100,-101,-24,210,211,-145,220,-71,224,-145,235,12,245,252,-30,-31,-32,-33,-34,-35,-36,-48,-25,-26,278,-20,-72,288,-18,12,-43,12,-133,-19,308,309,310,-94,313,316,12,-45,-46,-47,12,328,-27,331,339,-87,341,343,12,12,12,12,355,-21,-22,-23,364,366,368,12,12,384,-89,387,389,390,-85,392,-86,393,-91,396,398,12,-57,12,-58,-138,12,405,408,-95,-96,-42,-77,-80,420,421,-151,422,-88,-83,423,-84,-81,424,425,-150,426,-90,-55,-56,12,12,12,433,434,435,12,12,-28,-149,-78,-82,-29,-148,-79,444,12,12,12,12,12,-97,12,12,-134,12,12,12,12,12,-99,461,12,12,-98,-137,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,18,-75,-69,-70,-24,-71,18,-25,-26,-20,-72,-18,18,-43,18,-133,-19,-94,18,18,-27,-87,18,18,18,18,-21,-22,-23,18,18,-89,-85,-86,-91,18,-57,18,-58,-138,18,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,18,18,18,18,18,-28,-149,-78,-82,-29,-148,-79,18,18,18,18,18,-97,18,18,-134,18,18,18,18,18,-99,18,18,-98,-137,]),'STDIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,86,91,92,95,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,141,-67,-68,153,19,-75,-69,-70,-24,-71,19,-25,-26,-20,-72,-18,19,-43,19,-133,-19,-94,19,19,-27,-87,19,19,19,19,-21,-22,-23,19,19,-89,-85,-86,-91,19,-57,19,-58,-138,19,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,19,19,19,19,19,-28,-149,-78,-82,-29,-148,-79,19,19,19,19,19,-97,19,19,-134,19,19,19,19,19,-99,19,19,-98,-137,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,42,52,64,80,91,92,97,109,121,122,123,136,147,162,182,183,184,185,186,210,211,220,224,235,240,242,244,245,252,257,258,266,268,269,273,278,288,297,299,301,302,308,309,310,313,316,323,325,326,327,331,339,341,343,349,350,351,352,355,359,364,366,368,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,419,420,421,422,423,424,425,426,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,61,-3,-39,-76,135,-67,-68,20,-75,-69,-70,188,-24,-71,20,188,-92,-105,-106,-107,-25,-26,-20,-72,-18,20,-43,20,-133,-19,-94,-93,188,188,20,20,-27,-87,20,20,20,20,-21,-22,-23,-108,-109,188,188,20,20,-89,-85,-86,-91,20,-57,20,-58,-138,20,-110,-111,-112,-95,188,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,20,20,-113,20,-114,20,188,20,-28,-149,-78,-82,-29,-148,-79,20,-125,20,20,-115,-116,-117,20,20,-97,20,20,-134,-124,20,-120,20,20,20,-121,20,-99,-118,20,20,-119,-98,-137,-122,-123,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,123,136,147,162,182,183,184,185,186,191,210,211,220,224,235,240,242,244,245,252,257,258,266,268,269,273,278,288,297,299,301,302,308,309,310,313,316,323,325,326,327,331,339,341,343,349,350,351,352,355,359,364,366,368,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,419,420,421,422,423,424,425,426,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[26,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,26,-75,-69,-70,192,-24,-71,26,192,-92,-105,-106,-107,264,-25,-26,-20,-72,-18,26,-43,26,-133,-19,-94,-93,192,192,26,26,-27,-87,26,26,26,26,-21,-22,-23,-108,-109,192,192,26,26,-89,-85,-86,-91,26,-57,26,-58,-138,26,-110,-111,-112,-95,192,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,26,26,-113,26,-114,26,192,26,-28,-149,-78,-82,-29,-148,-79,26,-125,26,26,-115,-116,-117,26,26,-97,26,26,-134,-124,26,-120,26,26,26,-121,26,-99,-118,26,26,-119,-98,-137,-122,-123,]),'LIST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[27,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,27,-75,-69,-70,-24,-71,27,-25,-26,-20,-72,-18,27,-43,27,-133,-19,-94,27,27,-27,-87,27,27,27,27,-21,-22,-23,27,27,-89,-85,-86,-91,27,-57,27,-58,-138,27,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,27,27,27,27,27,-28,-149,-78,-82,-29,-148,-79,27,27,27,27,27,-97,27,27,-134,27,27,27,27,27,-99,27,27,-98,-137,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,28,-75,-69,-70,-24,-71,28,-25,-26,-20,-72,-18,28,-43,28,-133,-19,-94,28,28,-27,-87,28,28,28,28,-21,-22,-23,28,28,-89,-85,-86,-91,28,-57,28,-58,-138,28,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,28,28,28,28,28,-28,-149,-78,-82,-29,-148,-79,28,28,28,28,28,-97,28,28,-134,28,28,28,28,28,-99,28,28,-98,-137,]),'DYNAMIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,42,52,64,80,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,62,-3,-39,-76,29,-67,-68,29,-75,-69,-70,-24,-71,29,-25,-26,-20,-72,-18,29,-43,29,-133,-19,-94,29,29,-27,-87,29,29,29,29,-21,-22,-23,29,29,-89,-85,-86,-91,29,-57,29,-58,-138,29,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,29,29,29,29,29,-28,-149,-78,-82,-29,-148,-79,29,29,29,29,29,-97,29,29,-134,29,29,29,29,29,-99,29,29,-98,-137,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,80,91,92,97,109,121,122,123,136,147,162,182,183,184,185,186,210,211,220,224,235,240,242,244,245,252,257,258,266,268,269,273,278,288,297,299,301,302,308,309,310,313,316,323,325,326,327,331,339,341,343,349,350,351,352,355,359,364,366,368,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,419,420,421,422,423,424,425,426,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,30,-67,-68,30,-75,-69,-70,191,-24,-71,30,191,-92,-105,-106,-107,-25,-26,-20,-72,-18,30,-43,30,-133,-19,-94,-93,191,191,30,30,-27,-87,30,30,30,30,-21,-22,-23,-108,-109,191,191,30,30,-89,-85,-86,-91,30,-57,30,-58,-138,30,-110,-111,-112,-95,191,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,30,30,-113,30,-114,30,191,30,-28,-149,-78,-82,-29,-148,-79,30,-125,30,30,-115,-116,-117,30,30,-97,30,30,-134,-124,30,-120,30,30,30,-121,30,-99,-118,30,30,-119,-98,-137,-122,-123,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,42,43,47,50,52,55,60,61,62,64,65,68,69,78,79,86,87,91,92,94,95,97,105,109,110,111,112,113,114,115,121,122,123,124,125,129,132,135,136,142,144,146,147,149,150,154,156,157,162,166,167,169,171,172,173,182,183,184,185,186,187,188,192,196,197,198,199,200,201,202,203,204,207,210,211,213,217,218,219,220,222,224,230,231,235,240,241,242,244,245,252,257,258,261,262,263,264,266,267,268,269,273,275,276,277,278,283,284,286,288,295,296,297,299,301,302,304,306,307,308,309,310,313,314,316,317,323,325,326,327,328,331,333,339,341,343,345,349,350,351,352,353,355,359,364,365,366,367,368,369,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,45,46,51,-38,-40,-41,54,58,59,67,75,76,77,-126,-127,-128,-129,-3,84,67,93,-39,101,106,107,108,-76,67,119,120,101,101,140,145,-67,-68,151,152,21,67,-75,67,67,67,67,67,67,-69,-70,181,193,194,101,208,209,-24,67,221,223,-71,67,67,67,236,237,21,101,247,101,67,67,67,181,-92,-105,-106,-107,259,260,265,101,101,101,-49,-50,-51,-52,-53,-54,101,-25,-26,67,-127,-128,-126,-20,67,-72,67,67,-18,21,300,-43,21,-133,-19,-94,-93,318,319,320,321,181,324,181,21,21,329,67,67,-27,67,67,67,-87,67,67,21,21,21,21,354,101,101,-21,-22,-23,-108,67,-109,67,181,181,21,21,381,-89,67,-85,-86,-91,67,21,-57,21,-58,101,-138,21,-110,67,-111,67,-112,67,-95,181,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,21,21,-113,21,-114,21,181,67,21,-28,-149,-78,-82,-29,-148,-79,101,21,-125,21,21,-115,-116,-117,21,21,-97,21,21,-134,-124,21,-120,21,21,21,-121,21,-99,-118,21,21,-119,-98,-137,-122,-123,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,31,-75,-69,-70,-24,-71,31,-25,-26,-20,-72,-18,31,-43,31,-133,-19,-94,31,31,-27,-87,31,31,31,31,-21,-22,-23,31,31,-89,-85,-86,-91,31,-57,31,-58,-138,31,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,31,31,31,31,31,-28,-149,-78,-82,-29,-148,-79,31,31,31,31,31,-97,31,31,-134,31,31,31,31,31,-99,31,31,-98,-137,]),'INCREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,23,24,25,31,42,43,47,52,64,65,67,84,86,91,92,95,97,105,109,110,111,112,113,114,115,121,122,136,140,142,147,149,150,152,154,162,171,172,173,210,211,213,220,222,224,230,231,235,240,242,244,245,252,257,269,273,276,277,278,283,284,286,288,295,296,297,299,301,302,308,309,310,314,317,326,327,328,331,333,339,341,343,345,349,350,351,352,355,359,365,367,369,374,376,377,378,381,384,387,389,390,392,393,396,398,399,400,403,404,407,415,418,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,48,-38,-40,-41,68,-3,68,68,-39,-76,68,117,117,68,-67,-68,68,32,68,-75,68,68,68,68,68,68,-69,-70,-24,117,68,-71,68,68,117,68,32,68,68,68,-25,-26,68,-20,68,-72,68,68,-18,32,-43,32,-133,-19,-94,32,32,68,68,-27,68,68,68,-87,68,68,32,32,32,32,-21,-22,-23,68,68,32,32,32,-89,68,-85,-86,-91,68,32,-57,32,-58,-138,32,68,68,68,-95,-96,-42,-77,48,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,32,32,32,32,68,32,-28,-149,-78,-82,-29,-148,-79,32,32,32,32,32,-97,32,32,-134,32,32,32,32,32,-99,32,32,-98,-137,]),'DECREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,23,24,25,31,42,43,47,52,64,65,67,84,86,91,92,95,97,105,109,110,111,112,113,114,115,121,122,136,140,142,147,149,150,152,154,162,171,172,173,210,211,213,220,222,224,230,231,235,240,242,244,245,252,257,269,273,276,277,278,283,284,286,288,295,296,297,299,301,302,308,309,310,314,317,326,327,328,331,333,339,341,343,345,349,350,351,352,355,359,365,367,369,374,376,377,378,381,384,387,389,390,392,393,396,398,399,400,403,404,407,415,418,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,49,-38,-40,-41,69,-3,69,69,-39,-76,69,118,118,69,-67,-68,69,33,69,-75,69,69,69,69,69,69,-69,-70,-24,118,69,-71,69,69,118,69,33,69,69,69,-25,-26,69,-20,69,-72,69,69,-18,33,-43,33,-133,-19,-94,33,33,69,69,-27,69,69,69,-87,69,69,33,33,33,33,-21,-22,-23,69,69,33,33,33,-89,69,-85,-86,-91,69,33,-57,33,-58,-138,33,69,69,69,-95,-96,-42,-77,49,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,33,33,33,33,69,33,-28,-149,-78,-82,-29,-148,-79,33,33,33,33,33,-97,33,33,-134,33,33,33,33,33,-99,33,33,-98,-137,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,34,-75,-69,-70,-24,-71,34,-25,-26,-20,-72,-18,34,-43,34,-133,-19,-94,34,34,-27,-87,34,34,34,34,-21,-22,-23,34,34,-89,-85,-86,-91,34,-57,34,-58,-138,34,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,34,34,34,34,34,-28,-149,-78,-82,-29,-148,-79,34,34,34,34,34,-97,34,34,-134,34,34,34,34,34,-99,34,34,-98,-137,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,31,42,43,47,52,55,56,57,64,65,78,79,80,86,91,92,95,96,97,98,105,109,110,111,112,113,114,115,121,122,123,129,136,142,147,149,150,154,161,162,166,168,169,171,172,173,182,183,184,185,186,189,190,191,196,197,198,199,200,201,202,203,204,207,210,211,213,220,222,224,230,231,235,239,240,242,244,245,252,256,257,258,266,268,269,273,276,277,278,283,284,286,288,295,296,297,299,301,302,306,307,308,309,310,313,314,315,316,317,322,323,325,326,327,331,333,339,341,343,345,349,350,351,352,353,355,359,364,365,366,367,368,369,370,371,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,35,72,-3,72,72,-39,72,35,35,-76,72,72,72,35,72,-67,-68,72,35,35,35,72,-75,72,72,72,72,72,72,-69,-70,35,72,-24,219,-71,72,72,219,35,35,72,35,72,72,72,72,35,-92,-105,-106,-107,35,35,35,72,72,72,-49,-50,-51,-52,-53,-54,72,-25,-26,72,-20,72,-72,72,72,-18,35,35,-43,35,-133,-19,35,-94,-93,35,35,35,35,72,72,-27,72,72,72,-87,72,72,35,35,35,35,72,72,-21,-22,-23,-108,72,35,-109,72,35,35,35,35,35,-89,72,-85,-86,-91,72,35,-57,35,-58,72,-138,35,-110,72,-111,72,-112,72,35,35,-95,35,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,35,35,-113,35,-114,35,35,72,35,-28,-149,-78,-82,-29,-148,-79,72,35,-125,35,35,-115,-116,-117,35,35,-97,35,35,-134,-124,35,-120,35,35,35,-121,35,-99,-118,35,35,-119,-98,-137,-122,-123,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,31,42,43,47,52,55,56,57,64,65,78,79,80,86,91,92,95,96,97,98,105,109,110,111,112,113,114,115,121,122,123,129,136,142,147,149,150,154,161,162,166,168,169,171,172,173,182,183,184,185,186,189,190,191,196,197,198,199,200,201,202,203,204,207,210,211,213,220,222,224,230,231,235,239,240,242,244,245,252,256,257,258,266,268,269,273,276,277,278,283,284,286,288,295,296,297,299,301,302,306,307,308,309,310,313,314,315,316,317,322,323,325,326,327,331,333,339,341,343,345,349,350,351,352,353,355,359,364,365,366,367,368,369,370,371,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,36,70,-3,70,70,-39,70,36,36,-76,70,70,70,36,70,-67,-68,70,36,36,36,70,-75,70,70,70,70,70,70,-69,-70,36,70,-24,217,-71,70,70,217,36,36,70,36,70,70,70,70,36,-92,-105,-106,-107,36,36,36,70,70,70,-49,-50,-51,-52,-53,-54,70,-25,-26,70,-20,70,-72,70,70,-18,36,36,-43,36,-133,-19,36,-94,-93,36,36,36,36,70,70,-27,70,70,70,-87,70,70,36,36,36,36,70,70,-21,-22,-23,-108,70,36,-109,70,36,36,36,36,36,-89,70,-85,-86,-91,70,36,-57,36,-58,70,-138,36,-110,70,-111,70,-112,70,36,36,-95,36,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,36,36,-113,36,-114,36,36,70,36,-28,-149,-78,-82,-29,-148,-79,70,36,-125,36,36,-115,-116,-117,36,36,-97,36,36,-134,-124,36,-120,36,36,36,-121,36,-99,-118,36,36,-119,-98,-137,-122,-123,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,31,42,43,47,52,55,56,57,64,65,78,79,80,86,91,92,95,96,97,98,105,109,110,111,112,113,114,115,121,122,123,129,136,142,147,149,150,154,161,162,166,168,169,171,172,173,182,183,184,185,186,189,190,191,196,197,198,199,200,201,202,203,204,207,210,211,213,220,222,224,230,231,235,239,240,242,244,245,252,256,257,258,266,268,269,273,276,277,278,283,284,286,288,295,296,297,299,301,302,306,307,308,309,310,313,314,315,316,317,322,323,325,326,327,331,333,339,341,343,345,349,350,351,352,353,355,359,364,365,366,367,368,369,370,371,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,418,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,37,71,-3,71,71,-39,71,37,37,-76,71,71,71,37,71,-67,-68,71,37,37,37,71,-75,71,71,71,71,71,71,-69,-70,37,71,-24,218,-71,71,71,218,37,37,71,37,71,71,71,71,37,-92,-105,-106,-107,37,37,37,71,71,71,-49,-50,-51,-52,-53,-54,71,-25,-26,71,-20,71,-72,71,71,-18,37,37,-43,37,-133,-19,37,-94,-93,37,37,37,37,71,71,-27,71,71,71,-87,71,71,37,37,37,37,71,71,-21,-22,-23,-108,71,37,-109,71,37,37,37,37,37,-89,71,-85,-86,-91,71,37,-57,37,-58,71,-138,37,-110,71,-111,71,-112,71,37,37,-95,37,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,37,37,-113,37,-114,37,37,71,37,-28,-149,-78,-82,-29,-148,-79,71,37,-125,37,37,-115,-116,-117,37,37,-97,37,37,-134,-124,37,-120,37,37,37,-121,37,-99,-118,37,37,-119,-98,-137,-122,-123,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,30,42,52,56,57,64,80,91,92,96,97,98,109,121,122,123,136,142,147,154,161,162,168,182,183,184,185,186,189,190,191,210,211,220,224,235,239,240,242,244,245,252,256,257,258,266,268,269,273,278,288,297,299,301,302,308,309,310,313,315,316,322,323,325,326,327,331,339,341,343,349,350,351,352,355,359,364,366,368,370,371,374,375,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,405,407,408,415,416,419,420,421,422,423,424,425,426,429,430,431,432,433,434,435,438,439,440,441,443,444,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,38,-3,-39,38,38,-76,38,-67,-68,38,38,38,-75,-69,-70,38,-24,38,-71,38,38,38,38,38,-92,-105,-106,-107,38,38,38,-25,-26,-20,-72,-18,38,38,-43,38,-133,-19,38,-94,-93,38,38,38,38,-27,-87,38,38,38,38,-21,-22,-23,-108,38,-109,38,38,38,38,38,-89,-85,-86,-91,38,-57,38,-58,-138,38,-110,-111,-112,38,38,-95,38,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,38,38,-113,38,-114,38,38,38,-28,-149,-78,-82,-29,-148,-79,38,-125,38,38,-115,-116,-117,38,38,-97,38,38,-134,-124,38,-120,38,38,38,-121,38,-99,-118,38,38,-119,-98,-137,-122,-123,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,39,-75,-69,-70,-24,-71,39,-25,-26,-20,-72,-18,39,-43,39,-133,-19,-94,39,39,-27,-87,39,39,39,39,-21,-22,-23,39,39,-89,-85,-86,-91,39,-57,39,-58,-138,39,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,39,39,39,39,39,-28,-149,-78,-82,-29,-148,-79,39,39,39,39,39,-97,39,39,-134,39,39,39,39,39,-99,39,39,-98,-137,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,40,-75,-69,-70,-24,-71,40,-25,-26,-20,-72,-18,40,-43,40,-133,-19,-94,40,40,-27,-87,40,40,40,40,-21,-22,-23,40,40,-89,-85,-86,-91,40,-57,40,-58,-138,40,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,40,40,40,40,40,-28,-149,-78,-82,-29,-148,-79,40,40,40,40,40,-97,40,40,-134,40,40,40,40,40,-99,40,40,-98,-137,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,97,109,121,122,136,147,162,210,211,220,224,235,240,242,244,245,252,257,269,273,278,288,297,299,301,302,308,309,310,326,327,331,339,341,343,349,350,351,352,355,359,374,376,377,378,384,387,389,390,392,393,396,398,399,400,403,404,407,415,419,420,421,422,423,424,425,426,429,431,432,438,439,440,441,443,444,447,449,450,451,453,454,457,458,460,461,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,41,-75,-69,-70,-24,-71,41,-25,-26,-20,-72,-18,41,-43,41,-133,-19,-94,41,41,-27,-87,41,41,41,41,-21,-22,-23,41,41,-89,-85,-86,-91,41,-57,41,-58,-138,41,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,41,41,41,41,41,-28,-149,-78,-82,-29,-148,-79,41,41,41,41,41,-97,41,41,-134,41,41,41,41,41,-99,41,41,-98,-137,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,91,92,109,121,122,136,147,210,211,220,224,235,242,245,252,257,278,288,308,309,310,331,339,341,343,350,352,355,374,376,377,378,384,387,389,390,392,393,396,398,399,400,420,421,422,423,424,425,426,440,444,454,460,461,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-67,-68,-75,-69,-70,-24,-71,-25,-26,-20,-72,-18,-43,-133,-19,-94,-27,-87,-21,-22,-23,-89,-85,-86,-91,-57,-58,-138,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,-28,-149,-78,-82,-29,-148,-79,-97,-134,-99,-98,-137,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,42,52,64,70,71,72,73,74,91,92,101,109,121,122,136,147,162,182,183,184,185,186,210,211,220,224,235,242,245,249,250,252,257,258,278,288,299,302,308,309,310,313,316,323,325,326,327,331,339,341,343,349,350,351,352,355,356,357,364,366,368,374,376,377,378,384,387,389,390,392,393,396,398,399,400,404,405,408,416,420,421,422,423,424,425,426,429,430,432,433,434,435,439,440,443,444,445,446,447,448,451,452,453,454,456,457,458,459,460,461,462,463,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-39,-76,-142,-143,-144,-146,-147,-67,-68,-145,-75,-69,-70,-24,-71,242,257,-92,-105,-106,-107,-25,-26,-20,-72,-18,-43,-133,305,-139,-19,-94,-93,-27,-87,350,352,-21,-22,-23,-108,-109,374,376,377,378,-89,-85,-86,-91,399,-57,400,-58,-138,-140,-141,-110,-111,-112,-95,-96,-42,-77,-80,-151,-88,-83,-84,-81,-150,-90,-55,-56,430,-113,-114,440,-28,-149,-78,-82,-29,-148,-79,446,-125,448,-115,-116,-117,452,-97,454,-134,455,-124,456,-120,459,-121,460,-99,-118,462,463,-119,-98,-137,-122,-123,]),'LPAREN':([18,21,31,39,40,41,43,47,51,54,65,85,86,93,95,105,110,111,112,113,114,115,140,142,145,149,150,151,152,154,171,172,173,181,213,221,222,223,230,231,236,259,265,276,277,281,283,284,286,293,295,296,314,317,320,321,333,345,365,367,369,418,],[43,47,65,78,79,80,65,65,96,98,65,139,142,150,154,65,65,65,65,65,65,65,213,65,222,65,65,230,231,65,65,65,65,256,65,284,65,286,65,65,296,315,322,65,65,332,65,65,65,344,65,65,65,65,370,371,65,65,65,65,65,65,]),'DOT':([19,141,153,],[44,214,232,]),'ASSIGN':([21,45,46,51,58,59,106,107,108,208,209,247,259,260,318,319,320,354,381,],[50,86,87,95,104,105,171,172,173,276,277,303,314,317,365,367,369,402,418,]),'ELSE':([23,377,],[53,-42,]),'LBRACKET':([27,303,],[55,353,]),'LESS':([27,28,70,71,72,73,74,101,128,],[56,57,-142,-143,-144,-146,-147,-145,200,]),'TRUE':([31,43,47,55,65,78,79,86,95,105,110,111,112,113,114,115,129,142,149,150,154,166,169,171,172,173,196,197,198,199,200,201,202,203,204,207,213,222,230,231,276,277,283,284,286,295,296,306,307,314,317,333,345,353,365,367,369,418,428,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-49,-50,-51,-52,-53,-54,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FALSE':([31,43,47,55,65,78,79,86,95,105,110,111,112,113,114,115,129,142,149,150,154,166,169,171,172,173,196,197,198,199,200,201,202,203,204,207,213,222,230,231,276,277,283,284,286,295,296,306,307,314,317,333,345,353,365,367,369,418,428,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-49,-50,-51,-52,-53,-54,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'GREATER':([35,36,37,38,70,71,72,73,74,101,102,128,248,],[-126,-127,-128,-129,-142,-143,-144,-146,-147,-145,167,199,304,]),'COMMA':([35,36,37,38,66,67,70,71,72,73,74,89,90,99,100,101,103,117,118,119,120,158,160,163,174,175,176,177,178,179,180,215,225,228,233,237,246,249,250,298,300,311,356,357,361,372,401,412,413,445,],[-126,-127,-128,-129,-37,-145,-142,-143,-144,-146,-147,149,-73,166,-135,-145,168,-63,-64,-65,-66,239,-59,239,-30,-31,-32,-33,-34,-35,-36,239,-74,149,239,-61,-136,306,-139,-60,-62,239,-140,-141,239,239,166,239,239,306,]),'RPAREN':([43,47,66,67,70,71,72,73,74,82,83,84,89,90,91,92,96,98,101,116,117,118,119,120,121,122,126,127,130,139,142,150,154,158,160,163,174,175,176,177,178,179,180,205,213,215,217,218,219,222,225,226,228,229,230,231,233,237,256,270,271,272,279,284,285,286,289,291,296,298,300,311,315,322,328,329,332,335,338,344,347,361,372,379,380,382,412,413,442,],[81,88,-37,-145,-142,-143,-144,-146,-147,137,138,-145,148,-73,-67,-68,159,164,-145,180,-63,-64,-65,-66,-69,-70,195,-44,206,212,216,227,234,238,-59,243,-30,-31,-32,-33,-34,-35,-36,-48,280,282,-142,-143,-144,-132,-74,287,-130,-131,290,292,294,-61,312,-45,-46,-47,330,336,337,-132,340,342,348,-60,-62,358,362,373,-132,383,385,388,391,394,397,406,414,417,-102,-104,436,437,-103,]),'READLINESYNC':([44,214,232,],[85,281,293,]),'NEW':([50,86,87,95,],[94,144,146,156,]),'LBRACE':([53,77,104,159,164,193,194,195,206,238,243,312,324,358,362,373,383,402,406,414,417,436,437,],[97,123,169,240,244,266,268,269,273,297,301,359,375,403,407,415,419,428,431,438,441,449,450,]),'PLUS':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[110,-37,-145,-142,-143,-144,-146,-147,-37,110,-145,110,110,-63,-64,-65,-66,-145,110,-145,110,110,110,110,110,110,110,110,-36,-142,-143,-144,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'MINUS':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[111,-37,-145,-142,-143,-144,-146,-147,-37,111,-145,111,111,-63,-64,-65,-66,-145,111,-145,111,111,111,111,111,111,111,111,-36,-142,-143,-144,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'TIMES':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[112,-37,-145,-142,-143,-144,-146,-147,-37,112,-145,112,112,-63,-64,-65,-66,-145,112,-145,112,112,112,112,112,112,112,112,-36,-142,-143,-144,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'DIVIDE':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[113,-37,-145,-142,-143,-144,-146,-147,-37,113,-145,113,113,-63,-64,-65,-66,-145,113,-145,113,113,113,113,113,113,113,113,-36,-142,-143,-144,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'INT_DIVIDE':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[114,-37,-145,-142,-143,-144,-146,-147,-37,114,-145,114,114,-63,-64,-65,-66,-145,114,-145,114,114,114,114,114,114,114,114,-36,-142,-143,-144,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'MODULE':([63,66,67,70,71,72,73,74,82,83,84,90,116,117,118,119,120,140,143,152,155,170,174,175,176,177,178,179,180,217,218,219,225,253,254,255,334,346,360,363,386,395,409,410,411,442,],[115,-37,-145,-142,-143,-144,-146,-147,-37,115,-145,115,115,-63,-64,-65,-66,-145,115,-145,115,115,115,115,115,115,115,115,-36,-142,-143,-144,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'RBRACKET':([70,71,72,73,74,99,100,101,246,401,],[-142,-143,-144,-146,-147,165,-135,-145,-136,427,]),'GREATER_EQUAL':([70,71,72,73,74,101,128,],[-142,-143,-144,-146,-147,-145,201,]),'LESS_EQUAL':([70,71,72,73,74,101,128,],[-142,-143,-144,-146,-147,-145,202,]),'EQUALS':([70,71,72,73,74,101,128,],[-142,-143,-144,-146,-147,-145,203,]),'NOT_EQUALS':([70,71,72,73,74,101,128,],[-142,-143,-144,-146,-147,-145,204,]),'AND':([70,71,72,73,74,101,126,127,130,205,270,271,272,274,],[-142,-143,-144,-146,-147,-145,196,-44,196,-48,-45,-46,-47,196,]),'OR':([70,71,72,73,74,101,126,127,130,205,270,271,272,274,],[-142,-143,-144,-146,-147,-145,197,-44,197,-48,-45,-46,-47,197,]),'COLON':([70,71,72,73,74,101,251,],[-142,-143,-144,-146,-147,-145,307,]),'EXTENDS':([77,],[124,]),'IMPLEMENTS':([77,193,],[125,267,]),'NOT':([78,79,196,197,207,],[129,129,129,129,129,]),'REQUIRED':([96,98,142,154,239,256,315,322,370,371,],[161,161,161,161,161,161,161,161,161,161,]),'FINAL':([123,182,183,184,185,186,258,266,268,313,316,323,325,364,366,368,375,405,408,416,430,433,434,435,446,448,452,456,459,462,463,],[189,189,-92,-105,-106,-107,-93,189,189,-108,-109,189,189,-110,-111,-112,189,-113,-114,189,-125,-115,-116,-117,-124,-120,-121,-118,-119,-122,-123,]),'CONST':([123,182,183,184,185,186,258,266,268,313,316,323,325,364,366,368,375,405,408,416,430,433,434,435,446,448,452,456,459,462,463,],[190,190,-92,-105,-106,-107,-93,190,190,-108,-109,190,190,-110,-111,-112,190,-113,-114,190,-125,-115,-116,-117,-124,-120,-121,-118,-119,-122,-123,]),'IN':([208,],[275,]),'ARROW':([216,234,282,294,],[283,295,333,345,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compiler':([0,],[1,]),'statement_composed':([0,97,240,244,269,273,297,301,359,403,407,415,419,431,438,441,449,450,],[2,162,299,302,326,327,349,351,404,429,432,439,443,447,451,453,457,458,]),'statement':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[3,42,3,42,3,3,3,3,3,42,3,42,42,42,42,42,3,3,42,3,3,3,42,3,42,3,42,3,42,42,3,3,42,42,42,42,]),'print_stmt':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input_stmt':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'control_structures':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'function':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'lambda_function':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list_def':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'map_def':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'variable_def':([0,2,80,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[11,11,133,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_call':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_statement':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'incdec_statement':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,328,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,380,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'class_def':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'object_instantiation':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'type':([0,2,30,56,57,80,96,97,98,123,142,154,161,162,168,182,189,190,191,239,240,244,256,266,268,269,273,297,299,301,302,315,322,323,325,326,327,349,351,359,370,371,375,403,404,407,415,416,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[22,22,60,102,103,132,157,22,157,187,157,157,241,22,248,187,261,262,263,157,22,22,157,187,187,22,22,22,22,22,22,157,157,187,187,22,22,22,22,22,157,157,187,22,22,22,22,187,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'if_block':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'while_loop':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_loop':([0,2,97,162,240,244,269,273,297,299,301,302,326,327,349,351,359,403,404,407,415,419,429,431,432,438,439,441,443,447,449,450,451,453,457,458,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'else_block':([23,],[52,]),'expression':([31,43,47,65,86,95,105,110,111,112,113,114,115,142,149,150,154,171,172,173,213,222,230,231,276,277,283,284,286,295,296,314,317,333,345,365,367,369,418,],[63,83,90,116,143,155,170,174,175,176,177,178,179,116,225,90,116,253,254,255,90,90,90,90,155,143,334,90,90,346,90,360,363,386,395,409,410,411,442,]),'value':([31,43,47,55,65,78,79,86,95,105,110,111,112,113,114,115,129,142,149,150,154,166,169,171,172,173,196,197,198,207,213,222,230,231,276,277,283,284,286,295,296,306,307,314,317,333,345,353,365,367,369,418,428,],[66,82,66,100,66,128,128,66,66,66,66,66,66,66,66,66,205,66,66,66,66,246,251,66,66,66,128,128,272,128,66,66,66,66,66,66,66,66,66,66,66,251,357,66,66,66,66,100,66,66,66,66,251,]),'argument_list':([47,150,213,222,230,231,284,286,296,],[89,228,228,228,228,228,228,228,228,]),'value_list':([55,353,],[99,401,]),'conditions':([78,79,207,],[126,130,274,]),'condition':([78,79,196,197,207,],[127,127,270,271,127,]),'for_init':([80,],[131,]),'empty':([80,150,213,222,230,231,284,286,296,328,],[134,229,229,229,229,229,229,229,229,382,]),'parameters':([96,98,142,154,256,315,322,370,371,],[158,163,215,233,311,361,372,412,413,]),'parameter':([96,98,142,154,239,256,315,322,370,371,],[160,160,160,160,298,160,160,160,160,160,]),'class_body':([123,266,268,375,],[182,323,325,416,]),'class_member':([123,182,266,268,323,325,375,416,],[183,258,183,183,258,258,183,258,]),'class_property':([123,182,266,268,323,325,375,416,],[184,184,184,184,184,184,184,184,]),'class_method':([123,182,266,268,323,325,375,416,],[185,185,185,185,185,185,185,185,]),'constructor':([123,182,266,268,323,325,375,416,],[186,186,186,186,186,186,186,186,]),'comparison_operator':([128,],[198,]),'argument_list_opt':([150,213,222,230,231,284,286,296,],[226,279,285,289,291,335,338,347,]),'map_entries':([169,428,],[249,445,]),'map_entry':([169,306,428,],[250,356,250,]),'for_update':([328,],[379,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compiler","S'",1,None,None,None),
  ('compiler -> statement_composed','compiler',1,'p_compiler','analizador_sintactico.py',8),
  ('statement_composed -> statement','statement_composed',1,'p_statement_composed','analizador_sintactico.py',11),
  ('statement_composed -> statement_composed statement','statement_composed',2,'p_statement_composed','analizador_sintactico.py',12),
  ('statement -> print_stmt','statement',1,'p_statement','analizador_sintactico.py',15),
  ('statement -> input_stmt','statement',1,'p_statement','analizador_sintactico.py',16),
  ('statement -> control_structures','statement',1,'p_statement','analizador_sintactico.py',17),
  ('statement -> function','statement',1,'p_statement','analizador_sintactico.py',18),
  ('statement -> lambda_function','statement',1,'p_statement','analizador_sintactico.py',19),
  ('statement -> list_def','statement',1,'p_statement','analizador_sintactico.py',20),
  ('statement -> map_def','statement',1,'p_statement','analizador_sintactico.py',21),
  ('statement -> variable_def','statement',1,'p_statement','analizador_sintactico.py',22),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',23),
  ('statement -> function_call','statement',1,'p_statement','analizador_sintactico.py',24),
  ('statement -> return_statement','statement',1,'p_statement','analizador_sintactico.py',25),
  ('statement -> incdec_statement','statement',1,'p_statement','analizador_sintactico.py',26),
  ('statement -> class_def','statement',1,'p_statement','analizador_sintactico.py',27),
  ('statement -> object_instantiation','statement',1,'p_statement','analizador_sintactico.py',28),
  ('variable_def -> type ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',34),
  ('variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',35),
  ('variable_def -> VAR ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',36),
  ('variable_def -> STATIC type ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',37),
  ('variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',38),
  ('variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',39),
  ('print_stmt -> PRINT LPAREN RPAREN SEMICOLON','print_stmt',4,'p_print_stmt','analizador_sintactico.py',64),
  ('print_stmt -> PRINT LPAREN value RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',65),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',66),
  ('input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',6,'p_input_stmt','analizador_sintactico.py',70),
  ('input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',71),
  ('input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',72),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',76),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',77),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',78),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',79),
  ('expression -> expression INT_DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',80),
  ('expression -> expression MODULE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',81),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','analizador_sintactico.py',84),
  ('expression -> value','expression',1,'p_expression_value','analizador_sintactico.py',87),
  ('control_structures -> if_block','control_structures',1,'p_control_structures','analizador_sintactico.py',93),
  ('control_structures -> if_block else_block','control_structures',2,'p_control_structures','analizador_sintactico.py',94),
  ('control_structures -> while_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',95),
  ('control_structures -> for_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',96),
  ('if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE','if_block',7,'p_if_block','analizador_sintactico.py',99),
  ('else_block -> ELSE LBRACE statement_composed RBRACE','else_block',4,'p_else_block','analizador_sintactico.py',102),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',105),
  ('conditions -> conditions AND condition','conditions',3,'p_conditions','analizador_sintactico.py',106),
  ('conditions -> conditions OR condition','conditions',3,'p_conditions','analizador_sintactico.py',107),
  ('condition -> value comparison_operator value','condition',3,'p_condition','analizador_sintactico.py',110),
  ('condition -> NOT value','condition',2,'p_condition','analizador_sintactico.py',111),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',114),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',115),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',116),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',117),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',118),
  ('comparison_operator -> NOT_EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',119),
  ('function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',123),
  ('function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',124),
  ('function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',125),
  ('function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',126),
  ('parameters -> parameter','parameters',1,'p_parameters','analizador_sintactico.py',129),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizador_sintactico.py',130),
  ('parameter -> type ID','parameter',2,'p_parameter','analizador_sintactico.py',133),
  ('parameter -> REQUIRED type ID','parameter',3,'p_parameter','analizador_sintactico.py',134),
  ('expression -> ID INCREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',138),
  ('expression -> ID DECREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',139),
  ('expression -> INCREMENT ID','expression',2,'p_expression_incdec','analizador_sintactico.py',140),
  ('expression -> DECREMENT ID','expression',2,'p_expression_incdec','analizador_sintactico.py',141),
  ('incdec_statement -> ID INCREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',144),
  ('incdec_statement -> ID DECREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',145),
  ('incdec_statement -> INCREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',146),
  ('incdec_statement -> DECREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',147),
  ('function_call -> ID LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','analizador_sintactico.py',150),
  ('function_call -> ID LPAREN argument_list RPAREN SEMICOLON','function_call',5,'p_function_call','analizador_sintactico.py',151),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizador_sintactico.py',154),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizador_sintactico.py',155),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','analizador_sintactico.py',158),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','analizador_sintactico.py',159),
  ('while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE','while_loop',7,'p_while_loop','analizador_sintactico.py',162),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',165),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',166),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',167),
  ('object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',168),
  ('object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',169),
  ('object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',170),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',171),
  ('object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',172),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',173),
  ('object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',6,'p_object_instantiation','analizador_sintactico.py',174),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',175),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',176),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',177),
  ('object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',178),
  ('class_body -> class_member','class_body',1,'p_class_body','analizador_sintactico.py',182),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','analizador_sintactico.py',183),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','analizador_sintactico.py',186),
  ('class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',187),
  ('class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',188),
  ('class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',9,'p_class_def','analizador_sintactico.py',189),
  ('for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE','for_loop',11,'p_for_loop','analizador_sintactico.py',195),
  ('for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE','for_loop',10,'p_for_loop','analizador_sintactico.py',196),
  ('for_init -> variable_def','for_init',1,'p_for_init','analizador_sintactico.py',200),
  ('for_init -> empty','for_init',1,'p_for_init','analizador_sintactico.py',201),
  ('for_update -> incdec_statement','for_update',1,'p_for_update','analizador_sintactico.py',204),
  ('for_update -> ID ASSIGN expression','for_update',3,'p_for_update','analizador_sintactico.py',205),
  ('for_update -> empty','for_update',1,'p_for_update','analizador_sintactico.py',206),
  ('class_member -> class_property','class_member',1,'p_class_member','analizador_sintactico.py',210),
  ('class_member -> class_method','class_member',1,'p_class_member','analizador_sintactico.py',211),
  ('class_member -> constructor','class_member',1,'p_class_member','analizador_sintactico.py',212),
  ('class_property -> type ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',215),
  ('class_property -> VAR ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',216),
  ('class_property -> FINAL type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',217),
  ('class_property -> CONST type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',218),
  ('class_property -> STATIC type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',219),
  ('class_property -> type ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',220),
  ('class_property -> VAR ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',221),
  ('class_property -> FINAL type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',222),
  ('class_property -> CONST type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',223),
  ('class_property -> STATIC type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',224),
  ('class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',227),
  ('class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',228),
  ('class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',229),
  ('class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',230),
  ('class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',231),
  ('class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',232),
  ('constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','constructor',7,'p_constructor','analizador_sintactico.py',235),
  ('constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE','constructor',6,'p_constructor','analizador_sintactico.py',236),
  ('type -> STRING','type',1,'p_type','analizador_sintactico.py',241),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',242),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',243),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',244),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',247),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',248),
  ('empty -> <empty>','empty',0,'p_empty','analizador_sintactico.py',251),
  ('list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON','list_def',5,'p_list_def','analizador_sintactico.py',257),
  ('list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON','list_def',10,'p_list_def','analizador_sintactico.py',258),
  ('value_list -> value','value_list',1,'p_value_list','analizador_sintactico.py',261),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','analizador_sintactico.py',262),
  ('map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',12,'p_map_def','analizador_sintactico.py',266),
  ('map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',7,'p_map_def','analizador_sintactico.py',267),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries','analizador_sintactico.py',270),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries','analizador_sintactico.py',271),
  ('map_entry -> value COLON value','map_entry',3,'p_map_entry','analizador_sintactico.py',274),
  ('value -> INT','value',1,'p_value','analizador_sintactico.py',278),
  ('value -> DOUBLE','value',1,'p_value','analizador_sintactico.py',279),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',280),
  ('value -> ID','value',1,'p_value','analizador_sintactico.py',281),
  ('value -> TRUE','value',1,'p_value','analizador_sintactico.py',282),
  ('value -> FALSE','value',1,'p_value','analizador_sintactico.py',283),
  ('lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',311),
  ('lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',312),
  ('lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',313),
  ('lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',314),
]
