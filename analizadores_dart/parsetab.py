
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARROW AS ASSERT ASSIGN BITNOT BOOL BREAK CASE CATCH CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUAL DO DOLLAR_SIGN DOT DOUBLE DOUBLE_COLON DYNAMIC ELSE ENUM EQUALS EXPORT EXTENDS FALSE FINAL FINALLY FOR FUNCTION GREATER GREATER_EQUAL ID IF IMPLEMENTS IMPORT IN INCREMENT INT INT_DIVIDE IS LBRACE LBRACKET LENGTH LESS LESS_EQUAL LIBRARY LIST LPAREN MAP MINUS MINUS_EQUAL MODULE MODULE_EQUAL NEW NOT NOT_EQUALS OF OR PART PLUS PLUS_EQUAL PRINT QUESTION QUOTATION_MARK RBRACE RBRACKET READLINESYNC REQUIRED RETURN RPAREN SEMICOLON SET SINGLE_QUOTE STATIC STDIN STRING SUPER SWITCH THIS THROW TIMES TIMES_EQUAL TRUE TRY VAR VOID WHILE WITHcompiler : statement_composedstatement_composed : statement\n                          | statement_composed statementstatement : print_stmt\n                 | input_stmt\n                 | control_structures\n                 | function\n                 | lambda_function\n                 | list_def\n                 | map_def\n                 | variable_def\n                 | SEMICOLON\n                 | function_call\n                 | return_statement\n                 | incdec_statement\n                 | class_def\n                 | object_instantiationvariable_def : type ID ASSIGN expression SEMICOLON\n                    | DYNAMIC ID ASSIGN expression SEMICOLON\n                    | VAR ID ASSIGN expression SEMICOLON\n                    | STATIC type ID ASSIGN expression SEMICOLON\n                    | STATIC VAR ID ASSIGN expression SEMICOLON\n                    | STATIC DYNAMIC ID ASSIGN expression SEMICOLONprint_stmt : PRINT LPAREN RPAREN SEMICOLON\n                  | PRINT LPAREN value RPAREN SEMICOLON\n                  | PRINT LPAREN expression RPAREN SEMICOLONinput_stmt : STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n                  | VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON\n                  | type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression INT_DIVIDE expression\n                  | expression MODULE expressionexpression : LPAREN expression RPARENexpression : valuecontrol_structures : if_block\n                          | if_block else_block\n                          | while_loop\n                          | for_loopif_block : IF LPAREN conditions RPAREN LBRACE statement_composed RBRACEelse_block : ELSE LBRACE statement_composed RBRACEconditions : condition\n                  | conditions AND condition\n                  | conditions OR conditioncondition : value comparison_operator value\n                 | NOT valuecomparison_operator : GREATER\n                           | LESS\n                           | GREATER_EQUAL\n                           | LESS_EQUAL\n                           | EQUALS\n                           | NOT_EQUALSfunction : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                | VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                | type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                | VOID ID LPAREN RPAREN LBRACE statement_composed RBRACEparameters : parameter\n                  | parameters COMMA parameterparameter : type ID\n                 | REQUIRED type IDexpression : ID INCREMENT\n                  | ID DECREMENT\n                  | INCREMENT ID\n                  | DECREMENT IDincdec_statement : ID INCREMENT SEMICOLON\n                        | ID DECREMENT SEMICOLON\n                        | INCREMENT ID SEMICOLON\n                        | DECREMENT ID SEMICOLONfunction_call : ID LPAREN RPAREN SEMICOLON\n                     | ID LPAREN argument_list RPAREN SEMICOLONargument_list : expression\n                     | argument_list COMMA expressionreturn_statement : RETURN expression SEMICOLON\n                       | RETURN SEMICOLONwhile_loop : WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACEobject_instantiation : VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON\n                            | ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | ID ASSIGN ID LPAREN RPAREN SEMICOLON\n                            | VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON\n                            | type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON\n                            | type ID ASSIGN ID LPAREN RPAREN SEMICOLON\n    class_body : class_member\n                  | class_body class_memberclass_def : CLASS ID LBRACE class_body RBRACE\n                 | CLASS ID EXTENDS ID LBRACE class_body RBRACE\n                 | CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE\n                 | CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACEfor_loop : FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE\n                | FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACEfor_init : variable_def\n                | emptyfor_update : incdec_statement\n                  | ID ASSIGN expression\n                  | emptyclass_member : class_property\n                    | class_method\n                    | constructorclass_property : type ID SEMICOLON\n                      | VAR ID SEMICOLON\n                      | FINAL type ID SEMICOLON\n                      | CONST type ID SEMICOLON\n                      | STATIC type ID SEMICOLON\n                      | type ID ASSIGN expression SEMICOLON\n                      | VAR ID ASSIGN expression SEMICOLON\n                      | FINAL type ID ASSIGN expression SEMICOLON\n                      | CONST type ID ASSIGN expression SEMICOLON\n                      | STATIC type ID ASSIGN expression SEMICOLONclass_method : type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | type ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                    | VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE\n                    | STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                    | STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACEconstructor : ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE\n                   | ID LPAREN RPAREN LBRACE statement_composed RBRACEtype : STRING\n            | INT\n            | DOUBLE\n            | BOOLargument_list_opt : argument_list\n                         | emptyempty :list_def : LIST LBRACKET value_list RBRACKET SEMICOLON\n                | LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLONvalue_list : value\n                  | value_list COMMA valuemap_def : MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON\n               | MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLONmap_entries : map_entry\n                   | map_entries COMMA map_entrymap_entry : value COLON valuevalue : INT\n             | DOUBLE\n             | STRING\n             | ID\n             | TRUE\n             | FALSEstatement : expression SEMICOLONlambda_function : type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n                       | VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON\n                       | type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON\n                       | VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON'
    
_lr_action_items = {'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,24,26,27,28,34,38,39,40,45,46,47,48,57,60,61,62,67,68,71,85,86,87,88,92,93,94,95,96,97,98,99,103,104,105,106,107,111,114,115,120,124,132,133,134,139,143,145,146,148,149,150,152,155,159,160,164,167,174,177,182,210,215,216,217,225,229,232,240,245,247,249,250,257,258,259,260,262,264,265,274,275,276,277,278,279,283,285,292,293,295,297,302,304,306,307,310,313,314,315,323,324,325,331,332,335,336,339,341,342,344,345,346,347,348,351,353,354,355,356,357,360,364,365,368,379,381,382,383,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,410,411,414,416,417,418,422,426,427,428,429,430,431,432,433,434,435,436,437,438,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,466,468,469,471,472,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,48,-37,-145,-38,-40,-41,86,-144,-142,-143,-146,-147,-3,-148,-145,-142,-143,-144,114,115,-39,132,-76,133,134,-132,-30,-31,-32,-33,-34,-35,148,-36,-63,-64,-65,-66,159,-67,-68,12,-145,-75,-69,-70,-44,212,-100,-101,-24,215,216,-145,225,-71,229,-145,240,12,250,257,-48,-25,-26,283,-20,-72,293,-18,12,-43,12,-133,-19,313,314,315,-94,318,321,12,-45,-46,-47,12,333,-27,336,344,-87,346,348,12,12,12,12,360,-21,-22,-23,369,371,373,12,12,391,-89,394,396,397,-85,399,-86,400,-91,403,405,12,-57,12,-58,-138,12,412,415,-95,-96,-42,-77,-80,431,432,-152,433,-88,-83,434,-84,-81,435,436,-151,437,-90,-55,-56,12,12,12,444,445,446,12,114,115,133,134,12,-28,-150,-78,-82,-29,-149,-79,455,12,12,12,12,12,-97,12,12,-134,12,12,12,12,12,-99,472,12,12,-98,-137,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,19,-75,-69,-70,-24,-71,19,-25,-26,-20,-72,-18,19,-43,19,-133,-19,-94,19,19,-27,-87,19,19,19,19,-21,-22,-23,19,19,-89,-85,-86,-91,19,-57,19,-58,-138,19,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,19,19,19,19,19,-28,-150,-78,-82,-29,-149,-79,19,19,19,19,19,-97,19,19,-134,19,19,19,19,19,-99,19,19,-98,-137,]),'STDIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,109,114,115,118,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[22,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,153,-67,-68,165,22,-75,-69,-70,-24,-71,22,-25,-26,-20,-72,-18,22,-43,22,-133,-19,-94,22,22,-27,-87,22,22,22,22,-21,-22,-23,22,22,-89,-85,-86,-91,22,-57,22,-58,-138,22,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,22,22,22,22,22,-28,-150,-78,-82,-29,-149,-79,22,22,22,22,22,-97,22,22,-134,22,22,22,22,22,-99,22,22,-98,-137,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,33,47,48,71,86,92,114,115,120,132,133,134,135,148,159,174,187,188,189,190,191,215,216,225,229,240,245,247,249,250,257,262,263,271,273,274,278,283,293,302,304,306,307,313,314,315,318,321,328,330,331,332,336,344,346,348,354,355,356,357,360,364,369,371,373,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,430,431,432,433,434,435,436,437,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[23,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,80,-3,-148,-39,-76,147,-67,-68,23,-75,-69,-70,193,-24,-71,23,193,-92,-105,-106,-107,-25,-26,-20,-72,-18,23,-43,23,-133,-19,-94,-93,193,193,23,23,-27,-87,23,23,23,23,-21,-22,-23,-108,-109,193,193,23,23,-89,-85,-86,-91,23,-57,23,-58,-138,23,-110,-111,-112,-95,193,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,23,23,-113,23,-114,23,193,23,-28,-150,-78,-82,-29,-149,-79,23,-125,23,23,-115,-116,-117,23,23,-97,23,23,-134,-124,23,-120,23,23,23,-121,23,-99,-118,23,23,-119,-98,-137,-122,-123,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,135,148,159,174,187,188,189,190,191,196,215,216,225,229,240,245,247,249,250,257,262,263,271,273,274,278,283,293,302,304,306,307,313,314,315,318,321,328,330,331,332,336,344,346,348,354,355,356,357,360,364,369,371,373,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,430,431,432,433,434,435,436,437,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,29,-75,-69,-70,197,-24,-71,29,197,-92,-105,-106,-107,269,-25,-26,-20,-72,-18,29,-43,29,-133,-19,-94,-93,197,197,29,29,-27,-87,29,29,29,29,-21,-22,-23,-108,-109,197,197,29,29,-89,-85,-86,-91,29,-57,29,-58,-138,29,-110,-111,-112,-95,197,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,29,29,-113,29,-114,29,197,29,-28,-150,-78,-82,-29,-149,-79,29,-125,29,29,-115,-116,-117,29,29,-97,29,29,-134,-124,29,-120,29,29,29,-121,29,-99,-118,29,29,-119,-98,-137,-122,-123,]),'LIST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,30,-75,-69,-70,-24,-71,30,-25,-26,-20,-72,-18,30,-43,30,-133,-19,-94,30,30,-27,-87,30,30,30,30,-21,-22,-23,30,30,-89,-85,-86,-91,30,-57,30,-58,-138,30,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,30,30,30,30,30,-28,-150,-78,-82,-29,-149,-79,30,30,30,30,30,-97,30,30,-134,30,30,30,30,30,-99,30,30,-98,-137,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,31,-75,-69,-70,-24,-71,31,-25,-26,-20,-72,-18,31,-43,31,-133,-19,-94,31,31,-27,-87,31,31,31,31,-21,-22,-23,31,31,-89,-85,-86,-91,31,-57,31,-58,-138,31,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,31,31,31,31,31,-28,-150,-78,-82,-29,-149,-79,31,31,31,31,31,-97,31,31,-134,31,31,31,31,31,-99,31,31,-98,-137,]),'DYNAMIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,33,47,48,71,86,92,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,81,-3,-148,-39,-76,32,-67,-68,32,-75,-69,-70,-24,-71,32,-25,-26,-20,-72,-18,32,-43,32,-133,-19,-94,32,32,-27,-87,32,32,32,32,-21,-22,-23,32,32,-89,-85,-86,-91,32,-57,32,-58,-138,32,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,32,32,32,32,32,-28,-150,-78,-82,-29,-149,-79,32,32,32,32,32,-97,32,32,-134,32,32,32,32,32,-99,32,32,-98,-137,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,92,114,115,120,132,133,134,135,148,159,174,187,188,189,190,191,215,216,225,229,240,245,247,249,250,257,262,263,271,273,274,278,283,293,302,304,306,307,313,314,315,318,321,328,330,331,332,336,344,346,348,354,355,356,357,360,364,369,371,373,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,430,431,432,433,434,435,436,437,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,33,-67,-68,33,-75,-69,-70,196,-24,-71,33,196,-92,-105,-106,-107,-25,-26,-20,-72,-18,33,-43,33,-133,-19,-94,-93,196,196,33,33,-27,-87,33,33,33,33,-21,-22,-23,-108,-109,196,196,33,33,-89,-85,-86,-91,33,-57,33,-58,-138,33,-110,-111,-112,-95,196,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,33,33,-113,33,-114,33,196,33,-28,-150,-78,-82,-29,-149,-79,33,-125,33,33,-115,-116,-117,33,33,-97,33,33,-134,-124,33,-120,33,33,33,-121,33,-99,-118,33,33,-119,-98,-137,-122,-123,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,27,28,29,31,32,34,35,36,37,38,39,40,41,47,48,49,50,51,52,53,54,55,58,59,66,69,71,74,79,80,81,82,83,84,86,90,91,109,110,114,115,117,118,120,128,132,133,134,135,136,137,141,144,147,148,154,156,158,159,161,162,166,168,169,174,178,179,181,183,184,185,187,188,189,190,191,192,193,197,201,202,203,204,205,206,207,208,209,212,215,216,218,222,223,224,225,227,229,235,236,240,245,246,247,249,250,257,262,263,266,267,268,269,271,272,273,274,278,280,281,282,283,288,289,291,293,300,301,302,304,306,307,309,311,312,313,314,315,318,319,321,322,328,330,331,332,333,336,338,344,346,348,350,354,355,356,357,358,360,364,369,370,371,372,373,374,379,380,381,382,383,388,389,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,425,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[24,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,57,64,65,70,-38,-40,-41,73,77,78,57,87,88,89,-126,-127,-128,-129,-3,-148,57,57,57,57,57,57,102,106,107,57,116,-39,124,129,130,131,-126,-127,-128,-76,124,124,152,157,-67,-68,163,164,24,57,-75,-69,-70,186,198,199,124,213,214,-24,57,226,228,-71,57,57,57,241,242,24,124,252,124,57,57,57,186,-92,-105,-106,-107,264,265,270,124,124,124,-49,-50,-51,-52,-53,-54,124,-25,-26,57,-127,-128,-126,-20,57,-72,57,57,-18,24,305,-43,24,-133,-19,-94,-93,323,324,325,326,186,329,186,24,24,334,57,57,-27,57,57,57,-87,57,57,24,24,24,24,359,124,124,-21,-22,-23,-108,57,-109,57,186,186,24,24,386,-89,57,-85,-86,-91,57,24,-57,24,-58,124,-138,24,-110,57,-111,57,-112,57,-95,186,-96,-42,-77,428,429,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,24,24,-113,24,-114,24,186,57,24,-28,-150,-78,-82,-29,-149,-79,124,24,-125,24,24,-115,-116,-117,24,24,-97,24,24,-134,-124,24,-120,24,24,24,-121,24,-99,-118,24,24,-119,-98,-137,-122,-123,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,34,-75,-69,-70,-24,-71,34,-25,-26,-20,-72,-18,34,-43,34,-133,-19,-94,34,34,-27,-87,34,34,34,34,-21,-22,-23,34,34,-89,-85,-86,-91,34,-57,34,-58,-138,34,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,34,34,34,34,34,-28,-150,-78,-82,-29,-149,-79,34,34,34,34,34,-97,34,34,-134,34,34,34,34,34,-99,34,34,-98,-137,]),'INCREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,24,26,27,28,34,47,48,49,50,51,52,53,54,55,57,66,71,86,102,109,114,115,118,120,128,132,133,134,148,152,154,159,161,162,164,166,174,183,184,185,215,216,218,225,227,229,235,236,240,245,247,249,250,257,262,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,313,314,315,319,322,331,332,333,336,338,344,346,348,350,354,355,356,357,360,364,370,372,374,379,381,382,383,386,391,394,396,397,399,400,403,405,406,407,410,411,414,422,425,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,58,67,-38,-40,-41,58,-3,-148,58,58,58,58,58,58,58,104,58,-39,-76,104,58,-67,-68,58,35,58,-75,-69,-70,-24,104,58,-71,58,58,104,58,35,58,58,58,-25,-26,58,-20,58,-72,58,58,-18,35,-43,35,-133,-19,-94,35,35,58,58,-27,58,58,58,-87,58,58,35,35,35,35,-21,-22,-23,58,58,35,35,388,-89,58,-85,-86,-91,58,35,-57,35,-58,-138,35,58,58,58,-95,-96,-42,-77,426,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,35,35,35,35,58,35,-28,-150,-78,-82,-29,-149,-79,35,35,35,35,35,-97,35,35,-134,35,35,35,35,35,-99,35,35,-98,-137,]),'DECREMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,24,26,27,28,34,47,48,49,50,51,52,53,54,55,57,66,71,86,102,109,114,115,118,120,128,132,133,134,148,152,154,159,161,162,164,166,174,183,184,185,215,216,218,225,227,229,235,236,240,245,247,249,250,257,262,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,313,314,315,319,322,331,332,333,336,338,344,346,348,350,354,355,356,357,360,364,370,372,374,379,381,382,383,386,391,394,396,397,399,400,403,405,406,407,410,411,414,422,425,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,59,68,-38,-40,-41,59,-3,-148,59,59,59,59,59,59,59,105,59,-39,-76,105,59,-67,-68,59,36,59,-75,-69,-70,-24,105,59,-71,59,59,105,59,36,59,59,59,-25,-26,59,-20,59,-72,59,59,-18,36,-43,36,-133,-19,-94,36,36,59,59,-27,59,59,59,-87,59,59,36,36,36,36,-21,-22,-23,59,59,36,36,389,-89,59,-85,-86,-91,59,36,-57,36,-58,-138,36,59,59,59,-95,-96,-42,-77,427,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,36,36,36,36,59,36,-28,-150,-78,-82,-29,-149,-79,36,36,36,36,36,-97,36,36,-134,36,36,36,36,36,-99,36,36,-98,-137,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,37,-75,-69,-70,-24,-71,37,-25,-26,-20,-72,-18,37,-43,37,-133,-19,-94,37,37,-27,-87,37,37,37,37,-21,-22,-23,37,37,-89,-85,-86,-91,37,-57,37,-58,-138,37,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,37,37,37,37,37,-28,-150,-78,-82,-29,-149,-79,37,37,37,37,37,-97,37,37,-134,37,37,37,37,37,-99,37,37,-98,-137,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,24,26,27,28,34,42,43,44,47,48,49,50,51,52,53,54,55,66,70,71,73,86,108,109,114,115,116,118,120,128,132,133,134,148,152,154,157,159,161,162,163,164,166,174,183,184,185,186,215,216,218,225,226,227,228,229,235,236,240,241,245,247,249,250,257,262,264,270,274,278,281,282,283,286,288,289,291,293,298,300,301,302,304,306,307,313,314,315,319,322,325,326,331,332,336,338,344,346,348,350,354,355,356,357,360,364,370,372,374,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,425,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,55,20,66,-38,-40,-41,20,90,91,92,-3,-148,20,20,20,20,20,20,20,20,119,-39,121,-76,151,154,-67,-68,162,166,20,20,-75,-69,-70,-24,218,20,227,-71,20,20,235,236,20,20,20,20,20,261,-25,-26,20,-20,289,20,291,-72,20,20,-18,301,20,-43,20,-133,-19,-94,320,327,20,20,20,20,-27,337,20,20,20,-87,349,20,20,20,20,20,20,-21,-22,-23,20,20,375,376,20,20,-89,20,-85,-86,-91,20,20,-57,20,-58,-138,20,20,20,20,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,20,20,20,20,20,20,-28,-150,-78,-82,-29,-149,-79,20,20,20,20,20,-97,20,20,-134,20,20,20,20,20,-99,20,20,-98,-137,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,26,27,28,33,34,47,48,49,50,51,52,53,54,55,66,71,74,75,76,86,90,91,92,109,114,115,118,119,120,121,128,132,133,134,135,141,148,154,159,161,162,166,173,174,178,180,181,183,184,185,187,188,189,190,191,194,195,196,201,202,203,204,205,206,207,208,209,212,215,216,218,225,227,229,235,236,240,244,245,247,249,250,257,261,262,263,271,273,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,311,312,313,314,315,318,319,320,321,322,327,328,330,331,332,336,338,344,346,348,350,354,355,356,357,358,360,364,369,370,371,372,373,374,375,376,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,425,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,62,-38,-40,-41,82,62,-3,-148,62,62,62,62,62,62,62,62,-39,62,82,82,-76,62,62,82,62,-67,-68,62,82,38,82,62,-75,-69,-70,82,62,-24,224,-71,62,62,224,82,38,62,82,62,62,62,62,82,-92,-105,-106,-107,82,82,82,62,62,62,-49,-50,-51,-52,-53,-54,62,-25,-26,62,-20,62,-72,62,62,-18,82,38,-43,38,-133,-19,82,-94,-93,82,82,38,38,62,62,-27,62,62,62,-87,62,62,38,38,38,38,62,62,-21,-22,-23,-108,62,82,-109,62,82,82,82,38,38,-89,62,-85,-86,-91,62,38,-57,38,-58,62,-138,38,-110,62,-111,62,-112,62,82,82,-95,82,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,38,38,-113,38,-114,38,82,62,38,-28,-150,-78,-82,-29,-149,-79,62,38,-125,38,38,-115,-116,-117,38,38,-97,38,38,-134,-124,38,-120,38,38,38,-121,38,-99,-118,38,38,-119,-98,-137,-122,-123,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,26,27,28,33,34,47,48,49,50,51,52,53,54,55,66,71,74,75,76,86,90,91,92,109,114,115,118,119,120,121,128,132,133,134,135,141,148,154,159,161,162,166,173,174,178,180,181,183,184,185,187,188,189,190,191,194,195,196,201,202,203,204,205,206,207,208,209,212,215,216,218,225,227,229,235,236,240,244,245,247,249,250,257,261,262,263,271,273,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,311,312,313,314,315,318,319,320,321,322,327,328,330,331,332,336,338,344,346,348,350,354,355,356,357,358,360,364,369,370,371,372,373,374,375,376,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,425,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,60,-38,-40,-41,83,60,-3,-148,60,60,60,60,60,60,60,60,-39,60,83,83,-76,60,60,83,60,-67,-68,60,83,39,83,60,-75,-69,-70,83,60,-24,222,-71,60,60,222,83,39,60,83,60,60,60,60,83,-92,-105,-106,-107,83,83,83,60,60,60,-49,-50,-51,-52,-53,-54,60,-25,-26,60,-20,60,-72,60,60,-18,83,39,-43,39,-133,-19,83,-94,-93,83,83,39,39,60,60,-27,60,60,60,-87,60,60,39,39,39,39,60,60,-21,-22,-23,-108,60,83,-109,60,83,83,83,39,39,-89,60,-85,-86,-91,60,39,-57,39,-58,60,-138,39,-110,60,-111,60,-112,60,83,83,-95,83,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,39,39,-113,39,-114,39,83,60,39,-28,-150,-78,-82,-29,-149,-79,60,39,-125,39,39,-115,-116,-117,39,39,-97,39,39,-134,-124,39,-120,39,39,39,-121,39,-99,-118,39,39,-119,-98,-137,-122,-123,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,26,27,28,33,34,47,48,49,50,51,52,53,54,55,66,71,74,75,76,86,90,91,92,109,114,115,118,119,120,121,128,132,133,134,135,141,148,154,159,161,162,166,173,174,178,180,181,183,184,185,187,188,189,190,191,194,195,196,201,202,203,204,205,206,207,208,209,212,215,216,218,225,227,229,235,236,240,244,245,247,249,250,257,261,262,263,271,273,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,311,312,313,314,315,318,319,320,321,322,327,328,330,331,332,336,338,344,346,348,350,354,355,356,357,358,360,364,369,370,371,372,373,374,375,376,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,425,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,61,-38,-40,-41,84,61,-3,-148,61,61,61,61,61,61,61,61,-39,61,84,84,-76,61,61,84,61,-67,-68,61,84,40,84,61,-75,-69,-70,84,61,-24,223,-71,61,61,223,84,40,61,84,61,61,61,61,84,-92,-105,-106,-107,84,84,84,61,61,61,-49,-50,-51,-52,-53,-54,61,-25,-26,61,-20,61,-72,61,61,-18,84,40,-43,40,-133,-19,84,-94,-93,84,84,40,40,61,61,-27,61,61,61,-87,61,61,40,40,40,40,61,61,-21,-22,-23,-108,61,84,-109,61,84,84,84,40,40,-89,61,-85,-86,-91,61,40,-57,40,-58,61,-138,40,-110,61,-111,61,-112,61,84,84,-95,84,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,40,40,-113,40,-114,40,84,61,40,-28,-150,-78,-82,-29,-149,-79,61,40,-125,40,40,-115,-116,-117,40,40,-97,40,40,-134,-124,40,-120,40,40,40,-121,40,-99,-118,40,40,-119,-98,-137,-122,-123,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,33,47,48,71,75,76,86,92,114,115,119,120,121,132,133,134,135,148,154,159,166,173,174,180,187,188,189,190,191,194,195,196,215,216,225,229,240,244,245,247,249,250,257,261,262,263,271,273,274,278,283,293,302,304,306,307,313,314,315,318,320,321,327,328,330,331,332,336,344,346,348,354,355,356,357,360,364,369,371,373,375,376,379,380,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,412,414,415,422,423,430,431,432,433,434,435,436,437,440,441,442,443,444,445,446,449,450,451,452,454,455,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,],[41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,41,-3,-148,-39,41,41,-76,41,-67,-68,41,41,41,-75,-69,-70,41,-24,41,-71,41,41,41,41,41,-92,-105,-106,-107,41,41,41,-25,-26,-20,-72,-18,41,41,-43,41,-133,-19,41,-94,-93,41,41,41,41,-27,-87,41,41,41,41,-21,-22,-23,-108,41,-109,41,41,41,41,41,-89,-85,-86,-91,41,-57,41,-58,-138,41,-110,-111,-112,41,41,-95,41,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,41,41,-113,41,-114,41,41,41,-28,-150,-78,-82,-29,-149,-79,41,-125,41,41,-115,-116,-117,41,41,-97,41,41,-134,-124,41,-120,41,41,41,-121,41,-99,-118,41,41,-119,-98,-137,-122,-123,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,42,-75,-69,-70,-24,-71,42,-25,-26,-20,-72,-18,42,-43,42,-133,-19,-94,42,42,-27,-87,42,42,42,42,-21,-22,-23,42,42,-89,-85,-86,-91,42,-57,42,-58,-138,42,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,42,42,42,42,42,-28,-150,-78,-82,-29,-149,-79,42,42,42,42,42,-97,42,42,-134,42,42,42,42,42,-99,42,42,-98,-137,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,43,-75,-69,-70,-24,-71,43,-25,-26,-20,-72,-18,43,-43,43,-133,-19,-94,43,43,-27,-87,43,43,43,43,-21,-22,-23,43,43,-89,-85,-86,-91,43,-57,43,-58,-138,43,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,43,43,43,43,43,-28,-150,-78,-82,-29,-149,-79,43,43,43,43,43,-97,43,43,-134,43,43,43,43,43,-99,43,43,-98,-137,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,120,132,133,134,148,159,174,215,216,225,229,240,245,247,249,250,257,262,274,278,283,293,302,304,306,307,313,314,315,331,332,336,344,346,348,354,355,356,357,360,364,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,430,431,432,433,434,435,436,437,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[44,44,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,44,-75,-69,-70,-24,-71,44,-25,-26,-20,-72,-18,44,-43,44,-133,-19,-94,44,44,-27,-87,44,44,44,44,-21,-22,-23,44,44,-89,-85,-86,-91,44,-57,44,-58,-138,44,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,44,44,44,44,44,-28,-150,-78,-82,-29,-149,-79,44,44,44,44,44,-97,44,44,-134,44,44,44,44,44,-99,44,44,-98,-137,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,26,27,28,34,47,48,49,50,51,52,53,54,55,66,71,74,86,90,91,109,114,115,118,120,128,132,133,134,141,148,154,159,161,162,166,174,178,181,183,184,185,201,202,203,204,205,206,207,208,209,212,215,216,218,225,227,229,235,236,240,245,247,249,250,257,262,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,311,312,313,314,315,319,322,331,332,336,338,344,346,348,350,354,355,356,357,358,360,364,370,372,374,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,425,430,431,432,433,434,435,436,437,439,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[45,45,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,45,-38,-40,-41,45,-3,-148,45,45,45,45,45,45,45,45,-39,45,-76,45,45,45,-67,-68,45,45,45,-75,-69,-70,45,-24,45,-71,45,45,45,45,45,45,45,45,45,45,45,45,-49,-50,-51,-52,-53,-54,45,-25,-26,45,-20,45,-72,45,45,-18,45,-43,45,-133,-19,-94,45,45,45,45,-27,45,45,45,-87,45,45,45,45,45,45,45,45,-21,-22,-23,45,45,45,45,-89,45,-85,-86,-91,45,45,-57,45,-58,45,-138,45,45,45,45,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,45,45,45,45,45,45,-28,-150,-78,-82,-29,-149,-79,45,45,45,45,45,45,-97,45,45,-134,45,45,45,45,45,-99,45,45,-98,-137,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,26,27,28,34,47,48,49,50,51,52,53,54,55,66,71,74,86,90,91,109,114,115,118,120,128,132,133,134,141,148,154,159,161,162,166,174,178,181,183,184,185,201,202,203,204,205,206,207,208,209,212,215,216,218,225,227,229,235,236,240,245,247,249,250,257,262,274,278,281,282,283,288,289,291,293,300,301,302,304,306,307,311,312,313,314,315,319,322,331,332,336,338,344,346,348,350,354,355,356,357,358,360,364,370,372,374,379,381,382,383,391,394,396,397,399,400,403,405,406,407,410,411,414,422,425,430,431,432,433,434,435,436,437,439,440,442,443,449,450,451,452,454,455,458,460,461,462,464,465,468,469,471,472,],[46,46,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,46,-38,-40,-41,46,-3,-148,46,46,46,46,46,46,46,46,-39,46,-76,46,46,46,-67,-68,46,46,46,-75,-69,-70,46,-24,46,-71,46,46,46,46,46,46,46,46,46,46,46,46,-49,-50,-51,-52,-53,-54,46,-25,-26,46,-20,46,-72,46,46,-18,46,-43,46,-133,-19,-94,46,46,46,46,-27,46,46,46,-87,46,46,46,46,46,46,46,46,-21,-22,-23,46,46,46,46,-89,46,-85,-86,-91,46,46,-57,46,-58,46,-138,46,46,46,46,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,46,46,46,46,46,46,-28,-150,-78,-82,-29,-149,-79,46,46,46,46,46,46,-97,46,46,-134,46,46,46,46,46,-99,46,46,-98,-137,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,47,48,71,86,114,115,132,133,134,148,159,215,216,225,229,240,247,250,257,262,283,293,313,314,315,336,344,346,348,355,357,360,379,381,382,383,391,394,396,397,399,400,403,405,406,407,431,432,433,434,435,436,437,451,455,465,471,472,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-3,-148,-39,-76,-67,-68,-75,-69,-70,-24,-71,-25,-26,-20,-72,-18,-43,-133,-19,-94,-27,-87,-21,-22,-23,-89,-85,-86,-91,-57,-58,-138,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,-28,-150,-78,-82,-29,-149,-79,-97,-134,-99,-98,-137,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,26,27,28,45,46,47,48,60,61,62,71,86,114,115,124,132,133,134,148,159,174,187,188,189,190,191,215,216,225,229,240,247,250,254,255,257,262,263,283,293,304,307,313,314,315,318,321,328,330,331,332,336,344,346,348,354,355,356,357,360,361,362,369,371,373,379,381,382,383,391,394,396,397,399,400,403,405,406,407,411,412,415,423,431,432,433,434,435,436,437,440,441,443,444,445,446,450,451,454,455,456,457,458,459,462,463,464,465,467,468,469,470,471,472,473,474,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-38,-40,-41,-146,-147,-3,-148,-142,-143,-144,-39,-76,-67,-68,-145,-75,-69,-70,-24,-71,247,262,-92,-105,-106,-107,-25,-26,-20,-72,-18,-43,-133,310,-139,-19,-94,-93,-27,-87,355,357,-21,-22,-23,-108,-109,379,381,382,383,-89,-85,-86,-91,406,-57,407,-58,-138,-140,-141,-110,-111,-112,-95,-96,-42,-77,-80,-152,-88,-83,-84,-81,-151,-90,-55,-56,441,-113,-114,451,-28,-150,-78,-82,-29,-149,-79,457,-125,459,-115,-116,-117,463,-97,465,-134,466,-124,467,-120,470,-121,471,-99,-118,473,474,-119,-98,-137,-122,-123,]),'PLUS':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[49,-37,-145,-144,-142,-143,-146,-147,49,-145,-142,-143,-144,-63,-64,49,-65,-66,49,49,49,49,49,49,-37,49,-145,-36,-63,-64,-65,-66,49,-145,49,-145,49,49,-142,-143,-144,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MINUS':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[50,-37,-145,-144,-142,-143,-146,-147,50,-145,-142,-143,-144,-63,-64,50,-65,-66,50,50,50,50,50,50,-37,50,-145,-36,-63,-64,-65,-66,50,-145,50,-145,50,50,-142,-143,-144,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'TIMES':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[51,-37,-145,-144,-142,-143,-146,-147,51,-145,-142,-143,-144,-63,-64,51,-65,-66,51,51,51,51,51,51,-37,51,-145,-36,-63,-64,-65,-66,51,-145,51,-145,51,51,-142,-143,-144,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'DIVIDE':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[52,-37,-145,-144,-142,-143,-146,-147,52,-145,-142,-143,-144,-63,-64,52,-65,-66,52,52,52,52,52,52,-37,52,-145,-36,-63,-64,-65,-66,52,-145,52,-145,52,52,-142,-143,-144,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'INT_DIVIDE':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[53,-37,-145,-144,-142,-143,-146,-147,53,-145,-142,-143,-144,-63,-64,53,-65,-66,53,53,53,53,53,53,-37,53,-145,-36,-63,-64,-65,-66,53,-145,53,-145,53,53,-142,-143,-144,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'MODULE':([18,21,24,38,39,40,45,46,56,57,60,61,62,67,68,85,87,88,93,94,95,96,97,98,100,101,102,103,104,105,106,107,113,152,155,164,167,182,222,223,224,230,258,259,260,339,351,365,368,393,402,416,417,418,453,],[54,-37,-145,-144,-142,-143,-146,-147,54,-145,-142,-143,-144,-63,-64,54,-65,-66,54,54,54,54,54,54,-37,54,-145,-36,-63,-64,-65,-66,54,-145,54,-145,54,54,-142,-143,-144,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'RPAREN':([21,45,46,55,56,57,60,61,62,66,93,94,95,96,97,98,100,101,102,103,104,105,106,107,112,113,114,115,119,121,124,133,134,138,139,142,151,154,162,166,170,172,175,210,218,220,222,223,224,227,230,231,233,234,235,236,238,242,261,275,276,277,284,289,290,291,294,296,301,303,305,316,320,327,333,334,337,340,343,349,352,366,377,384,385,387,419,420,453,],[-37,-146,-147,99,103,-145,-142,-143,-144,111,-30,-31,-32,-33,-34,-35,149,150,-145,-36,-63,-64,-65,-66,160,-73,-67,-68,171,176,-145,-69,-70,200,-44,211,217,221,232,239,243,-59,248,-48,285,287,-142,-143,-144,-132,-74,292,-130,-131,295,297,299,-61,317,-45,-46,-47,335,341,342,-132,345,347,353,-60,-62,363,367,378,-132,390,392,395,398,401,404,413,421,424,-102,-104,447,448,-103,]),'COMMA':([21,41,45,46,57,60,61,62,82,83,84,93,94,95,96,97,98,103,104,105,106,107,112,113,122,123,124,126,170,172,175,220,230,233,238,242,251,254,255,303,305,316,361,362,366,377,408,419,420,456,],[-37,-129,-146,-147,-145,-142,-143,-144,-126,-127,-128,-30,-31,-32,-33,-34,-35,-36,-63,-64,-65,-66,161,-73,178,-135,-145,180,244,-59,244,244,-74,161,244,-61,-136,311,-139,-60,-62,244,-140,-141,244,244,178,244,244,311,]),'DOT':([22,153,165,],[63,219,237,]),'ASSIGN':([24,64,65,70,77,78,129,130,131,213,214,252,264,265,323,324,325,359,386,],[69,109,110,118,127,128,183,184,185,281,282,308,319,322,370,372,374,409,425,]),'ELSE':([26,382,],[72,-42,]),'LBRACKET':([30,308,],[74,358,]),'LESS':([30,31,45,46,60,61,62,124,140,],[75,76,-146,-147,-142,-143,-144,-145,205,]),'GREATER':([41,45,46,60,61,62,82,83,84,124,125,140,253,],[-129,-146,-147,-142,-143,-144,-126,-127,-128,-145,179,204,309,]),'RBRACKET':([45,46,60,61,62,122,123,124,251,408,],[-146,-147,-142,-143,-144,177,-135,-145,-136,438,]),'GREATER_EQUAL':([45,46,60,61,62,124,140,],[-146,-147,-142,-143,-144,-145,206,]),'LESS_EQUAL':([45,46,60,61,62,124,140,],[-146,-147,-142,-143,-144,-145,207,]),'EQUALS':([45,46,60,61,62,124,140,],[-146,-147,-142,-143,-144,-145,208,]),'NOT_EQUALS':([45,46,60,61,62,124,140,],[-146,-147,-142,-143,-144,-145,209,]),'AND':([45,46,60,61,62,124,138,139,142,210,275,276,277,279,],[-146,-147,-142,-143,-144,-145,201,-44,201,-48,-45,-46,-47,201,]),'OR':([45,46,60,61,62,124,138,139,142,210,275,276,277,279,],[-146,-147,-142,-143,-144,-145,202,-44,202,-48,-45,-46,-47,202,]),'COLON':([45,46,60,61,62,124,256,],[-146,-147,-142,-143,-144,-145,312,]),'READLINESYNC':([63,219,237,],[108,286,298,]),'NEW':([69,109,110,118,],[117,156,158,168,]),'LBRACE':([72,89,127,171,176,198,199,200,211,243,248,317,329,363,367,378,390,409,413,421,424,447,448,],[120,135,181,245,249,271,273,274,278,302,306,364,380,410,414,422,430,439,442,449,452,460,461,]),'EXTENDS':([89,],[136,]),'IMPLEMENTS':([89,198,],[137,272,]),'NOT':([90,91,201,202,212,],[141,141,141,141,141,]),'REQUIRED':([119,121,154,166,244,261,320,327,375,376,],[173,173,173,173,173,173,173,173,173,173,]),'FINAL':([135,187,188,189,190,191,263,271,273,318,321,328,330,369,371,373,380,412,415,423,441,444,445,446,457,459,463,467,470,473,474,],[194,194,-92,-105,-106,-107,-93,194,194,-108,-109,194,194,-110,-111,-112,194,-113,-114,194,-125,-115,-116,-117,-124,-120,-121,-118,-119,-122,-123,]),'CONST':([135,187,188,189,190,191,263,271,273,318,321,328,330,369,371,373,380,412,415,423,441,444,445,446,457,459,463,467,470,473,474,],[195,195,-92,-105,-106,-107,-93,195,195,-108,-109,195,195,-110,-111,-112,195,-113,-114,195,-125,-115,-116,-117,-124,-120,-121,-118,-119,-122,-123,]),'IN':([213,],[280,]),'ARROW':([221,239,287,299,],[288,300,338,350,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compiler':([0,],[1,]),'statement_composed':([0,120,245,249,274,278,302,306,364,410,414,422,430,442,449,452,460,461,],[2,174,304,307,331,332,354,356,411,440,443,450,454,458,462,464,468,469,]),'statement':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[3,47,3,47,3,3,3,3,3,47,3,47,47,47,47,47,3,3,47,3,3,3,47,3,47,3,47,3,47,47,3,3,47,47,47,47,]),'print_stmt':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input_stmt':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'control_structures':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'function':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'lambda_function':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'list_def':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'map_def':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'variable_def':([0,2,92,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[11,11,145,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_call':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_statement':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'incdec_statement':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,333,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,385,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'class_def':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'object_instantiation':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expression':([0,2,20,34,49,50,51,52,53,54,55,66,109,118,120,128,154,161,162,166,174,183,184,185,218,227,235,236,245,249,274,278,281,282,288,289,291,300,301,302,304,306,307,319,322,331,332,338,350,354,356,364,370,372,374,410,411,414,422,425,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[18,18,56,85,93,94,95,96,97,98,101,113,155,167,18,182,56,230,113,56,18,258,259,260,113,113,113,113,18,18,18,18,167,155,339,113,113,351,113,18,18,18,18,365,368,18,18,393,402,18,18,18,416,417,418,18,18,18,18,453,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'value':([0,2,20,34,49,50,51,52,53,54,55,66,74,90,91,109,118,120,128,141,154,161,162,166,174,178,181,183,184,185,201,202,203,212,218,227,235,236,245,249,274,278,281,282,288,289,291,300,301,302,304,306,307,311,312,319,322,331,332,338,350,354,356,358,364,370,372,374,410,411,414,422,425,430,439,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[21,21,21,21,21,21,21,21,21,21,100,21,123,140,140,21,21,21,21,210,21,21,21,21,21,251,256,21,21,21,140,140,277,140,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,256,362,21,21,21,21,21,21,21,21,123,21,21,21,21,21,21,21,21,21,21,256,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'type':([0,2,33,75,76,92,119,120,121,135,154,166,173,174,180,187,194,195,196,244,245,249,261,271,273,274,278,302,304,306,307,320,327,328,330,331,332,354,356,364,375,376,380,410,411,414,422,423,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[25,25,79,125,126,144,169,25,169,192,169,169,246,25,253,192,266,267,268,169,25,25,169,192,192,25,25,25,25,25,25,169,169,192,192,25,25,25,25,25,169,169,192,25,25,25,25,192,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'if_block':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'while_loop':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'for_loop':([0,2,120,174,245,249,274,278,302,304,306,307,331,332,354,356,364,410,411,414,422,430,440,442,443,449,450,452,454,458,460,461,462,464,468,469,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'else_block':([26,],[71,]),'argument_list':([66,162,218,227,235,236,289,291,301,],[112,233,233,233,233,233,233,233,233,]),'value_list':([74,358,],[122,408,]),'conditions':([90,91,212,],[138,142,279,]),'condition':([90,91,201,202,212,],[139,139,275,276,139,]),'for_init':([92,],[143,]),'empty':([92,162,218,227,235,236,289,291,301,333,],[146,234,234,234,234,234,234,234,234,387,]),'parameters':([119,121,154,166,261,320,327,375,376,],[170,175,220,238,316,366,377,419,420,]),'parameter':([119,121,154,166,244,261,320,327,375,376,],[172,172,172,172,303,172,172,172,172,172,]),'class_body':([135,271,273,380,],[187,328,330,423,]),'class_member':([135,187,271,273,328,330,380,423,],[188,263,188,188,263,263,188,263,]),'class_property':([135,187,271,273,328,330,380,423,],[189,189,189,189,189,189,189,189,]),'class_method':([135,187,271,273,328,330,380,423,],[190,190,190,190,190,190,190,190,]),'constructor':([135,187,271,273,328,330,380,423,],[191,191,191,191,191,191,191,191,]),'comparison_operator':([140,],[203,]),'argument_list_opt':([162,218,227,235,236,289,291,301,],[231,284,290,294,296,340,343,352,]),'map_entries':([181,439,],[254,456,]),'map_entry':([181,311,439,],[255,361,255,]),'for_update':([333,],[384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compiler","S'",1,None,None,None),
  ('compiler -> statement_composed','compiler',1,'p_compiler','analizador_sintactico.py',10),
  ('statement_composed -> statement','statement_composed',1,'p_statement_composed','analizador_sintactico.py',13),
  ('statement_composed -> statement_composed statement','statement_composed',2,'p_statement_composed','analizador_sintactico.py',14),
  ('statement -> print_stmt','statement',1,'p_statement','analizador_sintactico.py',17),
  ('statement -> input_stmt','statement',1,'p_statement','analizador_sintactico.py',18),
  ('statement -> control_structures','statement',1,'p_statement','analizador_sintactico.py',19),
  ('statement -> function','statement',1,'p_statement','analizador_sintactico.py',20),
  ('statement -> lambda_function','statement',1,'p_statement','analizador_sintactico.py',21),
  ('statement -> list_def','statement',1,'p_statement','analizador_sintactico.py',22),
  ('statement -> map_def','statement',1,'p_statement','analizador_sintactico.py',23),
  ('statement -> variable_def','statement',1,'p_statement','analizador_sintactico.py',24),
  ('statement -> SEMICOLON','statement',1,'p_statement','analizador_sintactico.py',25),
  ('statement -> function_call','statement',1,'p_statement','analizador_sintactico.py',26),
  ('statement -> return_statement','statement',1,'p_statement','analizador_sintactico.py',27),
  ('statement -> incdec_statement','statement',1,'p_statement','analizador_sintactico.py',28),
  ('statement -> class_def','statement',1,'p_statement','analizador_sintactico.py',29),
  ('statement -> object_instantiation','statement',1,'p_statement','analizador_sintactico.py',30),
  ('variable_def -> type ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',33),
  ('variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',34),
  ('variable_def -> VAR ID ASSIGN expression SEMICOLON','variable_def',5,'p_variable_def','analizador_sintactico.py',35),
  ('variable_def -> STATIC type ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',36),
  ('variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',37),
  ('variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON','variable_def',6,'p_variable_def','analizador_sintactico.py',38),
  ('print_stmt -> PRINT LPAREN RPAREN SEMICOLON','print_stmt',4,'p_print_stmt','analizador_sintactico.py',58),
  ('print_stmt -> PRINT LPAREN value RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',59),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','analizador_sintactico.py',60),
  ('input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',6,'p_input_stmt','analizador_sintactico.py',64),
  ('input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',65),
  ('input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON','input_stmt',9,'p_input_stmt','analizador_sintactico.py',66),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',70),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',71),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',72),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',73),
  ('expression -> expression INT_DIVIDE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',74),
  ('expression -> expression MODULE expression','expression',3,'p_expression_arithmetic','analizador_sintactico.py',75),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','analizador_sintactico.py',88),
  ('expression -> value','expression',1,'p_expression_value','analizador_sintactico.py',91),
  ('control_structures -> if_block','control_structures',1,'p_control_structures','analizador_sintactico.py',98),
  ('control_structures -> if_block else_block','control_structures',2,'p_control_structures','analizador_sintactico.py',99),
  ('control_structures -> while_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',100),
  ('control_structures -> for_loop','control_structures',1,'p_control_structures','analizador_sintactico.py',101),
  ('if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE','if_block',7,'p_if_block','analizador_sintactico.py',104),
  ('else_block -> ELSE LBRACE statement_composed RBRACE','else_block',4,'p_else_block','analizador_sintactico.py',107),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',110),
  ('conditions -> conditions AND condition','conditions',3,'p_conditions','analizador_sintactico.py',111),
  ('conditions -> conditions OR condition','conditions',3,'p_conditions','analizador_sintactico.py',112),
  ('condition -> value comparison_operator value','condition',3,'p_condition','analizador_sintactico.py',115),
  ('condition -> NOT value','condition',2,'p_condition','analizador_sintactico.py',116),
  ('comparison_operator -> GREATER','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',119),
  ('comparison_operator -> LESS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',120),
  ('comparison_operator -> GREATER_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',121),
  ('comparison_operator -> LESS_EQUAL','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',122),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',123),
  ('comparison_operator -> NOT_EQUALS','comparison_operator',1,'p_comparison_operator','analizador_sintactico.py',124),
  ('function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',128),
  ('function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','function',8,'p_function','analizador_sintactico.py',129),
  ('function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',130),
  ('function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','function',7,'p_function','analizador_sintactico.py',131),
  ('parameters -> parameter','parameters',1,'p_parameters','analizador_sintactico.py',141),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizador_sintactico.py',142),
  ('parameter -> type ID','parameter',2,'p_parameter','analizador_sintactico.py',145),
  ('parameter -> REQUIRED type ID','parameter',3,'p_parameter','analizador_sintactico.py',146),
  ('expression -> ID INCREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',150),
  ('expression -> ID DECREMENT','expression',2,'p_expression_incdec','analizador_sintactico.py',151),
  ('expression -> INCREMENT ID','expression',2,'p_expression_incdec','analizador_sintactico.py',152),
  ('expression -> DECREMENT ID','expression',2,'p_expression_incdec','analizador_sintactico.py',153),
  ('incdec_statement -> ID INCREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',156),
  ('incdec_statement -> ID DECREMENT SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',157),
  ('incdec_statement -> INCREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',158),
  ('incdec_statement -> DECREMENT ID SEMICOLON','incdec_statement',3,'p_incdec_statement','analizador_sintactico.py',159),
  ('function_call -> ID LPAREN RPAREN SEMICOLON','function_call',4,'p_function_call','analizador_sintactico.py',162),
  ('function_call -> ID LPAREN argument_list RPAREN SEMICOLON','function_call',5,'p_function_call','analizador_sintactico.py',163),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizador_sintactico.py',171),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizador_sintactico.py',172),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','analizador_sintactico.py',175),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','analizador_sintactico.py',176),
  ('while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE','while_loop',7,'p_while_loop','analizador_sintactico.py',179),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',182),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',183),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',184),
  ('object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',185),
  ('object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',9,'p_object_instantiation','analizador_sintactico.py',186),
  ('object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',187),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',188),
  ('object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',189),
  ('object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',190),
  ('object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',6,'p_object_instantiation','analizador_sintactico.py',191),
  ('object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',192),
  ('object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',193),
  ('object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','object_instantiation',8,'p_object_instantiation','analizador_sintactico.py',194),
  ('object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON','object_instantiation',7,'p_object_instantiation','analizador_sintactico.py',195),
  ('class_body -> class_member','class_body',1,'p_class_body','analizador_sintactico.py',199),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','analizador_sintactico.py',200),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','analizador_sintactico.py',203),
  ('class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',204),
  ('class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',7,'p_class_def','analizador_sintactico.py',205),
  ('class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE','class_def',9,'p_class_def','analizador_sintactico.py',206),
  ('for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE','for_loop',11,'p_for_loop','analizador_sintactico.py',212),
  ('for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE','for_loop',10,'p_for_loop','analizador_sintactico.py',213),
  ('for_init -> variable_def','for_init',1,'p_for_init','analizador_sintactico.py',217),
  ('for_init -> empty','for_init',1,'p_for_init','analizador_sintactico.py',218),
  ('for_update -> incdec_statement','for_update',1,'p_for_update','analizador_sintactico.py',221),
  ('for_update -> ID ASSIGN expression','for_update',3,'p_for_update','analizador_sintactico.py',222),
  ('for_update -> empty','for_update',1,'p_for_update','analizador_sintactico.py',223),
  ('class_member -> class_property','class_member',1,'p_class_member','analizador_sintactico.py',227),
  ('class_member -> class_method','class_member',1,'p_class_member','analizador_sintactico.py',228),
  ('class_member -> constructor','class_member',1,'p_class_member','analizador_sintactico.py',229),
  ('class_property -> type ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',232),
  ('class_property -> VAR ID SEMICOLON','class_property',3,'p_class_property','analizador_sintactico.py',233),
  ('class_property -> FINAL type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',234),
  ('class_property -> CONST type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',235),
  ('class_property -> STATIC type ID SEMICOLON','class_property',4,'p_class_property','analizador_sintactico.py',236),
  ('class_property -> type ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',237),
  ('class_property -> VAR ID ASSIGN expression SEMICOLON','class_property',5,'p_class_property','analizador_sintactico.py',238),
  ('class_property -> FINAL type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',239),
  ('class_property -> CONST type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',240),
  ('class_property -> STATIC type ID ASSIGN expression SEMICOLON','class_property',6,'p_class_property','analizador_sintactico.py',241),
  ('class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',244),
  ('class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',8,'p_class_method','analizador_sintactico.py',245),
  ('class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',246),
  ('class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE','class_method',7,'p_class_method','analizador_sintactico.py',247),
  ('class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',248),
  ('class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','class_method',9,'p_class_method','analizador_sintactico.py',249),
  ('constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE','constructor',7,'p_constructor','analizador_sintactico.py',252),
  ('constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE','constructor',6,'p_constructor','analizador_sintactico.py',253),
  ('type -> STRING','type',1,'p_type','analizador_sintactico.py',258),
  ('type -> INT','type',1,'p_type','analizador_sintactico.py',259),
  ('type -> DOUBLE','type',1,'p_type','analizador_sintactico.py',260),
  ('type -> BOOL','type',1,'p_type','analizador_sintactico.py',261),
  ('argument_list_opt -> argument_list','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',274),
  ('argument_list_opt -> empty','argument_list_opt',1,'p_argument_list_opt','analizador_sintactico.py',275),
  ('empty -> <empty>','empty',0,'p_empty','analizador_sintactico.py',278),
  ('list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON','list_def',5,'p_list_def','analizador_sintactico.py',284),
  ('list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON','list_def',10,'p_list_def','analizador_sintactico.py',285),
  ('value_list -> value','value_list',1,'p_value_list','analizador_sintactico.py',288),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','analizador_sintactico.py',289),
  ('map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',12,'p_map_def','analizador_sintactico.py',293),
  ('map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON','map_def',7,'p_map_def','analizador_sintactico.py',294),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries','analizador_sintactico.py',297),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries','analizador_sintactico.py',298),
  ('map_entry -> value COLON value','map_entry',3,'p_map_entry','analizador_sintactico.py',301),
  ('value -> INT','value',1,'p_value','analizador_sintactico.py',305),
  ('value -> DOUBLE','value',1,'p_value','analizador_sintactico.py',306),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',307),
  ('value -> ID','value',1,'p_value','analizador_sintactico.py',308),
  ('value -> TRUE','value',1,'p_value','analizador_sintactico.py',309),
  ('value -> FALSE','value',1,'p_value','analizador_sintactico.py',310),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expression','analizador_sintactico.py',328),
  ('lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',333),
  ('lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON','lambda_function',9,'p_lambda_function','analizador_sintactico.py',334),
  ('lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',335),
  ('lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON','lambda_function',8,'p_lambda_function','analizador_sintactico.py',336),
]
