Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    ASSERT
    BITNOT
    BREAK
    CASE
    CATCH
    CIRCUMFLEX
    CONTINUE
    DEFAULT
    DIVIDE_EQUAL
    DO
    DOLLAR_SIGN
    DOUBLE_COLON
    ENUM
    EXPORT
    FINALLY
    FUNCTION
    IMPORT
    IS
    LENGTH
    LIBRARY
    MINUS_EQUAL
    MODULE_EQUAL
    OF
    PART
    PLUS_EQUAL
    QUESTION
    QUOTATION_MARK
    SET
    SINGLE_QUOTE
    SUPER
    SWITCH
    THIS
    THROW
    TIMES_EQUAL
    TRY
    WITH

Grammar

Rule 0     S' -> compiler
Rule 1     compiler -> statement_composed
Rule 2     statement_composed -> statement
Rule 3     statement_composed -> statement_composed statement
Rule 4     statement -> print_stmt
Rule 5     statement -> input_stmt
Rule 6     statement -> control_structures
Rule 7     statement -> function
Rule 8     statement -> lambda_function
Rule 9     statement -> list_def
Rule 10    statement -> map_def
Rule 11    statement -> variable_def
Rule 12    statement -> SEMICOLON
Rule 13    statement -> function_call
Rule 14    statement -> return_statement
Rule 15    statement -> incdec_statement
Rule 16    statement -> class_def
Rule 17    statement -> object_instantiation
Rule 18    variable_def -> type ID ASSIGN expression SEMICOLON
Rule 19    variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON
Rule 20    variable_def -> VAR ID ASSIGN expression SEMICOLON
Rule 21    variable_def -> STATIC type ID ASSIGN expression SEMICOLON
Rule 22    variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON
Rule 23    variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON
Rule 24    print_stmt -> PRINT LPAREN RPAREN SEMICOLON
Rule 25    print_stmt -> PRINT LPAREN value RPAREN SEMICOLON
Rule 26    print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 27    input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
Rule 28    input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
Rule 29    input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression INT_DIVIDE expression
Rule 35    expression -> expression MODULE expression
Rule 36    expression -> LPAREN expression RPAREN
Rule 37    expression -> value
Rule 38    control_structures -> if_block
Rule 39    control_structures -> if_block else_block
Rule 40    control_structures -> while_loop
Rule 41    control_structures -> for_loop
Rule 42    if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
Rule 43    else_block -> ELSE LBRACE statement_composed RBRACE
Rule 44    conditions -> condition
Rule 45    conditions -> conditions AND condition
Rule 46    conditions -> conditions OR condition
Rule 47    condition -> value comparison_operator value
Rule 48    condition -> NOT value
Rule 49    comparison_operator -> GREATER
Rule 50    comparison_operator -> LESS
Rule 51    comparison_operator -> GREATER_EQUAL
Rule 52    comparison_operator -> LESS_EQUAL
Rule 53    comparison_operator -> EQUALS
Rule 54    comparison_operator -> NOT_EQUALS
Rule 55    function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 56    function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 57    function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE
Rule 58    function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
Rule 59    parameters -> parameter
Rule 60    parameters -> parameters COMMA parameter
Rule 61    parameter -> type ID
Rule 62    parameter -> REQUIRED type ID
Rule 63    expression -> ID INCREMENT
Rule 64    expression -> ID DECREMENT
Rule 65    expression -> INCREMENT ID
Rule 66    expression -> DECREMENT ID
Rule 67    incdec_statement -> ID INCREMENT SEMICOLON
Rule 68    incdec_statement -> ID DECREMENT SEMICOLON
Rule 69    incdec_statement -> INCREMENT ID SEMICOLON
Rule 70    incdec_statement -> DECREMENT ID SEMICOLON
Rule 71    function_call -> ID LPAREN RPAREN SEMICOLON
Rule 72    function_call -> ID LPAREN argument_list RPAREN SEMICOLON
Rule 73    argument_list -> expression
Rule 74    argument_list -> argument_list COMMA expression
Rule 75    return_statement -> RETURN expression SEMICOLON
Rule 76    return_statement -> RETURN SEMICOLON
Rule 77    while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
Rule 78    object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 79    object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 80    object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 81    object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 82    object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 83    object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 84    object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 85    object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
Rule 86    object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
Rule 87    object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON
Rule 88    object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
Rule 89    object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
Rule 90    object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
Rule 91    object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON
Rule 92    class_body -> class_member
Rule 93    class_body -> class_body class_member
Rule 94    class_def -> CLASS ID LBRACE class_body RBRACE
Rule 95    class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE
Rule 96    class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
Rule 97    class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
Rule 98    for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
Rule 99    for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
Rule 100   for_init -> variable_def
Rule 101   for_init -> empty
Rule 102   for_update -> incdec_statement
Rule 103   for_update -> ID ASSIGN expression
Rule 104   for_update -> empty
Rule 105   class_member -> class_property
Rule 106   class_member -> class_method
Rule 107   class_member -> constructor
Rule 108   class_property -> type ID SEMICOLON
Rule 109   class_property -> VAR ID SEMICOLON
Rule 110   class_property -> FINAL type ID SEMICOLON
Rule 111   class_property -> CONST type ID SEMICOLON
Rule 112   class_property -> STATIC type ID SEMICOLON
Rule 113   class_property -> type ID ASSIGN expression SEMICOLON
Rule 114   class_property -> VAR ID ASSIGN expression SEMICOLON
Rule 115   class_property -> FINAL type ID ASSIGN expression SEMICOLON
Rule 116   class_property -> CONST type ID ASSIGN expression SEMICOLON
Rule 117   class_property -> STATIC type ID ASSIGN expression SEMICOLON
Rule 118   class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 119   class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 120   class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE
Rule 121   class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
Rule 122   class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 123   class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 124   constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
Rule 125   constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE
Rule 126   type -> STRING
Rule 127   type -> INT
Rule 128   type -> DOUBLE
Rule 129   type -> BOOL
Rule 130   argument_list_opt -> argument_list
Rule 131   argument_list_opt -> empty
Rule 132   empty -> <empty>
Rule 133   list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON
Rule 134   list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
Rule 135   value_list -> value
Rule 136   value_list -> value_list COMMA value
Rule 137   map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
Rule 138   map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
Rule 139   map_entries -> map_entry
Rule 140   map_entries -> map_entries COMMA map_entry
Rule 141   map_entry -> value COLON value
Rule 142   value -> INT
Rule 143   value -> DOUBLE
Rule 144   value -> STRING
Rule 145   value -> ID
Rule 146   value -> TRUE
Rule 147   value -> FALSE
Rule 148   statement -> expression SEMICOLON
Rule 149   lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
Rule 150   lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
Rule 151   lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
Rule 152   lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 45
ARROW                : 149 150 151 152
AS                   : 
ASSERT               : 
ASSIGN               : 18 19 20 21 22 23 28 29 78 79 80 81 82 83 84 85 86 87 88 89 90 91 103 113 114 115 116 117 134 137 138 149 150 151 152
BITNOT               : 
BOOL                 : 129
BREAK                : 
CASE                 : 
CATCH                : 
CIRCUMFLEX           : 
CLASS                : 94 95 96 97
COLON                : 141
COMMA                : 60 74 136 137 140
CONST                : 111 116
CONTINUE             : 
DECREMENT            : 64 66 68 70
DEFAULT              : 
DIVIDE               : 33
DIVIDE_EQUAL         : 
DO                   : 
DOLLAR_SIGN          : 
DOT                  : 27 28 29
DOUBLE               : 128 143
DOUBLE_COLON         : 
DYNAMIC              : 19 23
ELSE                 : 43
ENUM                 : 
EQUALS               : 53
EXPORT               : 
EXTENDS              : 95 97
FALSE                : 147
FINAL                : 110 115
FINALLY              : 
FOR                  : 98 99
FUNCTION             : 
GREATER              : 49 134 137
GREATER_EQUAL        : 51
ID                   : 18 19 20 21 22 23 28 29 55 56 57 58 61 62 63 64 65 66 67 68 69 70 71 72 78 78 79 79 80 80 81 81 82 82 82 83 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 94 95 95 96 96 97 97 97 99 99 103 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 134 137 138 145 149 150 151 152
IF                   : 42
IMPLEMENTS           : 96 97
IMPORT               : 
IN                   : 99
INCREMENT            : 63 65 67 69
INT                  : 127 142
INT_DIVIDE           : 34
IS                   : 
LBRACE               : 42 43 55 56 57 58 77 94 95 96 97 98 99 118 119 120 121 122 123 124 125 137 138
LBRACKET             : 133 134
LENGTH               : 
LESS                 : 50 134 137
LESS_EQUAL           : 52
LIBRARY              : 
LIST                 : 133 134
LPAREN               : 24 25 26 27 28 29 36 42 55 56 57 58 71 72 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 98 99 118 119 120 121 122 123 124 125 149 150 151 152
MAP                  : 137 138
MINUS                : 31
MINUS_EQUAL          : 
MODULE               : 35
MODULE_EQUAL         : 
NEW                  : 78 79 82 84 86 88 90
NOT                  : 48
NOT_EQUALS           : 54
OF                   : 
OR                   : 46
PART                 : 
PLUS                 : 30
PLUS_EQUAL           : 
PRINT                : 24 25 26
QUESTION             : 
QUOTATION_MARK       : 
RBRACE               : 42 43 55 56 57 58 77 94 95 96 97 98 99 118 119 120 121 122 123 124 125 137 138
RBRACKET             : 133 134
READLINESYNC         : 27 28 29
REQUIRED             : 62
RETURN               : 75 76
RPAREN               : 24 25 26 27 28 29 36 42 55 56 57 58 71 72 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 98 99 118 119 120 121 122 123 124 125 149 150 151 152
SEMICOLON            : 12 18 19 20 21 22 23 24 25 26 27 28 29 67 68 69 70 71 72 75 76 78 79 80 81 82 83 84 85 86 87 88 89 90 91 98 98 108 109 110 111 112 113 114 115 116 117 133 134 137 138 148 149 150 151 152
SET                  : 
SINGLE_QUOTE         : 
STATIC               : 21 22 23 112 117 122 123
STDIN                : 27 28 29
STRING               : 126 144
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 32
TIMES_EQUAL          : 
TRUE                 : 146
TRY                  : 
VAR                  : 20 22 28 78 80 88 89 109 114 150 152
VOID                 : 56 58 119 121 123
WHILE                : 77
WITH                 : 
error                : 

Nonterminals, with rules where they appear

argument_list        : 72 74 130
argument_list_opt    : 78 79 80 81 82 83 84 85
class_body           : 93 94 95 96 97
class_def            : 16
class_member         : 92 93
class_method         : 106
class_property       : 105
comparison_operator  : 47
compiler             : 0
condition            : 44 45 46
conditions           : 42 45 46 77 98
constructor          : 107
control_structures   : 6
else_block           : 39
empty                : 101 104 131
expression           : 18 19 20 21 22 23 26 30 30 31 31 32 32 33 33 34 34 35 35 36 73 74 75 103 113 114 115 116 117 148 149 150 151 152
for_init             : 98
for_loop             : 41
for_update           : 98
function             : 7
function_call        : 13
if_block             : 38 39
incdec_statement     : 15 102
input_stmt           : 5
lambda_function      : 8
list_def             : 9
map_def              : 10
map_entries          : 137 138 140
map_entry            : 139 140
object_instantiation : 17
parameter            : 59 60
parameters           : 55 56 60 118 119 122 123 124 149 150
print_stmt           : 4
return_statement     : 14
statement            : 2 3
statement_composed   : 1 3 42 43 55 56 57 58 77 98 99 118 119 120 121 122 123 124 125
type                 : 18 21 29 55 57 61 62 79 81 90 91 99 108 110 111 112 113 115 116 117 118 120 122 134 137 137 149 151
value                : 25 37 47 47 48 135 136 141 141
value_list           : 133 134 136
variable_def         : 11 100
while_loop           : 40

Parsing method: LALR

state 0

    (0) S' -> . compiler
    (1) compiler -> . statement_composed
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    compiler                       shift and go to state 1
    statement_composed             shift and go to state 2
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 1

    (0) S' -> compiler .



state 2

    (1) compiler -> statement_composed .
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    $end            reduce using rule 1 (compiler -> statement_composed .)
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 3

    (2) statement_composed -> statement .

    SEMICOLON       reduce using rule 2 (statement_composed -> statement .)
    PRINT           reduce using rule 2 (statement_composed -> statement .)
    STDIN           reduce using rule 2 (statement_composed -> statement .)
    VAR             reduce using rule 2 (statement_composed -> statement .)
    VOID            reduce using rule 2 (statement_composed -> statement .)
    LIST            reduce using rule 2 (statement_composed -> statement .)
    MAP             reduce using rule 2 (statement_composed -> statement .)
    DYNAMIC         reduce using rule 2 (statement_composed -> statement .)
    STATIC          reduce using rule 2 (statement_composed -> statement .)
    ID              reduce using rule 2 (statement_composed -> statement .)
    RETURN          reduce using rule 2 (statement_composed -> statement .)
    INCREMENT       reduce using rule 2 (statement_composed -> statement .)
    DECREMENT       reduce using rule 2 (statement_composed -> statement .)
    CLASS           reduce using rule 2 (statement_composed -> statement .)
    LPAREN          reduce using rule 2 (statement_composed -> statement .)
    STRING          reduce using rule 2 (statement_composed -> statement .)
    INT             reduce using rule 2 (statement_composed -> statement .)
    DOUBLE          reduce using rule 2 (statement_composed -> statement .)
    BOOL            reduce using rule 2 (statement_composed -> statement .)
    IF              reduce using rule 2 (statement_composed -> statement .)
    WHILE           reduce using rule 2 (statement_composed -> statement .)
    FOR             reduce using rule 2 (statement_composed -> statement .)
    TRUE            reduce using rule 2 (statement_composed -> statement .)
    FALSE           reduce using rule 2 (statement_composed -> statement .)
    $end            reduce using rule 2 (statement_composed -> statement .)
    RBRACE          reduce using rule 2 (statement_composed -> statement .)


state 4

    (4) statement -> print_stmt .

    SEMICOLON       reduce using rule 4 (statement -> print_stmt .)
    PRINT           reduce using rule 4 (statement -> print_stmt .)
    STDIN           reduce using rule 4 (statement -> print_stmt .)
    VAR             reduce using rule 4 (statement -> print_stmt .)
    VOID            reduce using rule 4 (statement -> print_stmt .)
    LIST            reduce using rule 4 (statement -> print_stmt .)
    MAP             reduce using rule 4 (statement -> print_stmt .)
    DYNAMIC         reduce using rule 4 (statement -> print_stmt .)
    STATIC          reduce using rule 4 (statement -> print_stmt .)
    ID              reduce using rule 4 (statement -> print_stmt .)
    RETURN          reduce using rule 4 (statement -> print_stmt .)
    INCREMENT       reduce using rule 4 (statement -> print_stmt .)
    DECREMENT       reduce using rule 4 (statement -> print_stmt .)
    CLASS           reduce using rule 4 (statement -> print_stmt .)
    LPAREN          reduce using rule 4 (statement -> print_stmt .)
    STRING          reduce using rule 4 (statement -> print_stmt .)
    INT             reduce using rule 4 (statement -> print_stmt .)
    DOUBLE          reduce using rule 4 (statement -> print_stmt .)
    BOOL            reduce using rule 4 (statement -> print_stmt .)
    IF              reduce using rule 4 (statement -> print_stmt .)
    WHILE           reduce using rule 4 (statement -> print_stmt .)
    FOR             reduce using rule 4 (statement -> print_stmt .)
    TRUE            reduce using rule 4 (statement -> print_stmt .)
    FALSE           reduce using rule 4 (statement -> print_stmt .)
    $end            reduce using rule 4 (statement -> print_stmt .)
    RBRACE          reduce using rule 4 (statement -> print_stmt .)


state 5

    (5) statement -> input_stmt .

    SEMICOLON       reduce using rule 5 (statement -> input_stmt .)
    PRINT           reduce using rule 5 (statement -> input_stmt .)
    STDIN           reduce using rule 5 (statement -> input_stmt .)
    VAR             reduce using rule 5 (statement -> input_stmt .)
    VOID            reduce using rule 5 (statement -> input_stmt .)
    LIST            reduce using rule 5 (statement -> input_stmt .)
    MAP             reduce using rule 5 (statement -> input_stmt .)
    DYNAMIC         reduce using rule 5 (statement -> input_stmt .)
    STATIC          reduce using rule 5 (statement -> input_stmt .)
    ID              reduce using rule 5 (statement -> input_stmt .)
    RETURN          reduce using rule 5 (statement -> input_stmt .)
    INCREMENT       reduce using rule 5 (statement -> input_stmt .)
    DECREMENT       reduce using rule 5 (statement -> input_stmt .)
    CLASS           reduce using rule 5 (statement -> input_stmt .)
    LPAREN          reduce using rule 5 (statement -> input_stmt .)
    STRING          reduce using rule 5 (statement -> input_stmt .)
    INT             reduce using rule 5 (statement -> input_stmt .)
    DOUBLE          reduce using rule 5 (statement -> input_stmt .)
    BOOL            reduce using rule 5 (statement -> input_stmt .)
    IF              reduce using rule 5 (statement -> input_stmt .)
    WHILE           reduce using rule 5 (statement -> input_stmt .)
    FOR             reduce using rule 5 (statement -> input_stmt .)
    TRUE            reduce using rule 5 (statement -> input_stmt .)
    FALSE           reduce using rule 5 (statement -> input_stmt .)
    $end            reduce using rule 5 (statement -> input_stmt .)
    RBRACE          reduce using rule 5 (statement -> input_stmt .)


state 6

    (6) statement -> control_structures .

    SEMICOLON       reduce using rule 6 (statement -> control_structures .)
    PRINT           reduce using rule 6 (statement -> control_structures .)
    STDIN           reduce using rule 6 (statement -> control_structures .)
    VAR             reduce using rule 6 (statement -> control_structures .)
    VOID            reduce using rule 6 (statement -> control_structures .)
    LIST            reduce using rule 6 (statement -> control_structures .)
    MAP             reduce using rule 6 (statement -> control_structures .)
    DYNAMIC         reduce using rule 6 (statement -> control_structures .)
    STATIC          reduce using rule 6 (statement -> control_structures .)
    ID              reduce using rule 6 (statement -> control_structures .)
    RETURN          reduce using rule 6 (statement -> control_structures .)
    INCREMENT       reduce using rule 6 (statement -> control_structures .)
    DECREMENT       reduce using rule 6 (statement -> control_structures .)
    CLASS           reduce using rule 6 (statement -> control_structures .)
    LPAREN          reduce using rule 6 (statement -> control_structures .)
    STRING          reduce using rule 6 (statement -> control_structures .)
    INT             reduce using rule 6 (statement -> control_structures .)
    DOUBLE          reduce using rule 6 (statement -> control_structures .)
    BOOL            reduce using rule 6 (statement -> control_structures .)
    IF              reduce using rule 6 (statement -> control_structures .)
    WHILE           reduce using rule 6 (statement -> control_structures .)
    FOR             reduce using rule 6 (statement -> control_structures .)
    TRUE            reduce using rule 6 (statement -> control_structures .)
    FALSE           reduce using rule 6 (statement -> control_structures .)
    $end            reduce using rule 6 (statement -> control_structures .)
    RBRACE          reduce using rule 6 (statement -> control_structures .)


state 7

    (7) statement -> function .

    SEMICOLON       reduce using rule 7 (statement -> function .)
    PRINT           reduce using rule 7 (statement -> function .)
    STDIN           reduce using rule 7 (statement -> function .)
    VAR             reduce using rule 7 (statement -> function .)
    VOID            reduce using rule 7 (statement -> function .)
    LIST            reduce using rule 7 (statement -> function .)
    MAP             reduce using rule 7 (statement -> function .)
    DYNAMIC         reduce using rule 7 (statement -> function .)
    STATIC          reduce using rule 7 (statement -> function .)
    ID              reduce using rule 7 (statement -> function .)
    RETURN          reduce using rule 7 (statement -> function .)
    INCREMENT       reduce using rule 7 (statement -> function .)
    DECREMENT       reduce using rule 7 (statement -> function .)
    CLASS           reduce using rule 7 (statement -> function .)
    LPAREN          reduce using rule 7 (statement -> function .)
    STRING          reduce using rule 7 (statement -> function .)
    INT             reduce using rule 7 (statement -> function .)
    DOUBLE          reduce using rule 7 (statement -> function .)
    BOOL            reduce using rule 7 (statement -> function .)
    IF              reduce using rule 7 (statement -> function .)
    WHILE           reduce using rule 7 (statement -> function .)
    FOR             reduce using rule 7 (statement -> function .)
    TRUE            reduce using rule 7 (statement -> function .)
    FALSE           reduce using rule 7 (statement -> function .)
    $end            reduce using rule 7 (statement -> function .)
    RBRACE          reduce using rule 7 (statement -> function .)


state 8

    (8) statement -> lambda_function .

    SEMICOLON       reduce using rule 8 (statement -> lambda_function .)
    PRINT           reduce using rule 8 (statement -> lambda_function .)
    STDIN           reduce using rule 8 (statement -> lambda_function .)
    VAR             reduce using rule 8 (statement -> lambda_function .)
    VOID            reduce using rule 8 (statement -> lambda_function .)
    LIST            reduce using rule 8 (statement -> lambda_function .)
    MAP             reduce using rule 8 (statement -> lambda_function .)
    DYNAMIC         reduce using rule 8 (statement -> lambda_function .)
    STATIC          reduce using rule 8 (statement -> lambda_function .)
    ID              reduce using rule 8 (statement -> lambda_function .)
    RETURN          reduce using rule 8 (statement -> lambda_function .)
    INCREMENT       reduce using rule 8 (statement -> lambda_function .)
    DECREMENT       reduce using rule 8 (statement -> lambda_function .)
    CLASS           reduce using rule 8 (statement -> lambda_function .)
    LPAREN          reduce using rule 8 (statement -> lambda_function .)
    STRING          reduce using rule 8 (statement -> lambda_function .)
    INT             reduce using rule 8 (statement -> lambda_function .)
    DOUBLE          reduce using rule 8 (statement -> lambda_function .)
    BOOL            reduce using rule 8 (statement -> lambda_function .)
    IF              reduce using rule 8 (statement -> lambda_function .)
    WHILE           reduce using rule 8 (statement -> lambda_function .)
    FOR             reduce using rule 8 (statement -> lambda_function .)
    TRUE            reduce using rule 8 (statement -> lambda_function .)
    FALSE           reduce using rule 8 (statement -> lambda_function .)
    $end            reduce using rule 8 (statement -> lambda_function .)
    RBRACE          reduce using rule 8 (statement -> lambda_function .)


state 9

    (9) statement -> list_def .

    SEMICOLON       reduce using rule 9 (statement -> list_def .)
    PRINT           reduce using rule 9 (statement -> list_def .)
    STDIN           reduce using rule 9 (statement -> list_def .)
    VAR             reduce using rule 9 (statement -> list_def .)
    VOID            reduce using rule 9 (statement -> list_def .)
    LIST            reduce using rule 9 (statement -> list_def .)
    MAP             reduce using rule 9 (statement -> list_def .)
    DYNAMIC         reduce using rule 9 (statement -> list_def .)
    STATIC          reduce using rule 9 (statement -> list_def .)
    ID              reduce using rule 9 (statement -> list_def .)
    RETURN          reduce using rule 9 (statement -> list_def .)
    INCREMENT       reduce using rule 9 (statement -> list_def .)
    DECREMENT       reduce using rule 9 (statement -> list_def .)
    CLASS           reduce using rule 9 (statement -> list_def .)
    LPAREN          reduce using rule 9 (statement -> list_def .)
    STRING          reduce using rule 9 (statement -> list_def .)
    INT             reduce using rule 9 (statement -> list_def .)
    DOUBLE          reduce using rule 9 (statement -> list_def .)
    BOOL            reduce using rule 9 (statement -> list_def .)
    IF              reduce using rule 9 (statement -> list_def .)
    WHILE           reduce using rule 9 (statement -> list_def .)
    FOR             reduce using rule 9 (statement -> list_def .)
    TRUE            reduce using rule 9 (statement -> list_def .)
    FALSE           reduce using rule 9 (statement -> list_def .)
    $end            reduce using rule 9 (statement -> list_def .)
    RBRACE          reduce using rule 9 (statement -> list_def .)


state 10

    (10) statement -> map_def .

    SEMICOLON       reduce using rule 10 (statement -> map_def .)
    PRINT           reduce using rule 10 (statement -> map_def .)
    STDIN           reduce using rule 10 (statement -> map_def .)
    VAR             reduce using rule 10 (statement -> map_def .)
    VOID            reduce using rule 10 (statement -> map_def .)
    LIST            reduce using rule 10 (statement -> map_def .)
    MAP             reduce using rule 10 (statement -> map_def .)
    DYNAMIC         reduce using rule 10 (statement -> map_def .)
    STATIC          reduce using rule 10 (statement -> map_def .)
    ID              reduce using rule 10 (statement -> map_def .)
    RETURN          reduce using rule 10 (statement -> map_def .)
    INCREMENT       reduce using rule 10 (statement -> map_def .)
    DECREMENT       reduce using rule 10 (statement -> map_def .)
    CLASS           reduce using rule 10 (statement -> map_def .)
    LPAREN          reduce using rule 10 (statement -> map_def .)
    STRING          reduce using rule 10 (statement -> map_def .)
    INT             reduce using rule 10 (statement -> map_def .)
    DOUBLE          reduce using rule 10 (statement -> map_def .)
    BOOL            reduce using rule 10 (statement -> map_def .)
    IF              reduce using rule 10 (statement -> map_def .)
    WHILE           reduce using rule 10 (statement -> map_def .)
    FOR             reduce using rule 10 (statement -> map_def .)
    TRUE            reduce using rule 10 (statement -> map_def .)
    FALSE           reduce using rule 10 (statement -> map_def .)
    $end            reduce using rule 10 (statement -> map_def .)
    RBRACE          reduce using rule 10 (statement -> map_def .)


state 11

    (11) statement -> variable_def .

    SEMICOLON       reduce using rule 11 (statement -> variable_def .)
    PRINT           reduce using rule 11 (statement -> variable_def .)
    STDIN           reduce using rule 11 (statement -> variable_def .)
    VAR             reduce using rule 11 (statement -> variable_def .)
    VOID            reduce using rule 11 (statement -> variable_def .)
    LIST            reduce using rule 11 (statement -> variable_def .)
    MAP             reduce using rule 11 (statement -> variable_def .)
    DYNAMIC         reduce using rule 11 (statement -> variable_def .)
    STATIC          reduce using rule 11 (statement -> variable_def .)
    ID              reduce using rule 11 (statement -> variable_def .)
    RETURN          reduce using rule 11 (statement -> variable_def .)
    INCREMENT       reduce using rule 11 (statement -> variable_def .)
    DECREMENT       reduce using rule 11 (statement -> variable_def .)
    CLASS           reduce using rule 11 (statement -> variable_def .)
    LPAREN          reduce using rule 11 (statement -> variable_def .)
    STRING          reduce using rule 11 (statement -> variable_def .)
    INT             reduce using rule 11 (statement -> variable_def .)
    DOUBLE          reduce using rule 11 (statement -> variable_def .)
    BOOL            reduce using rule 11 (statement -> variable_def .)
    IF              reduce using rule 11 (statement -> variable_def .)
    WHILE           reduce using rule 11 (statement -> variable_def .)
    FOR             reduce using rule 11 (statement -> variable_def .)
    TRUE            reduce using rule 11 (statement -> variable_def .)
    FALSE           reduce using rule 11 (statement -> variable_def .)
    $end            reduce using rule 11 (statement -> variable_def .)
    RBRACE          reduce using rule 11 (statement -> variable_def .)


state 12

    (12) statement -> SEMICOLON .

    SEMICOLON       reduce using rule 12 (statement -> SEMICOLON .)
    PRINT           reduce using rule 12 (statement -> SEMICOLON .)
    STDIN           reduce using rule 12 (statement -> SEMICOLON .)
    VAR             reduce using rule 12 (statement -> SEMICOLON .)
    VOID            reduce using rule 12 (statement -> SEMICOLON .)
    LIST            reduce using rule 12 (statement -> SEMICOLON .)
    MAP             reduce using rule 12 (statement -> SEMICOLON .)
    DYNAMIC         reduce using rule 12 (statement -> SEMICOLON .)
    STATIC          reduce using rule 12 (statement -> SEMICOLON .)
    ID              reduce using rule 12 (statement -> SEMICOLON .)
    RETURN          reduce using rule 12 (statement -> SEMICOLON .)
    INCREMENT       reduce using rule 12 (statement -> SEMICOLON .)
    DECREMENT       reduce using rule 12 (statement -> SEMICOLON .)
    CLASS           reduce using rule 12 (statement -> SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> SEMICOLON .)
    STRING          reduce using rule 12 (statement -> SEMICOLON .)
    INT             reduce using rule 12 (statement -> SEMICOLON .)
    DOUBLE          reduce using rule 12 (statement -> SEMICOLON .)
    BOOL            reduce using rule 12 (statement -> SEMICOLON .)
    IF              reduce using rule 12 (statement -> SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> SEMICOLON .)
    FOR             reduce using rule 12 (statement -> SEMICOLON .)
    TRUE            reduce using rule 12 (statement -> SEMICOLON .)
    FALSE           reduce using rule 12 (statement -> SEMICOLON .)
    $end            reduce using rule 12 (statement -> SEMICOLON .)
    RBRACE          reduce using rule 12 (statement -> SEMICOLON .)


state 13

    (13) statement -> function_call .

    SEMICOLON       reduce using rule 13 (statement -> function_call .)
    PRINT           reduce using rule 13 (statement -> function_call .)
    STDIN           reduce using rule 13 (statement -> function_call .)
    VAR             reduce using rule 13 (statement -> function_call .)
    VOID            reduce using rule 13 (statement -> function_call .)
    LIST            reduce using rule 13 (statement -> function_call .)
    MAP             reduce using rule 13 (statement -> function_call .)
    DYNAMIC         reduce using rule 13 (statement -> function_call .)
    STATIC          reduce using rule 13 (statement -> function_call .)
    ID              reduce using rule 13 (statement -> function_call .)
    RETURN          reduce using rule 13 (statement -> function_call .)
    INCREMENT       reduce using rule 13 (statement -> function_call .)
    DECREMENT       reduce using rule 13 (statement -> function_call .)
    CLASS           reduce using rule 13 (statement -> function_call .)
    LPAREN          reduce using rule 13 (statement -> function_call .)
    STRING          reduce using rule 13 (statement -> function_call .)
    INT             reduce using rule 13 (statement -> function_call .)
    DOUBLE          reduce using rule 13 (statement -> function_call .)
    BOOL            reduce using rule 13 (statement -> function_call .)
    IF              reduce using rule 13 (statement -> function_call .)
    WHILE           reduce using rule 13 (statement -> function_call .)
    FOR             reduce using rule 13 (statement -> function_call .)
    TRUE            reduce using rule 13 (statement -> function_call .)
    FALSE           reduce using rule 13 (statement -> function_call .)
    $end            reduce using rule 13 (statement -> function_call .)
    RBRACE          reduce using rule 13 (statement -> function_call .)


state 14

    (14) statement -> return_statement .

    SEMICOLON       reduce using rule 14 (statement -> return_statement .)
    PRINT           reduce using rule 14 (statement -> return_statement .)
    STDIN           reduce using rule 14 (statement -> return_statement .)
    VAR             reduce using rule 14 (statement -> return_statement .)
    VOID            reduce using rule 14 (statement -> return_statement .)
    LIST            reduce using rule 14 (statement -> return_statement .)
    MAP             reduce using rule 14 (statement -> return_statement .)
    DYNAMIC         reduce using rule 14 (statement -> return_statement .)
    STATIC          reduce using rule 14 (statement -> return_statement .)
    ID              reduce using rule 14 (statement -> return_statement .)
    RETURN          reduce using rule 14 (statement -> return_statement .)
    INCREMENT       reduce using rule 14 (statement -> return_statement .)
    DECREMENT       reduce using rule 14 (statement -> return_statement .)
    CLASS           reduce using rule 14 (statement -> return_statement .)
    LPAREN          reduce using rule 14 (statement -> return_statement .)
    STRING          reduce using rule 14 (statement -> return_statement .)
    INT             reduce using rule 14 (statement -> return_statement .)
    DOUBLE          reduce using rule 14 (statement -> return_statement .)
    BOOL            reduce using rule 14 (statement -> return_statement .)
    IF              reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    FOR             reduce using rule 14 (statement -> return_statement .)
    TRUE            reduce using rule 14 (statement -> return_statement .)
    FALSE           reduce using rule 14 (statement -> return_statement .)
    $end            reduce using rule 14 (statement -> return_statement .)
    RBRACE          reduce using rule 14 (statement -> return_statement .)


state 15

    (15) statement -> incdec_statement .

    SEMICOLON       reduce using rule 15 (statement -> incdec_statement .)
    PRINT           reduce using rule 15 (statement -> incdec_statement .)
    STDIN           reduce using rule 15 (statement -> incdec_statement .)
    VAR             reduce using rule 15 (statement -> incdec_statement .)
    VOID            reduce using rule 15 (statement -> incdec_statement .)
    LIST            reduce using rule 15 (statement -> incdec_statement .)
    MAP             reduce using rule 15 (statement -> incdec_statement .)
    DYNAMIC         reduce using rule 15 (statement -> incdec_statement .)
    STATIC          reduce using rule 15 (statement -> incdec_statement .)
    ID              reduce using rule 15 (statement -> incdec_statement .)
    RETURN          reduce using rule 15 (statement -> incdec_statement .)
    INCREMENT       reduce using rule 15 (statement -> incdec_statement .)
    DECREMENT       reduce using rule 15 (statement -> incdec_statement .)
    CLASS           reduce using rule 15 (statement -> incdec_statement .)
    LPAREN          reduce using rule 15 (statement -> incdec_statement .)
    STRING          reduce using rule 15 (statement -> incdec_statement .)
    INT             reduce using rule 15 (statement -> incdec_statement .)
    DOUBLE          reduce using rule 15 (statement -> incdec_statement .)
    BOOL            reduce using rule 15 (statement -> incdec_statement .)
    IF              reduce using rule 15 (statement -> incdec_statement .)
    WHILE           reduce using rule 15 (statement -> incdec_statement .)
    FOR             reduce using rule 15 (statement -> incdec_statement .)
    TRUE            reduce using rule 15 (statement -> incdec_statement .)
    FALSE           reduce using rule 15 (statement -> incdec_statement .)
    $end            reduce using rule 15 (statement -> incdec_statement .)
    RBRACE          reduce using rule 15 (statement -> incdec_statement .)


state 16

    (16) statement -> class_def .

    SEMICOLON       reduce using rule 16 (statement -> class_def .)
    PRINT           reduce using rule 16 (statement -> class_def .)
    STDIN           reduce using rule 16 (statement -> class_def .)
    VAR             reduce using rule 16 (statement -> class_def .)
    VOID            reduce using rule 16 (statement -> class_def .)
    LIST            reduce using rule 16 (statement -> class_def .)
    MAP             reduce using rule 16 (statement -> class_def .)
    DYNAMIC         reduce using rule 16 (statement -> class_def .)
    STATIC          reduce using rule 16 (statement -> class_def .)
    ID              reduce using rule 16 (statement -> class_def .)
    RETURN          reduce using rule 16 (statement -> class_def .)
    INCREMENT       reduce using rule 16 (statement -> class_def .)
    DECREMENT       reduce using rule 16 (statement -> class_def .)
    CLASS           reduce using rule 16 (statement -> class_def .)
    LPAREN          reduce using rule 16 (statement -> class_def .)
    STRING          reduce using rule 16 (statement -> class_def .)
    INT             reduce using rule 16 (statement -> class_def .)
    DOUBLE          reduce using rule 16 (statement -> class_def .)
    BOOL            reduce using rule 16 (statement -> class_def .)
    IF              reduce using rule 16 (statement -> class_def .)
    WHILE           reduce using rule 16 (statement -> class_def .)
    FOR             reduce using rule 16 (statement -> class_def .)
    TRUE            reduce using rule 16 (statement -> class_def .)
    FALSE           reduce using rule 16 (statement -> class_def .)
    $end            reduce using rule 16 (statement -> class_def .)
    RBRACE          reduce using rule 16 (statement -> class_def .)


state 17

    (17) statement -> object_instantiation .

    SEMICOLON       reduce using rule 17 (statement -> object_instantiation .)
    PRINT           reduce using rule 17 (statement -> object_instantiation .)
    STDIN           reduce using rule 17 (statement -> object_instantiation .)
    VAR             reduce using rule 17 (statement -> object_instantiation .)
    VOID            reduce using rule 17 (statement -> object_instantiation .)
    LIST            reduce using rule 17 (statement -> object_instantiation .)
    MAP             reduce using rule 17 (statement -> object_instantiation .)
    DYNAMIC         reduce using rule 17 (statement -> object_instantiation .)
    STATIC          reduce using rule 17 (statement -> object_instantiation .)
    ID              reduce using rule 17 (statement -> object_instantiation .)
    RETURN          reduce using rule 17 (statement -> object_instantiation .)
    INCREMENT       reduce using rule 17 (statement -> object_instantiation .)
    DECREMENT       reduce using rule 17 (statement -> object_instantiation .)
    CLASS           reduce using rule 17 (statement -> object_instantiation .)
    LPAREN          reduce using rule 17 (statement -> object_instantiation .)
    STRING          reduce using rule 17 (statement -> object_instantiation .)
    INT             reduce using rule 17 (statement -> object_instantiation .)
    DOUBLE          reduce using rule 17 (statement -> object_instantiation .)
    BOOL            reduce using rule 17 (statement -> object_instantiation .)
    IF              reduce using rule 17 (statement -> object_instantiation .)
    WHILE           reduce using rule 17 (statement -> object_instantiation .)
    FOR             reduce using rule 17 (statement -> object_instantiation .)
    TRUE            reduce using rule 17 (statement -> object_instantiation .)
    FALSE           reduce using rule 17 (statement -> object_instantiation .)
    $end            reduce using rule 17 (statement -> object_instantiation .)
    RBRACE          reduce using rule 17 (statement -> object_instantiation .)


state 18

    (148) statement -> expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 19

    (24) print_stmt -> PRINT . LPAREN RPAREN SEMICOLON
    (25) print_stmt -> PRINT . LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 55


state 20

    (36) expression -> LPAREN . expression RPAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 56
    value                          shift and go to state 21

state 21

    (37) expression -> value .

    SEMICOLON       reduce using rule 37 (expression -> value .)
    PLUS            reduce using rule 37 (expression -> value .)
    MINUS           reduce using rule 37 (expression -> value .)
    TIMES           reduce using rule 37 (expression -> value .)
    DIVIDE          reduce using rule 37 (expression -> value .)
    INT_DIVIDE      reduce using rule 37 (expression -> value .)
    MODULE          reduce using rule 37 (expression -> value .)
    RPAREN          reduce using rule 37 (expression -> value .)
    COMMA           reduce using rule 37 (expression -> value .)


state 22

    (27) input_stmt -> STDIN . DOT READLINESYNC LPAREN RPAREN SEMICOLON

    DOT             shift and go to state 63


state 23

    (28) input_stmt -> VAR . ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (150) lambda_function -> VAR . ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> VAR . ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (20) variable_def -> VAR . ID ASSIGN expression SEMICOLON
    (78) object_instantiation -> VAR . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> VAR . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> VAR . ID ASSIGN ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 64


state 24

    (71) function_call -> ID . LPAREN RPAREN SEMICOLON
    (72) function_call -> ID . LPAREN argument_list RPAREN SEMICOLON
    (67) incdec_statement -> ID . INCREMENT SEMICOLON
    (68) incdec_statement -> ID . DECREMENT SEMICOLON
    (82) object_instantiation -> ID . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> ID . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> ID . ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> ID . ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> ID . ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> ID . ASSIGN ID LPAREN RPAREN SEMICOLON
    (63) expression -> ID . INCREMENT
    (64) expression -> ID . DECREMENT
    (145) value -> ID .

    LPAREN          shift and go to state 66
    INCREMENT       shift and go to state 67
    DECREMENT       shift and go to state 68
    ID              shift and go to state 65
    ASSIGN          shift and go to state 69
    SEMICOLON       reduce using rule 145 (value -> ID .)
    PLUS            reduce using rule 145 (value -> ID .)
    MINUS           reduce using rule 145 (value -> ID .)
    TIMES           reduce using rule 145 (value -> ID .)
    DIVIDE          reduce using rule 145 (value -> ID .)
    INT_DIVIDE      reduce using rule 145 (value -> ID .)
    MODULE          reduce using rule 145 (value -> ID .)


state 25

    (29) input_stmt -> type . ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (55) function -> type . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> type . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> type . ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> type . ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (18) variable_def -> type . ID ASSIGN expression SEMICOLON
    (79) object_instantiation -> type . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> type . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> type . ID ASSIGN ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 70


state 26

    (38) control_structures -> if_block .
    (39) control_structures -> if_block . else_block
    (43) else_block -> . ELSE LBRACE statement_composed RBRACE

    SEMICOLON       reduce using rule 38 (control_structures -> if_block .)
    PRINT           reduce using rule 38 (control_structures -> if_block .)
    STDIN           reduce using rule 38 (control_structures -> if_block .)
    VAR             reduce using rule 38 (control_structures -> if_block .)
    VOID            reduce using rule 38 (control_structures -> if_block .)
    LIST            reduce using rule 38 (control_structures -> if_block .)
    MAP             reduce using rule 38 (control_structures -> if_block .)
    DYNAMIC         reduce using rule 38 (control_structures -> if_block .)
    STATIC          reduce using rule 38 (control_structures -> if_block .)
    ID              reduce using rule 38 (control_structures -> if_block .)
    RETURN          reduce using rule 38 (control_structures -> if_block .)
    INCREMENT       reduce using rule 38 (control_structures -> if_block .)
    DECREMENT       reduce using rule 38 (control_structures -> if_block .)
    CLASS           reduce using rule 38 (control_structures -> if_block .)
    LPAREN          reduce using rule 38 (control_structures -> if_block .)
    STRING          reduce using rule 38 (control_structures -> if_block .)
    INT             reduce using rule 38 (control_structures -> if_block .)
    DOUBLE          reduce using rule 38 (control_structures -> if_block .)
    BOOL            reduce using rule 38 (control_structures -> if_block .)
    IF              reduce using rule 38 (control_structures -> if_block .)
    WHILE           reduce using rule 38 (control_structures -> if_block .)
    FOR             reduce using rule 38 (control_structures -> if_block .)
    TRUE            reduce using rule 38 (control_structures -> if_block .)
    FALSE           reduce using rule 38 (control_structures -> if_block .)
    $end            reduce using rule 38 (control_structures -> if_block .)
    RBRACE          reduce using rule 38 (control_structures -> if_block .)
    ELSE            shift and go to state 72

    else_block                     shift and go to state 71

state 27

    (40) control_structures -> while_loop .

    SEMICOLON       reduce using rule 40 (control_structures -> while_loop .)
    PRINT           reduce using rule 40 (control_structures -> while_loop .)
    STDIN           reduce using rule 40 (control_structures -> while_loop .)
    VAR             reduce using rule 40 (control_structures -> while_loop .)
    VOID            reduce using rule 40 (control_structures -> while_loop .)
    LIST            reduce using rule 40 (control_structures -> while_loop .)
    MAP             reduce using rule 40 (control_structures -> while_loop .)
    DYNAMIC         reduce using rule 40 (control_structures -> while_loop .)
    STATIC          reduce using rule 40 (control_structures -> while_loop .)
    ID              reduce using rule 40 (control_structures -> while_loop .)
    RETURN          reduce using rule 40 (control_structures -> while_loop .)
    INCREMENT       reduce using rule 40 (control_structures -> while_loop .)
    DECREMENT       reduce using rule 40 (control_structures -> while_loop .)
    CLASS           reduce using rule 40 (control_structures -> while_loop .)
    LPAREN          reduce using rule 40 (control_structures -> while_loop .)
    STRING          reduce using rule 40 (control_structures -> while_loop .)
    INT             reduce using rule 40 (control_structures -> while_loop .)
    DOUBLE          reduce using rule 40 (control_structures -> while_loop .)
    BOOL            reduce using rule 40 (control_structures -> while_loop .)
    IF              reduce using rule 40 (control_structures -> while_loop .)
    WHILE           reduce using rule 40 (control_structures -> while_loop .)
    FOR             reduce using rule 40 (control_structures -> while_loop .)
    TRUE            reduce using rule 40 (control_structures -> while_loop .)
    FALSE           reduce using rule 40 (control_structures -> while_loop .)
    $end            reduce using rule 40 (control_structures -> while_loop .)
    RBRACE          reduce using rule 40 (control_structures -> while_loop .)


state 28

    (41) control_structures -> for_loop .

    SEMICOLON       reduce using rule 41 (control_structures -> for_loop .)
    PRINT           reduce using rule 41 (control_structures -> for_loop .)
    STDIN           reduce using rule 41 (control_structures -> for_loop .)
    VAR             reduce using rule 41 (control_structures -> for_loop .)
    VOID            reduce using rule 41 (control_structures -> for_loop .)
    LIST            reduce using rule 41 (control_structures -> for_loop .)
    MAP             reduce using rule 41 (control_structures -> for_loop .)
    DYNAMIC         reduce using rule 41 (control_structures -> for_loop .)
    STATIC          reduce using rule 41 (control_structures -> for_loop .)
    ID              reduce using rule 41 (control_structures -> for_loop .)
    RETURN          reduce using rule 41 (control_structures -> for_loop .)
    INCREMENT       reduce using rule 41 (control_structures -> for_loop .)
    DECREMENT       reduce using rule 41 (control_structures -> for_loop .)
    CLASS           reduce using rule 41 (control_structures -> for_loop .)
    LPAREN          reduce using rule 41 (control_structures -> for_loop .)
    STRING          reduce using rule 41 (control_structures -> for_loop .)
    INT             reduce using rule 41 (control_structures -> for_loop .)
    DOUBLE          reduce using rule 41 (control_structures -> for_loop .)
    BOOL            reduce using rule 41 (control_structures -> for_loop .)
    IF              reduce using rule 41 (control_structures -> for_loop .)
    WHILE           reduce using rule 41 (control_structures -> for_loop .)
    FOR             reduce using rule 41 (control_structures -> for_loop .)
    TRUE            reduce using rule 41 (control_structures -> for_loop .)
    FALSE           reduce using rule 41 (control_structures -> for_loop .)
    $end            reduce using rule 41 (control_structures -> for_loop .)
    RBRACE          reduce using rule 41 (control_structures -> for_loop .)


state 29

    (56) function -> VOID . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (58) function -> VOID . ID LPAREN RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 73


state 30

    (133) list_def -> LIST . LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> LIST . LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON

    LBRACKET        shift and go to state 74
    LESS            shift and go to state 75


state 31

    (137) map_def -> MAP . LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> MAP . ID ASSIGN LBRACE map_entries RBRACE SEMICOLON

    LESS            shift and go to state 76
    ID              shift and go to state 77


state 32

    (19) variable_def -> DYNAMIC . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 78


state 33

    (21) variable_def -> STATIC . type ID ASSIGN expression SEMICOLON
    (22) variable_def -> STATIC . VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> STATIC . DYNAMIC ID ASSIGN expression SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VAR             shift and go to state 80
    DYNAMIC         shift and go to state 81
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 79

state 34

    (75) return_statement -> RETURN . expression SEMICOLON
    (76) return_statement -> RETURN . SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 86
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 85
    value                          shift and go to state 21

state 35

    (69) incdec_statement -> INCREMENT . ID SEMICOLON
    (65) expression -> INCREMENT . ID

    ID              shift and go to state 87


state 36

    (70) incdec_statement -> DECREMENT . ID SEMICOLON
    (66) expression -> DECREMENT . ID

    ID              shift and go to state 88


state 37

    (94) class_def -> CLASS . ID LBRACE class_body RBRACE
    (95) class_def -> CLASS . ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> CLASS . ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> CLASS . ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE

    ID              shift and go to state 89


state 38

    (126) type -> STRING .
    (144) value -> STRING .

    ID              reduce using rule 126 (type -> STRING .)
    SEMICOLON       reduce using rule 144 (value -> STRING .)
    PLUS            reduce using rule 144 (value -> STRING .)
    MINUS           reduce using rule 144 (value -> STRING .)
    TIMES           reduce using rule 144 (value -> STRING .)
    DIVIDE          reduce using rule 144 (value -> STRING .)
    INT_DIVIDE      reduce using rule 144 (value -> STRING .)
    MODULE          reduce using rule 144 (value -> STRING .)


state 39

    (127) type -> INT .
    (142) value -> INT .

    ID              reduce using rule 127 (type -> INT .)
    SEMICOLON       reduce using rule 142 (value -> INT .)
    PLUS            reduce using rule 142 (value -> INT .)
    MINUS           reduce using rule 142 (value -> INT .)
    TIMES           reduce using rule 142 (value -> INT .)
    DIVIDE          reduce using rule 142 (value -> INT .)
    INT_DIVIDE      reduce using rule 142 (value -> INT .)
    MODULE          reduce using rule 142 (value -> INT .)


state 40

    (128) type -> DOUBLE .
    (143) value -> DOUBLE .

    ID              reduce using rule 128 (type -> DOUBLE .)
    SEMICOLON       reduce using rule 143 (value -> DOUBLE .)
    PLUS            reduce using rule 143 (value -> DOUBLE .)
    MINUS           reduce using rule 143 (value -> DOUBLE .)
    TIMES           reduce using rule 143 (value -> DOUBLE .)
    DIVIDE          reduce using rule 143 (value -> DOUBLE .)
    INT_DIVIDE      reduce using rule 143 (value -> DOUBLE .)
    MODULE          reduce using rule 143 (value -> DOUBLE .)


state 41

    (129) type -> BOOL .

    ID              reduce using rule 129 (type -> BOOL .)
    GREATER         reduce using rule 129 (type -> BOOL .)
    COMMA           reduce using rule 129 (type -> BOOL .)


state 42

    (42) if_block -> IF . LPAREN conditions RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 90


state 43

    (77) while_loop -> WHILE . LPAREN conditions RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 91


state 44

    (98) for_loop -> FOR . LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> FOR . LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 92


state 45

    (146) value -> TRUE .

    SEMICOLON       reduce using rule 146 (value -> TRUE .)
    PLUS            reduce using rule 146 (value -> TRUE .)
    MINUS           reduce using rule 146 (value -> TRUE .)
    TIMES           reduce using rule 146 (value -> TRUE .)
    DIVIDE          reduce using rule 146 (value -> TRUE .)
    INT_DIVIDE      reduce using rule 146 (value -> TRUE .)
    MODULE          reduce using rule 146 (value -> TRUE .)
    RPAREN          reduce using rule 146 (value -> TRUE .)
    COMMA           reduce using rule 146 (value -> TRUE .)
    RBRACKET        reduce using rule 146 (value -> TRUE .)
    GREATER         reduce using rule 146 (value -> TRUE .)
    LESS            reduce using rule 146 (value -> TRUE .)
    GREATER_EQUAL   reduce using rule 146 (value -> TRUE .)
    LESS_EQUAL      reduce using rule 146 (value -> TRUE .)
    EQUALS          reduce using rule 146 (value -> TRUE .)
    NOT_EQUALS      reduce using rule 146 (value -> TRUE .)
    AND             reduce using rule 146 (value -> TRUE .)
    OR              reduce using rule 146 (value -> TRUE .)
    COLON           reduce using rule 146 (value -> TRUE .)
    RBRACE          reduce using rule 146 (value -> TRUE .)


state 46

    (147) value -> FALSE .

    SEMICOLON       reduce using rule 147 (value -> FALSE .)
    PLUS            reduce using rule 147 (value -> FALSE .)
    MINUS           reduce using rule 147 (value -> FALSE .)
    TIMES           reduce using rule 147 (value -> FALSE .)
    DIVIDE          reduce using rule 147 (value -> FALSE .)
    INT_DIVIDE      reduce using rule 147 (value -> FALSE .)
    MODULE          reduce using rule 147 (value -> FALSE .)
    RPAREN          reduce using rule 147 (value -> FALSE .)
    COMMA           reduce using rule 147 (value -> FALSE .)
    RBRACKET        reduce using rule 147 (value -> FALSE .)
    GREATER         reduce using rule 147 (value -> FALSE .)
    LESS            reduce using rule 147 (value -> FALSE .)
    GREATER_EQUAL   reduce using rule 147 (value -> FALSE .)
    LESS_EQUAL      reduce using rule 147 (value -> FALSE .)
    EQUALS          reduce using rule 147 (value -> FALSE .)
    NOT_EQUALS      reduce using rule 147 (value -> FALSE .)
    AND             reduce using rule 147 (value -> FALSE .)
    OR              reduce using rule 147 (value -> FALSE .)
    COLON           reduce using rule 147 (value -> FALSE .)
    RBRACE          reduce using rule 147 (value -> FALSE .)


state 47

    (3) statement_composed -> statement_composed statement .

    SEMICOLON       reduce using rule 3 (statement_composed -> statement_composed statement .)
    PRINT           reduce using rule 3 (statement_composed -> statement_composed statement .)
    STDIN           reduce using rule 3 (statement_composed -> statement_composed statement .)
    VAR             reduce using rule 3 (statement_composed -> statement_composed statement .)
    VOID            reduce using rule 3 (statement_composed -> statement_composed statement .)
    LIST            reduce using rule 3 (statement_composed -> statement_composed statement .)
    MAP             reduce using rule 3 (statement_composed -> statement_composed statement .)
    DYNAMIC         reduce using rule 3 (statement_composed -> statement_composed statement .)
    STATIC          reduce using rule 3 (statement_composed -> statement_composed statement .)
    ID              reduce using rule 3 (statement_composed -> statement_composed statement .)
    RETURN          reduce using rule 3 (statement_composed -> statement_composed statement .)
    INCREMENT       reduce using rule 3 (statement_composed -> statement_composed statement .)
    DECREMENT       reduce using rule 3 (statement_composed -> statement_composed statement .)
    CLASS           reduce using rule 3 (statement_composed -> statement_composed statement .)
    LPAREN          reduce using rule 3 (statement_composed -> statement_composed statement .)
    STRING          reduce using rule 3 (statement_composed -> statement_composed statement .)
    INT             reduce using rule 3 (statement_composed -> statement_composed statement .)
    DOUBLE          reduce using rule 3 (statement_composed -> statement_composed statement .)
    BOOL            reduce using rule 3 (statement_composed -> statement_composed statement .)
    IF              reduce using rule 3 (statement_composed -> statement_composed statement .)
    WHILE           reduce using rule 3 (statement_composed -> statement_composed statement .)
    FOR             reduce using rule 3 (statement_composed -> statement_composed statement .)
    TRUE            reduce using rule 3 (statement_composed -> statement_composed statement .)
    FALSE           reduce using rule 3 (statement_composed -> statement_composed statement .)
    $end            reduce using rule 3 (statement_composed -> statement_composed statement .)
    RBRACE          reduce using rule 3 (statement_composed -> statement_composed statement .)


state 48

    (148) statement -> expression SEMICOLON .

    SEMICOLON       reduce using rule 148 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 148 (statement -> expression SEMICOLON .)
    STDIN           reduce using rule 148 (statement -> expression SEMICOLON .)
    VAR             reduce using rule 148 (statement -> expression SEMICOLON .)
    VOID            reduce using rule 148 (statement -> expression SEMICOLON .)
    LIST            reduce using rule 148 (statement -> expression SEMICOLON .)
    MAP             reduce using rule 148 (statement -> expression SEMICOLON .)
    DYNAMIC         reduce using rule 148 (statement -> expression SEMICOLON .)
    STATIC          reduce using rule 148 (statement -> expression SEMICOLON .)
    ID              reduce using rule 148 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 148 (statement -> expression SEMICOLON .)
    INCREMENT       reduce using rule 148 (statement -> expression SEMICOLON .)
    DECREMENT       reduce using rule 148 (statement -> expression SEMICOLON .)
    CLASS           reduce using rule 148 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 148 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 148 (statement -> expression SEMICOLON .)
    INT             reduce using rule 148 (statement -> expression SEMICOLON .)
    DOUBLE          reduce using rule 148 (statement -> expression SEMICOLON .)
    BOOL            reduce using rule 148 (statement -> expression SEMICOLON .)
    IF              reduce using rule 148 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 148 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 148 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 148 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 148 (statement -> expression SEMICOLON .)
    $end            reduce using rule 148 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 148 (statement -> expression SEMICOLON .)


state 49

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 93
    value                          shift and go to state 21

state 50

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 94
    value                          shift and go to state 21

state 51

    (32) expression -> expression TIMES . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 95
    value                          shift and go to state 21

state 52

    (33) expression -> expression DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 96
    value                          shift and go to state 21

state 53

    (34) expression -> expression INT_DIVIDE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 97
    value                          shift and go to state 21

state 54

    (35) expression -> expression MODULE . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 98
    value                          shift and go to state 21

state 55

    (24) print_stmt -> PRINT LPAREN . RPAREN SEMICOLON
    (25) print_stmt -> PRINT LPAREN . value RPAREN SEMICOLON
    (26) print_stmt -> PRINT LPAREN . expression RPAREN SEMICOLON
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID

    RPAREN          shift and go to state 99
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 102
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    LPAREN          shift and go to state 20
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59

    value                          shift and go to state 100
    expression                     shift and go to state 101

state 56

    (36) expression -> LPAREN expression . RPAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    RPAREN          shift and go to state 103
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 57

    (63) expression -> ID . INCREMENT
    (64) expression -> ID . DECREMENT
    (145) value -> ID .

    INCREMENT       shift and go to state 104
    DECREMENT       shift and go to state 105
    RPAREN          reduce using rule 145 (value -> ID .)
    PLUS            reduce using rule 145 (value -> ID .)
    MINUS           reduce using rule 145 (value -> ID .)
    TIMES           reduce using rule 145 (value -> ID .)
    DIVIDE          reduce using rule 145 (value -> ID .)
    INT_DIVIDE      reduce using rule 145 (value -> ID .)
    MODULE          reduce using rule 145 (value -> ID .)
    SEMICOLON       reduce using rule 145 (value -> ID .)
    COMMA           reduce using rule 145 (value -> ID .)


state 58

    (65) expression -> INCREMENT . ID

    ID              shift and go to state 106


state 59

    (66) expression -> DECREMENT . ID

    ID              shift and go to state 107


state 60

    (142) value -> INT .

    RPAREN          reduce using rule 142 (value -> INT .)
    PLUS            reduce using rule 142 (value -> INT .)
    MINUS           reduce using rule 142 (value -> INT .)
    TIMES           reduce using rule 142 (value -> INT .)
    DIVIDE          reduce using rule 142 (value -> INT .)
    INT_DIVIDE      reduce using rule 142 (value -> INT .)
    MODULE          reduce using rule 142 (value -> INT .)
    SEMICOLON       reduce using rule 142 (value -> INT .)
    COMMA           reduce using rule 142 (value -> INT .)
    RBRACKET        reduce using rule 142 (value -> INT .)
    GREATER         reduce using rule 142 (value -> INT .)
    LESS            reduce using rule 142 (value -> INT .)
    GREATER_EQUAL   reduce using rule 142 (value -> INT .)
    LESS_EQUAL      reduce using rule 142 (value -> INT .)
    EQUALS          reduce using rule 142 (value -> INT .)
    NOT_EQUALS      reduce using rule 142 (value -> INT .)
    AND             reduce using rule 142 (value -> INT .)
    OR              reduce using rule 142 (value -> INT .)
    COLON           reduce using rule 142 (value -> INT .)
    RBRACE          reduce using rule 142 (value -> INT .)


state 61

    (143) value -> DOUBLE .

    RPAREN          reduce using rule 143 (value -> DOUBLE .)
    PLUS            reduce using rule 143 (value -> DOUBLE .)
    MINUS           reduce using rule 143 (value -> DOUBLE .)
    TIMES           reduce using rule 143 (value -> DOUBLE .)
    DIVIDE          reduce using rule 143 (value -> DOUBLE .)
    INT_DIVIDE      reduce using rule 143 (value -> DOUBLE .)
    MODULE          reduce using rule 143 (value -> DOUBLE .)
    SEMICOLON       reduce using rule 143 (value -> DOUBLE .)
    COMMA           reduce using rule 143 (value -> DOUBLE .)
    RBRACKET        reduce using rule 143 (value -> DOUBLE .)
    GREATER         reduce using rule 143 (value -> DOUBLE .)
    LESS            reduce using rule 143 (value -> DOUBLE .)
    GREATER_EQUAL   reduce using rule 143 (value -> DOUBLE .)
    LESS_EQUAL      reduce using rule 143 (value -> DOUBLE .)
    EQUALS          reduce using rule 143 (value -> DOUBLE .)
    NOT_EQUALS      reduce using rule 143 (value -> DOUBLE .)
    AND             reduce using rule 143 (value -> DOUBLE .)
    OR              reduce using rule 143 (value -> DOUBLE .)
    COLON           reduce using rule 143 (value -> DOUBLE .)
    RBRACE          reduce using rule 143 (value -> DOUBLE .)


state 62

    (144) value -> STRING .

    RPAREN          reduce using rule 144 (value -> STRING .)
    PLUS            reduce using rule 144 (value -> STRING .)
    MINUS           reduce using rule 144 (value -> STRING .)
    TIMES           reduce using rule 144 (value -> STRING .)
    DIVIDE          reduce using rule 144 (value -> STRING .)
    INT_DIVIDE      reduce using rule 144 (value -> STRING .)
    MODULE          reduce using rule 144 (value -> STRING .)
    SEMICOLON       reduce using rule 144 (value -> STRING .)
    COMMA           reduce using rule 144 (value -> STRING .)
    RBRACKET        reduce using rule 144 (value -> STRING .)
    GREATER         reduce using rule 144 (value -> STRING .)
    LESS            reduce using rule 144 (value -> STRING .)
    GREATER_EQUAL   reduce using rule 144 (value -> STRING .)
    LESS_EQUAL      reduce using rule 144 (value -> STRING .)
    EQUALS          reduce using rule 144 (value -> STRING .)
    NOT_EQUALS      reduce using rule 144 (value -> STRING .)
    AND             reduce using rule 144 (value -> STRING .)
    OR              reduce using rule 144 (value -> STRING .)
    COLON           reduce using rule 144 (value -> STRING .)
    RBRACE          reduce using rule 144 (value -> STRING .)


state 63

    (27) input_stmt -> STDIN DOT . READLINESYNC LPAREN RPAREN SEMICOLON

    READLINESYNC    shift and go to state 108


state 64

    (28) input_stmt -> VAR ID . ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (150) lambda_function -> VAR ID . ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> VAR ID . ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (20) variable_def -> VAR ID . ASSIGN expression SEMICOLON
    (78) object_instantiation -> VAR ID . ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> VAR ID . ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR ID . ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> VAR ID . ASSIGN ID LPAREN RPAREN SEMICOLON

    ASSIGN          shift and go to state 109


state 65

    (82) object_instantiation -> ID ID . ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> ID ID . ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON

    ASSIGN          shift and go to state 110


state 66

    (71) function_call -> ID LPAREN . RPAREN SEMICOLON
    (72) function_call -> ID LPAREN . argument_list RPAREN SEMICOLON
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RPAREN          shift and go to state 111
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    argument_list                  shift and go to state 112
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 67

    (67) incdec_statement -> ID INCREMENT . SEMICOLON
    (63) expression -> ID INCREMENT .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 114
    PLUS            reduce using rule 63 (expression -> ID INCREMENT .)
    MINUS           reduce using rule 63 (expression -> ID INCREMENT .)
    TIMES           reduce using rule 63 (expression -> ID INCREMENT .)
    DIVIDE          reduce using rule 63 (expression -> ID INCREMENT .)
    INT_DIVIDE      reduce using rule 63 (expression -> ID INCREMENT .)
    MODULE          reduce using rule 63 (expression -> ID INCREMENT .)

  ! SEMICOLON       [ reduce using rule 63 (expression -> ID INCREMENT .) ]


state 68

    (68) incdec_statement -> ID DECREMENT . SEMICOLON
    (64) expression -> ID DECREMENT .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 115
    PLUS            reduce using rule 64 (expression -> ID DECREMENT .)
    MINUS           reduce using rule 64 (expression -> ID DECREMENT .)
    TIMES           reduce using rule 64 (expression -> ID DECREMENT .)
    DIVIDE          reduce using rule 64 (expression -> ID DECREMENT .)
    INT_DIVIDE      reduce using rule 64 (expression -> ID DECREMENT .)
    MODULE          reduce using rule 64 (expression -> ID DECREMENT .)

  ! SEMICOLON       [ reduce using rule 64 (expression -> ID DECREMENT .) ]


state 69

    (84) object_instantiation -> ID ASSIGN . NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> ID ASSIGN . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> ID ASSIGN . NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> ID ASSIGN . ID LPAREN RPAREN SEMICOLON

    NEW             shift and go to state 117
    ID              shift and go to state 116


state 70

    (29) input_stmt -> type ID . ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (55) function -> type ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> type ID . LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> type ID . ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> type ID . ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (18) variable_def -> type ID . ASSIGN expression SEMICOLON
    (79) object_instantiation -> type ID . ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> type ID . ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type ID . ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> type ID . ASSIGN ID LPAREN RPAREN SEMICOLON

    ASSIGN          shift and go to state 118
    LPAREN          shift and go to state 119


state 71

    (39) control_structures -> if_block else_block .

    SEMICOLON       reduce using rule 39 (control_structures -> if_block else_block .)
    PRINT           reduce using rule 39 (control_structures -> if_block else_block .)
    STDIN           reduce using rule 39 (control_structures -> if_block else_block .)
    VAR             reduce using rule 39 (control_structures -> if_block else_block .)
    VOID            reduce using rule 39 (control_structures -> if_block else_block .)
    LIST            reduce using rule 39 (control_structures -> if_block else_block .)
    MAP             reduce using rule 39 (control_structures -> if_block else_block .)
    DYNAMIC         reduce using rule 39 (control_structures -> if_block else_block .)
    STATIC          reduce using rule 39 (control_structures -> if_block else_block .)
    ID              reduce using rule 39 (control_structures -> if_block else_block .)
    RETURN          reduce using rule 39 (control_structures -> if_block else_block .)
    INCREMENT       reduce using rule 39 (control_structures -> if_block else_block .)
    DECREMENT       reduce using rule 39 (control_structures -> if_block else_block .)
    CLASS           reduce using rule 39 (control_structures -> if_block else_block .)
    LPAREN          reduce using rule 39 (control_structures -> if_block else_block .)
    STRING          reduce using rule 39 (control_structures -> if_block else_block .)
    INT             reduce using rule 39 (control_structures -> if_block else_block .)
    DOUBLE          reduce using rule 39 (control_structures -> if_block else_block .)
    BOOL            reduce using rule 39 (control_structures -> if_block else_block .)
    IF              reduce using rule 39 (control_structures -> if_block else_block .)
    WHILE           reduce using rule 39 (control_structures -> if_block else_block .)
    FOR             reduce using rule 39 (control_structures -> if_block else_block .)
    TRUE            reduce using rule 39 (control_structures -> if_block else_block .)
    FALSE           reduce using rule 39 (control_structures -> if_block else_block .)
    $end            reduce using rule 39 (control_structures -> if_block else_block .)
    RBRACE          reduce using rule 39 (control_structures -> if_block else_block .)


state 72

    (43) else_block -> ELSE . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 120


state 73

    (56) function -> VOID ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (58) function -> VOID ID . LPAREN RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 121


state 74

    (133) list_def -> LIST LBRACKET . value_list RBRACKET SEMICOLON
    (135) value_list -> . value
    (136) value_list -> . value_list COMMA value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value_list                     shift and go to state 122
    value                          shift and go to state 123

state 75

    (134) list_def -> LIST LESS . type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 125

state 76

    (137) map_def -> MAP LESS . type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 126

state 77

    (138) map_def -> MAP ID . ASSIGN LBRACE map_entries RBRACE SEMICOLON

    ASSIGN          shift and go to state 127


state 78

    (19) variable_def -> DYNAMIC ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 128


state 79

    (21) variable_def -> STATIC type . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 129


state 80

    (22) variable_def -> STATIC VAR . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 130


state 81

    (23) variable_def -> STATIC DYNAMIC . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 131


state 82

    (126) type -> STRING .

    ID              reduce using rule 126 (type -> STRING .)
    GREATER         reduce using rule 126 (type -> STRING .)
    COMMA           reduce using rule 126 (type -> STRING .)


state 83

    (127) type -> INT .

    ID              reduce using rule 127 (type -> INT .)
    GREATER         reduce using rule 127 (type -> INT .)
    COMMA           reduce using rule 127 (type -> INT .)


state 84

    (128) type -> DOUBLE .

    ID              reduce using rule 128 (type -> DOUBLE .)
    GREATER         reduce using rule 128 (type -> DOUBLE .)
    COMMA           reduce using rule 128 (type -> DOUBLE .)


state 85

    (75) return_statement -> RETURN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 132
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 86

    (76) return_statement -> RETURN SEMICOLON .

    SEMICOLON       reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    STDIN           reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    VAR             reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    LIST            reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    MAP             reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    DYNAMIC         reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    STATIC          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    ID              reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    INCREMENT       reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    DECREMENT       reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    CLASS           reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    DOUBLE          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    $end            reduce using rule 76 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 76 (return_statement -> RETURN SEMICOLON .)


state 87

    (69) incdec_statement -> INCREMENT ID . SEMICOLON
    (65) expression -> INCREMENT ID .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 133
    PLUS            reduce using rule 65 (expression -> INCREMENT ID .)
    MINUS           reduce using rule 65 (expression -> INCREMENT ID .)
    TIMES           reduce using rule 65 (expression -> INCREMENT ID .)
    DIVIDE          reduce using rule 65 (expression -> INCREMENT ID .)
    INT_DIVIDE      reduce using rule 65 (expression -> INCREMENT ID .)
    MODULE          reduce using rule 65 (expression -> INCREMENT ID .)

  ! SEMICOLON       [ reduce using rule 65 (expression -> INCREMENT ID .) ]


state 88

    (70) incdec_statement -> DECREMENT ID . SEMICOLON
    (66) expression -> DECREMENT ID .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 134
    PLUS            reduce using rule 66 (expression -> DECREMENT ID .)
    MINUS           reduce using rule 66 (expression -> DECREMENT ID .)
    TIMES           reduce using rule 66 (expression -> DECREMENT ID .)
    DIVIDE          reduce using rule 66 (expression -> DECREMENT ID .)
    INT_DIVIDE      reduce using rule 66 (expression -> DECREMENT ID .)
    MODULE          reduce using rule 66 (expression -> DECREMENT ID .)

  ! SEMICOLON       [ reduce using rule 66 (expression -> DECREMENT ID .) ]


state 89

    (94) class_def -> CLASS ID . LBRACE class_body RBRACE
    (95) class_def -> CLASS ID . EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> CLASS ID . IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> CLASS ID . EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE

    LBRACE          shift and go to state 135
    EXTENDS         shift and go to state 136
    IMPLEMENTS      shift and go to state 137


state 90

    (42) if_block -> IF LPAREN . conditions RPAREN LBRACE statement_composed RBRACE
    (44) conditions -> . condition
    (45) conditions -> . conditions AND condition
    (46) conditions -> . conditions OR condition
    (47) condition -> . value comparison_operator value
    (48) condition -> . NOT value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    NOT             shift and go to state 141
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    conditions                     shift and go to state 138
    condition                      shift and go to state 139
    value                          shift and go to state 140

state 91

    (77) while_loop -> WHILE LPAREN . conditions RPAREN LBRACE statement_composed RBRACE
    (44) conditions -> . condition
    (45) conditions -> . conditions AND condition
    (46) conditions -> . conditions OR condition
    (47) condition -> . value comparison_operator value
    (48) condition -> . NOT value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    NOT             shift and go to state 141
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    conditions                     shift and go to state 142
    condition                      shift and go to state 139
    value                          shift and go to state 140

state 92

    (98) for_loop -> FOR LPAREN . for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> FOR LPAREN . type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (100) for_init -> . variable_def
    (101) for_init -> . empty
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (132) empty -> .

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 147
    STATIC          shift and go to state 33
    SEMICOLON       reduce using rule 132 (empty -> .)

    for_init                       shift and go to state 143
    type                           shift and go to state 144
    variable_def                   shift and go to state 145
    empty                          shift and go to state 146

state 93

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! INT_DIVIDE      [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]


state 94

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! INT_DIVIDE      [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]


state 95

    (32) expression -> expression TIMES expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! INT_DIVIDE      [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! MODULE          [ reduce using rule 32 (expression -> expression TIMES expression .) ]


state 96

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! INT_DIVIDE      [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! MODULE          [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]


state 97

    (34) expression -> expression INT_DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 34 (expression -> expression INT_DIVIDE expression .)
    RPAREN          reduce using rule 34 (expression -> expression INT_DIVIDE expression .)
    COMMA           reduce using rule 34 (expression -> expression INT_DIVIDE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]
  ! INT_DIVIDE      [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]
  ! MODULE          [ reduce using rule 34 (expression -> expression INT_DIVIDE expression .) ]


state 98

    (35) expression -> expression MODULE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INT_DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    SEMICOLON       reduce using rule 35 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 35 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 35 (expression -> expression MODULE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54

  ! PLUS            [ reduce using rule 35 (expression -> expression MODULE expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression MODULE expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression MODULE expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression MODULE expression .) ]
  ! INT_DIVIDE      [ reduce using rule 35 (expression -> expression MODULE expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> expression MODULE expression .) ]


state 99

    (24) print_stmt -> PRINT LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 100

    (25) print_stmt -> PRINT LPAREN value . RPAREN SEMICOLON
    (37) expression -> value .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 149
    PLUS            reduce using rule 37 (expression -> value .)
    MINUS           reduce using rule 37 (expression -> value .)
    TIMES           reduce using rule 37 (expression -> value .)
    DIVIDE          reduce using rule 37 (expression -> value .)
    INT_DIVIDE      reduce using rule 37 (expression -> value .)
    MODULE          reduce using rule 37 (expression -> value .)

  ! RPAREN          [ reduce using rule 37 (expression -> value .) ]


state 101

    (26) print_stmt -> PRINT LPAREN expression . RPAREN SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    RPAREN          shift and go to state 150
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 102

    (145) value -> ID .
    (63) expression -> ID . INCREMENT
    (64) expression -> ID . DECREMENT

    RPAREN          reduce using rule 145 (value -> ID .)
    PLUS            reduce using rule 145 (value -> ID .)
    MINUS           reduce using rule 145 (value -> ID .)
    TIMES           reduce using rule 145 (value -> ID .)
    DIVIDE          reduce using rule 145 (value -> ID .)
    INT_DIVIDE      reduce using rule 145 (value -> ID .)
    MODULE          reduce using rule 145 (value -> ID .)
    INCREMENT       shift and go to state 104
    DECREMENT       shift and go to state 105


state 103

    (36) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    INT_DIVIDE      reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (expression -> LPAREN expression RPAREN .)


state 104

    (63) expression -> ID INCREMENT .

    RPAREN          reduce using rule 63 (expression -> ID INCREMENT .)
    PLUS            reduce using rule 63 (expression -> ID INCREMENT .)
    MINUS           reduce using rule 63 (expression -> ID INCREMENT .)
    TIMES           reduce using rule 63 (expression -> ID INCREMENT .)
    DIVIDE          reduce using rule 63 (expression -> ID INCREMENT .)
    INT_DIVIDE      reduce using rule 63 (expression -> ID INCREMENT .)
    MODULE          reduce using rule 63 (expression -> ID INCREMENT .)
    SEMICOLON       reduce using rule 63 (expression -> ID INCREMENT .)
    COMMA           reduce using rule 63 (expression -> ID INCREMENT .)


state 105

    (64) expression -> ID DECREMENT .

    RPAREN          reduce using rule 64 (expression -> ID DECREMENT .)
    PLUS            reduce using rule 64 (expression -> ID DECREMENT .)
    MINUS           reduce using rule 64 (expression -> ID DECREMENT .)
    TIMES           reduce using rule 64 (expression -> ID DECREMENT .)
    DIVIDE          reduce using rule 64 (expression -> ID DECREMENT .)
    INT_DIVIDE      reduce using rule 64 (expression -> ID DECREMENT .)
    MODULE          reduce using rule 64 (expression -> ID DECREMENT .)
    SEMICOLON       reduce using rule 64 (expression -> ID DECREMENT .)
    COMMA           reduce using rule 64 (expression -> ID DECREMENT .)


state 106

    (65) expression -> INCREMENT ID .

    RPAREN          reduce using rule 65 (expression -> INCREMENT ID .)
    PLUS            reduce using rule 65 (expression -> INCREMENT ID .)
    MINUS           reduce using rule 65 (expression -> INCREMENT ID .)
    TIMES           reduce using rule 65 (expression -> INCREMENT ID .)
    DIVIDE          reduce using rule 65 (expression -> INCREMENT ID .)
    INT_DIVIDE      reduce using rule 65 (expression -> INCREMENT ID .)
    MODULE          reduce using rule 65 (expression -> INCREMENT ID .)
    SEMICOLON       reduce using rule 65 (expression -> INCREMENT ID .)
    COMMA           reduce using rule 65 (expression -> INCREMENT ID .)


state 107

    (66) expression -> DECREMENT ID .

    RPAREN          reduce using rule 66 (expression -> DECREMENT ID .)
    PLUS            reduce using rule 66 (expression -> DECREMENT ID .)
    MINUS           reduce using rule 66 (expression -> DECREMENT ID .)
    TIMES           reduce using rule 66 (expression -> DECREMENT ID .)
    DIVIDE          reduce using rule 66 (expression -> DECREMENT ID .)
    INT_DIVIDE      reduce using rule 66 (expression -> DECREMENT ID .)
    MODULE          reduce using rule 66 (expression -> DECREMENT ID .)
    SEMICOLON       reduce using rule 66 (expression -> DECREMENT ID .)
    COMMA           reduce using rule 66 (expression -> DECREMENT ID .)


state 108

    (27) input_stmt -> STDIN DOT READLINESYNC . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 109

    (28) input_stmt -> VAR ID ASSIGN . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (150) lambda_function -> VAR ID ASSIGN . LPAREN parameters RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> VAR ID ASSIGN . LPAREN RPAREN ARROW expression SEMICOLON
    (20) variable_def -> VAR ID ASSIGN . expression SEMICOLON
    (78) object_instantiation -> VAR ID ASSIGN . NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> VAR ID ASSIGN . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR ID ASSIGN . NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> VAR ID ASSIGN . ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    STDIN           shift and go to state 153
    LPAREN          shift and go to state 154
    NEW             shift and go to state 156
    ID              shift and go to state 152
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 155
    value                          shift and go to state 21

state 110

    (82) object_instantiation -> ID ID ASSIGN . NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> ID ID ASSIGN . ID LPAREN argument_list_opt RPAREN SEMICOLON

    NEW             shift and go to state 158
    ID              shift and go to state 157


state 111

    (71) function_call -> ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 159


state 112

    (72) function_call -> ID LPAREN argument_list . RPAREN SEMICOLON
    (74) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 160
    COMMA           shift and go to state 161


state 113

    (73) argument_list -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    RPAREN          reduce using rule 73 (argument_list -> expression .)
    COMMA           reduce using rule 73 (argument_list -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 114

    (67) incdec_statement -> ID INCREMENT SEMICOLON .

    SEMICOLON       reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    PRINT           reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    STDIN           reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    VAR             reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    VOID            reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    LIST            reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    MAP             reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    DYNAMIC         reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    STATIC          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    ID              reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    RETURN          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    INCREMENT       reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    DECREMENT       reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    CLASS           reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    LPAREN          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    STRING          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    INT             reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    DOUBLE          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    BOOL            reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    IF              reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    WHILE           reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    FOR             reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    TRUE            reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    FALSE           reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    $end            reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    RBRACE          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)
    RPAREN          reduce using rule 67 (incdec_statement -> ID INCREMENT SEMICOLON .)


state 115

    (68) incdec_statement -> ID DECREMENT SEMICOLON .

    SEMICOLON       reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    PRINT           reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    STDIN           reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    VAR             reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    VOID            reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    LIST            reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    MAP             reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    DYNAMIC         reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    STATIC          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    ID              reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    RETURN          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    INCREMENT       reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    DECREMENT       reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    CLASS           reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    LPAREN          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    STRING          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    INT             reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    DOUBLE          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    BOOL            reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    IF              reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    WHILE           reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    FOR             reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    TRUE            reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    FALSE           reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    $end            reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    RBRACE          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)
    RPAREN          reduce using rule 68 (incdec_statement -> ID DECREMENT SEMICOLON .)


state 116

    (85) object_instantiation -> ID ASSIGN ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (87) object_instantiation -> ID ASSIGN ID . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 162


state 117

    (84) object_instantiation -> ID ASSIGN NEW . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> ID ASSIGN NEW . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 163


state 118

    (29) input_stmt -> type ID ASSIGN . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (149) lambda_function -> type ID ASSIGN . LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> type ID ASSIGN . LPAREN RPAREN ARROW expression SEMICOLON
    (18) variable_def -> type ID ASSIGN . expression SEMICOLON
    (79) object_instantiation -> type ID ASSIGN . NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> type ID ASSIGN . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type ID ASSIGN . NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> type ID ASSIGN . ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    STDIN           shift and go to state 165
    LPAREN          shift and go to state 166
    NEW             shift and go to state 168
    ID              shift and go to state 164
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 167
    value                          shift and go to state 21

state 119

    (55) function -> type ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> type ID LPAREN . RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 171
    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 169
    parameters                     shift and go to state 170
    parameter                      shift and go to state 172

state 120

    (43) else_block -> ELSE LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 174
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 121

    (56) function -> VOID ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (58) function -> VOID ID LPAREN . RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 176
    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    parameters                     shift and go to state 175
    parameter                      shift and go to state 172
    type                           shift and go to state 169

state 122

    (133) list_def -> LIST LBRACKET value_list . RBRACKET SEMICOLON
    (136) value_list -> value_list . COMMA value

    RBRACKET        shift and go to state 177
    COMMA           shift and go to state 178


state 123

    (135) value_list -> value .

    RBRACKET        reduce using rule 135 (value_list -> value .)
    COMMA           reduce using rule 135 (value_list -> value .)


state 124

    (145) value -> ID .

    RBRACKET        reduce using rule 145 (value -> ID .)
    COMMA           reduce using rule 145 (value -> ID .)
    GREATER         reduce using rule 145 (value -> ID .)
    LESS            reduce using rule 145 (value -> ID .)
    GREATER_EQUAL   reduce using rule 145 (value -> ID .)
    LESS_EQUAL      reduce using rule 145 (value -> ID .)
    EQUALS          reduce using rule 145 (value -> ID .)
    NOT_EQUALS      reduce using rule 145 (value -> ID .)
    RPAREN          reduce using rule 145 (value -> ID .)
    AND             reduce using rule 145 (value -> ID .)
    OR              reduce using rule 145 (value -> ID .)
    SEMICOLON       reduce using rule 145 (value -> ID .)
    COLON           reduce using rule 145 (value -> ID .)
    RBRACE          reduce using rule 145 (value -> ID .)


state 125

    (134) list_def -> LIST LESS type . GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON

    GREATER         shift and go to state 179


state 126

    (137) map_def -> MAP LESS type . COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON

    COMMA           shift and go to state 180


state 127

    (138) map_def -> MAP ID ASSIGN . LBRACE map_entries RBRACE SEMICOLON

    LBRACE          shift and go to state 181


state 128

    (19) variable_def -> DYNAMIC ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 182
    value                          shift and go to state 21

state 129

    (21) variable_def -> STATIC type ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 183


state 130

    (22) variable_def -> STATIC VAR ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 184


state 131

    (23) variable_def -> STATIC DYNAMIC ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 185


state 132

    (75) return_statement -> RETURN expression SEMICOLON .

    SEMICOLON       reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    STDIN           reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    LIST            reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    MAP             reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    DYNAMIC         reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    STATIC          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    INCREMENT       reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    DECREMENT       reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    CLASS           reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 75 (return_statement -> RETURN expression SEMICOLON .)


state 133

    (69) incdec_statement -> INCREMENT ID SEMICOLON .

    SEMICOLON       reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    PRINT           reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    STDIN           reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    VAR             reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    VOID            reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    LIST            reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    MAP             reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    DYNAMIC         reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    STATIC          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    ID              reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    RETURN          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    INCREMENT       reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    DECREMENT       reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    CLASS           reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    LPAREN          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    STRING          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    INT             reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    DOUBLE          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    BOOL            reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    IF              reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    WHILE           reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    FOR             reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    TRUE            reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    FALSE           reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    $end            reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    RBRACE          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)
    RPAREN          reduce using rule 69 (incdec_statement -> INCREMENT ID SEMICOLON .)


state 134

    (70) incdec_statement -> DECREMENT ID SEMICOLON .

    SEMICOLON       reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    PRINT           reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    STDIN           reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    VAR             reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    VOID            reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    LIST            reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    MAP             reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    DYNAMIC         reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    STATIC          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    ID              reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    RETURN          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    INCREMENT       reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    DECREMENT       reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    CLASS           reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    LPAREN          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    STRING          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    INT             reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    DOUBLE          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    BOOL            reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    IF              reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    WHILE           reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    FOR             reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    TRUE            reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    FALSE           reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    $end            reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    RBRACE          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)
    RPAREN          reduce using rule 70 (incdec_statement -> DECREMENT ID SEMICOLON .)


state 135

    (94) class_def -> CLASS ID LBRACE . class_body RBRACE
    (92) class_body -> . class_member
    (93) class_body -> . class_body class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_body                     shift and go to state 187
    class_member                   shift and go to state 188
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 136

    (95) class_def -> CLASS ID EXTENDS . ID LBRACE class_body RBRACE
    (97) class_def -> CLASS ID EXTENDS . ID IMPLEMENTS ID LBRACE class_body RBRACE

    ID              shift and go to state 198


state 137

    (96) class_def -> CLASS ID IMPLEMENTS . ID LBRACE class_body RBRACE

    ID              shift and go to state 199


state 138

    (42) if_block -> IF LPAREN conditions . RPAREN LBRACE statement_composed RBRACE
    (45) conditions -> conditions . AND condition
    (46) conditions -> conditions . OR condition

    RPAREN          shift and go to state 200
    AND             shift and go to state 201
    OR              shift and go to state 202


state 139

    (44) conditions -> condition .

    RPAREN          reduce using rule 44 (conditions -> condition .)
    AND             reduce using rule 44 (conditions -> condition .)
    OR              reduce using rule 44 (conditions -> condition .)
    SEMICOLON       reduce using rule 44 (conditions -> condition .)


state 140

    (47) condition -> value . comparison_operator value
    (49) comparison_operator -> . GREATER
    (50) comparison_operator -> . LESS
    (51) comparison_operator -> . GREATER_EQUAL
    (52) comparison_operator -> . LESS_EQUAL
    (53) comparison_operator -> . EQUALS
    (54) comparison_operator -> . NOT_EQUALS

    GREATER         shift and go to state 204
    LESS            shift and go to state 205
    GREATER_EQUAL   shift and go to state 206
    LESS_EQUAL      shift and go to state 207
    EQUALS          shift and go to state 208
    NOT_EQUALS      shift and go to state 209

    comparison_operator            shift and go to state 203

state 141

    (48) condition -> NOT . value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value                          shift and go to state 210

state 142

    (77) while_loop -> WHILE LPAREN conditions . RPAREN LBRACE statement_composed RBRACE
    (45) conditions -> conditions . AND condition
    (46) conditions -> conditions . OR condition

    RPAREN          shift and go to state 211
    AND             shift and go to state 201
    OR              shift and go to state 202


state 143

    (98) for_loop -> FOR LPAREN for_init . SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE

    SEMICOLON       shift and go to state 212


state 144

    (99) for_loop -> FOR LPAREN type . ID IN ID RPAREN LBRACE statement_composed RBRACE
    (18) variable_def -> type . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 213


state 145

    (100) for_init -> variable_def .

    SEMICOLON       reduce using rule 100 (for_init -> variable_def .)


state 146

    (101) for_init -> empty .

    SEMICOLON       reduce using rule 101 (for_init -> empty .)


state 147

    (20) variable_def -> VAR . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 214


state 148

    (24) print_stmt -> PRINT LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 24 (print_stmt -> PRINT LPAREN RPAREN SEMICOLON .)


state 149

    (25) print_stmt -> PRINT LPAREN value RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 150

    (26) print_stmt -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 151

    (27) input_stmt -> STDIN DOT READLINESYNC LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 152

    (80) object_instantiation -> VAR ID ASSIGN ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (89) object_instantiation -> VAR ID ASSIGN ID . LPAREN RPAREN SEMICOLON
    (63) expression -> ID . INCREMENT
    (64) expression -> ID . DECREMENT
    (145) value -> ID .

    LPAREN          shift and go to state 218
    INCREMENT       shift and go to state 104
    DECREMENT       shift and go to state 105
    SEMICOLON       reduce using rule 145 (value -> ID .)
    PLUS            reduce using rule 145 (value -> ID .)
    MINUS           reduce using rule 145 (value -> ID .)
    TIMES           reduce using rule 145 (value -> ID .)
    DIVIDE          reduce using rule 145 (value -> ID .)
    INT_DIVIDE      reduce using rule 145 (value -> ID .)
    MODULE          reduce using rule 145 (value -> ID .)


state 153

    (28) input_stmt -> VAR ID ASSIGN STDIN . DOT READLINESYNC LPAREN RPAREN SEMICOLON

    DOT             shift and go to state 219


state 154

    (150) lambda_function -> VAR ID ASSIGN LPAREN . parameters RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> VAR ID ASSIGN LPAREN . RPAREN ARROW expression SEMICOLON
    (36) expression -> LPAREN . expression RPAREN
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 221
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    REQUIRED        shift and go to state 173
    INT             shift and go to state 222
    DOUBLE          shift and go to state 223
    STRING          shift and go to state 224
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    BOOL            shift and go to state 41

    parameters                     shift and go to state 220
    expression                     shift and go to state 56
    parameter                      shift and go to state 172
    value                          shift and go to state 21
    type                           shift and go to state 169

state 155

    (20) variable_def -> VAR ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 225
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 156

    (78) object_instantiation -> VAR ID ASSIGN NEW . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR ID ASSIGN NEW . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 226


state 157

    (83) object_instantiation -> ID ID ASSIGN ID . LPAREN argument_list_opt RPAREN SEMICOLON

    LPAREN          shift and go to state 227


state 158

    (82) object_instantiation -> ID ID ASSIGN NEW . ID LPAREN argument_list_opt RPAREN SEMICOLON

    ID              shift and go to state 228


state 159

    (71) function_call -> ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (function_call -> ID LPAREN RPAREN SEMICOLON .)


state 160

    (72) function_call -> ID LPAREN argument_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 161

    (74) argument_list -> argument_list COMMA . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 230
    value                          shift and go to state 21

state 162

    (85) object_instantiation -> ID ASSIGN ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (87) object_instantiation -> ID ASSIGN ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 232
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 231
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 163

    (84) object_instantiation -> ID ASSIGN NEW ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> ID ASSIGN NEW ID . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 235


state 164

    (81) object_instantiation -> type ID ASSIGN ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (91) object_instantiation -> type ID ASSIGN ID . LPAREN RPAREN SEMICOLON
    (63) expression -> ID . INCREMENT
    (64) expression -> ID . DECREMENT
    (145) value -> ID .

    LPAREN          shift and go to state 236
    INCREMENT       shift and go to state 104
    DECREMENT       shift and go to state 105
    SEMICOLON       reduce using rule 145 (value -> ID .)
    PLUS            reduce using rule 145 (value -> ID .)
    MINUS           reduce using rule 145 (value -> ID .)
    TIMES           reduce using rule 145 (value -> ID .)
    DIVIDE          reduce using rule 145 (value -> ID .)
    INT_DIVIDE      reduce using rule 145 (value -> ID .)
    MODULE          reduce using rule 145 (value -> ID .)


state 165

    (29) input_stmt -> type ID ASSIGN STDIN . DOT READLINESYNC LPAREN RPAREN SEMICOLON

    DOT             shift and go to state 237


state 166

    (149) lambda_function -> type ID ASSIGN LPAREN . parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> type ID ASSIGN LPAREN . RPAREN ARROW expression SEMICOLON
    (36) expression -> LPAREN . expression RPAREN
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 239
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    REQUIRED        shift and go to state 173
    INT             shift and go to state 222
    DOUBLE          shift and go to state 223
    STRING          shift and go to state 224
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    BOOL            shift and go to state 41

    type                           shift and go to state 169
    parameters                     shift and go to state 238
    expression                     shift and go to state 56
    parameter                      shift and go to state 172
    value                          shift and go to state 21

state 167

    (18) variable_def -> type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 240
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 168

    (79) object_instantiation -> type ID ASSIGN NEW . ID LPAREN argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type ID ASSIGN NEW . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 241


state 169

    (61) parameter -> type . ID

    ID              shift and go to state 242


state 170

    (55) function -> type ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 243
    COMMA           shift and go to state 244


state 171

    (57) function -> type ID LPAREN RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 245


state 172

    (59) parameters -> parameter .

    RPAREN          reduce using rule 59 (parameters -> parameter .)
    COMMA           reduce using rule 59 (parameters -> parameter .)


state 173

    (62) parameter -> REQUIRED . type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 246

state 174

    (43) else_block -> ELSE LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 247
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 175

    (56) function -> VOID ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 248
    COMMA           shift and go to state 244


state 176

    (58) function -> VOID ID LPAREN RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 249


state 177

    (133) list_def -> LIST LBRACKET value_list RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 250


state 178

    (136) value_list -> value_list COMMA . value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value                          shift and go to state 251

state 179

    (134) list_def -> LIST LESS type GREATER . ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON

    ID              shift and go to state 252


state 180

    (137) map_def -> MAP LESS type COMMA . type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 253

state 181

    (138) map_def -> MAP ID ASSIGN LBRACE . map_entries RBRACE SEMICOLON
    (139) map_entries -> . map_entry
    (140) map_entries -> . map_entries COMMA map_entry
    (141) map_entry -> . value COLON value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    map_entries                    shift and go to state 254
    map_entry                      shift and go to state 255
    value                          shift and go to state 256

state 182

    (19) variable_def -> DYNAMIC ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 257
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 183

    (21) variable_def -> STATIC type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 258
    value                          shift and go to state 21

state 184

    (22) variable_def -> STATIC VAR ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 259
    value                          shift and go to state 21

state 185

    (23) variable_def -> STATIC DYNAMIC ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 260
    value                          shift and go to state 21

state 186

    (124) constructor -> ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> ID . LPAREN RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 261


state 187

    (94) class_def -> CLASS ID LBRACE class_body . RBRACE
    (93) class_body -> class_body . class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RBRACE          shift and go to state 262
    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_member                   shift and go to state 263
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 188

    (92) class_body -> class_member .

    RBRACE          reduce using rule 92 (class_body -> class_member .)
    VAR             reduce using rule 92 (class_body -> class_member .)
    FINAL           reduce using rule 92 (class_body -> class_member .)
    CONST           reduce using rule 92 (class_body -> class_member .)
    STATIC          reduce using rule 92 (class_body -> class_member .)
    VOID            reduce using rule 92 (class_body -> class_member .)
    ID              reduce using rule 92 (class_body -> class_member .)
    STRING          reduce using rule 92 (class_body -> class_member .)
    INT             reduce using rule 92 (class_body -> class_member .)
    DOUBLE          reduce using rule 92 (class_body -> class_member .)
    BOOL            reduce using rule 92 (class_body -> class_member .)


state 189

    (105) class_member -> class_property .

    RBRACE          reduce using rule 105 (class_member -> class_property .)
    VAR             reduce using rule 105 (class_member -> class_property .)
    FINAL           reduce using rule 105 (class_member -> class_property .)
    CONST           reduce using rule 105 (class_member -> class_property .)
    STATIC          reduce using rule 105 (class_member -> class_property .)
    VOID            reduce using rule 105 (class_member -> class_property .)
    ID              reduce using rule 105 (class_member -> class_property .)
    STRING          reduce using rule 105 (class_member -> class_property .)
    INT             reduce using rule 105 (class_member -> class_property .)
    DOUBLE          reduce using rule 105 (class_member -> class_property .)
    BOOL            reduce using rule 105 (class_member -> class_property .)


state 190

    (106) class_member -> class_method .

    RBRACE          reduce using rule 106 (class_member -> class_method .)
    VAR             reduce using rule 106 (class_member -> class_method .)
    FINAL           reduce using rule 106 (class_member -> class_method .)
    CONST           reduce using rule 106 (class_member -> class_method .)
    STATIC          reduce using rule 106 (class_member -> class_method .)
    VOID            reduce using rule 106 (class_member -> class_method .)
    ID              reduce using rule 106 (class_member -> class_method .)
    STRING          reduce using rule 106 (class_member -> class_method .)
    INT             reduce using rule 106 (class_member -> class_method .)
    DOUBLE          reduce using rule 106 (class_member -> class_method .)
    BOOL            reduce using rule 106 (class_member -> class_method .)


state 191

    (107) class_member -> constructor .

    RBRACE          reduce using rule 107 (class_member -> constructor .)
    VAR             reduce using rule 107 (class_member -> constructor .)
    FINAL           reduce using rule 107 (class_member -> constructor .)
    CONST           reduce using rule 107 (class_member -> constructor .)
    STATIC          reduce using rule 107 (class_member -> constructor .)
    VOID            reduce using rule 107 (class_member -> constructor .)
    ID              reduce using rule 107 (class_member -> constructor .)
    STRING          reduce using rule 107 (class_member -> constructor .)
    INT             reduce using rule 107 (class_member -> constructor .)
    DOUBLE          reduce using rule 107 (class_member -> constructor .)
    BOOL            reduce using rule 107 (class_member -> constructor .)


state 192

    (108) class_property -> type . ID SEMICOLON
    (113) class_property -> type . ID ASSIGN expression SEMICOLON
    (118) class_method -> type . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> type . ID LPAREN RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 264


state 193

    (109) class_property -> VAR . ID SEMICOLON
    (114) class_property -> VAR . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 265


state 194

    (110) class_property -> FINAL . type ID SEMICOLON
    (115) class_property -> FINAL . type ID ASSIGN expression SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 266

state 195

    (111) class_property -> CONST . type ID SEMICOLON
    (116) class_property -> CONST . type ID ASSIGN expression SEMICOLON
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 267

state 196

    (112) class_property -> STATIC . type ID SEMICOLON
    (117) class_property -> STATIC . type ID ASSIGN expression SEMICOLON
    (122) class_method -> STATIC . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> STATIC . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VOID            shift and go to state 269
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 268

state 197

    (119) class_method -> VOID . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> VOID . ID LPAREN RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 270


state 198

    (95) class_def -> CLASS ID EXTENDS ID . LBRACE class_body RBRACE
    (97) class_def -> CLASS ID EXTENDS ID . IMPLEMENTS ID LBRACE class_body RBRACE

    LBRACE          shift and go to state 271
    IMPLEMENTS      shift and go to state 272


state 199

    (96) class_def -> CLASS ID IMPLEMENTS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 273


state 200

    (42) if_block -> IF LPAREN conditions RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 274


state 201

    (45) conditions -> conditions AND . condition
    (47) condition -> . value comparison_operator value
    (48) condition -> . NOT value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    NOT             shift and go to state 141
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    condition                      shift and go to state 275
    value                          shift and go to state 140

state 202

    (46) conditions -> conditions OR . condition
    (47) condition -> . value comparison_operator value
    (48) condition -> . NOT value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    NOT             shift and go to state 141
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    condition                      shift and go to state 276
    value                          shift and go to state 140

state 203

    (47) condition -> value comparison_operator . value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value                          shift and go to state 277

state 204

    (49) comparison_operator -> GREATER .

    INT             reduce using rule 49 (comparison_operator -> GREATER .)
    DOUBLE          reduce using rule 49 (comparison_operator -> GREATER .)
    STRING          reduce using rule 49 (comparison_operator -> GREATER .)
    ID              reduce using rule 49 (comparison_operator -> GREATER .)
    TRUE            reduce using rule 49 (comparison_operator -> GREATER .)
    FALSE           reduce using rule 49 (comparison_operator -> GREATER .)


state 205

    (50) comparison_operator -> LESS .

    INT             reduce using rule 50 (comparison_operator -> LESS .)
    DOUBLE          reduce using rule 50 (comparison_operator -> LESS .)
    STRING          reduce using rule 50 (comparison_operator -> LESS .)
    ID              reduce using rule 50 (comparison_operator -> LESS .)
    TRUE            reduce using rule 50 (comparison_operator -> LESS .)
    FALSE           reduce using rule 50 (comparison_operator -> LESS .)


state 206

    (51) comparison_operator -> GREATER_EQUAL .

    INT             reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)
    DOUBLE          reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)
    STRING          reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)
    ID              reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)
    TRUE            reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)
    FALSE           reduce using rule 51 (comparison_operator -> GREATER_EQUAL .)


state 207

    (52) comparison_operator -> LESS_EQUAL .

    INT             reduce using rule 52 (comparison_operator -> LESS_EQUAL .)
    DOUBLE          reduce using rule 52 (comparison_operator -> LESS_EQUAL .)
    STRING          reduce using rule 52 (comparison_operator -> LESS_EQUAL .)
    ID              reduce using rule 52 (comparison_operator -> LESS_EQUAL .)
    TRUE            reduce using rule 52 (comparison_operator -> LESS_EQUAL .)
    FALSE           reduce using rule 52 (comparison_operator -> LESS_EQUAL .)


state 208

    (53) comparison_operator -> EQUALS .

    INT             reduce using rule 53 (comparison_operator -> EQUALS .)
    DOUBLE          reduce using rule 53 (comparison_operator -> EQUALS .)
    STRING          reduce using rule 53 (comparison_operator -> EQUALS .)
    ID              reduce using rule 53 (comparison_operator -> EQUALS .)
    TRUE            reduce using rule 53 (comparison_operator -> EQUALS .)
    FALSE           reduce using rule 53 (comparison_operator -> EQUALS .)


state 209

    (54) comparison_operator -> NOT_EQUALS .

    INT             reduce using rule 54 (comparison_operator -> NOT_EQUALS .)
    DOUBLE          reduce using rule 54 (comparison_operator -> NOT_EQUALS .)
    STRING          reduce using rule 54 (comparison_operator -> NOT_EQUALS .)
    ID              reduce using rule 54 (comparison_operator -> NOT_EQUALS .)
    TRUE            reduce using rule 54 (comparison_operator -> NOT_EQUALS .)
    FALSE           reduce using rule 54 (comparison_operator -> NOT_EQUALS .)


state 210

    (48) condition -> NOT value .

    RPAREN          reduce using rule 48 (condition -> NOT value .)
    AND             reduce using rule 48 (condition -> NOT value .)
    OR              reduce using rule 48 (condition -> NOT value .)
    SEMICOLON       reduce using rule 48 (condition -> NOT value .)


state 211

    (77) while_loop -> WHILE LPAREN conditions RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 278


state 212

    (98) for_loop -> FOR LPAREN for_init SEMICOLON . conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (44) conditions -> . condition
    (45) conditions -> . conditions AND condition
    (46) conditions -> . conditions OR condition
    (47) condition -> . value comparison_operator value
    (48) condition -> . NOT value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    NOT             shift and go to state 141
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    conditions                     shift and go to state 279
    condition                      shift and go to state 139
    value                          shift and go to state 140

state 213

    (99) for_loop -> FOR LPAREN type ID . IN ID RPAREN LBRACE statement_composed RBRACE
    (18) variable_def -> type ID . ASSIGN expression SEMICOLON

    IN              shift and go to state 280
    ASSIGN          shift and go to state 281


state 214

    (20) variable_def -> VAR ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 282


state 215

    (25) print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    PRINT           reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    STDIN           reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    VAR             reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    VOID            reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    LIST            reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    MAP             reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    STATIC          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    ID              reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    RETURN          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    CLASS           reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    LPAREN          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    STRING          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    INT             reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    BOOL            reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    IF              reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    WHILE           reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    FOR             reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    TRUE            reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    FALSE           reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    $end            reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)
    RBRACE          reduce using rule 25 (print_stmt -> PRINT LPAREN value RPAREN SEMICOLON .)


state 216

    (26) print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STDIN           reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LIST            reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MAP             reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 26 (print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 217

    (27) input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 283


state 218

    (80) object_instantiation -> VAR ID ASSIGN ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (89) object_instantiation -> VAR ID ASSIGN ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 285
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 284
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 219

    (28) input_stmt -> VAR ID ASSIGN STDIN DOT . READLINESYNC LPAREN RPAREN SEMICOLON

    READLINESYNC    shift and go to state 286


state 220

    (150) lambda_function -> VAR ID ASSIGN LPAREN parameters . RPAREN ARROW expression SEMICOLON
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 287
    COMMA           shift and go to state 244


state 221

    (152) lambda_function -> VAR ID ASSIGN LPAREN RPAREN . ARROW expression SEMICOLON

    ARROW           shift and go to state 288


state 222

    (142) value -> INT .
    (127) type -> INT .

    RPAREN          reduce using rule 142 (value -> INT .)
    PLUS            reduce using rule 142 (value -> INT .)
    MINUS           reduce using rule 142 (value -> INT .)
    TIMES           reduce using rule 142 (value -> INT .)
    DIVIDE          reduce using rule 142 (value -> INT .)
    INT_DIVIDE      reduce using rule 142 (value -> INT .)
    MODULE          reduce using rule 142 (value -> INT .)
    ID              reduce using rule 127 (type -> INT .)


state 223

    (143) value -> DOUBLE .
    (128) type -> DOUBLE .

    RPAREN          reduce using rule 143 (value -> DOUBLE .)
    PLUS            reduce using rule 143 (value -> DOUBLE .)
    MINUS           reduce using rule 143 (value -> DOUBLE .)
    TIMES           reduce using rule 143 (value -> DOUBLE .)
    DIVIDE          reduce using rule 143 (value -> DOUBLE .)
    INT_DIVIDE      reduce using rule 143 (value -> DOUBLE .)
    MODULE          reduce using rule 143 (value -> DOUBLE .)
    ID              reduce using rule 128 (type -> DOUBLE .)


state 224

    (144) value -> STRING .
    (126) type -> STRING .

    RPAREN          reduce using rule 144 (value -> STRING .)
    PLUS            reduce using rule 144 (value -> STRING .)
    MINUS           reduce using rule 144 (value -> STRING .)
    TIMES           reduce using rule 144 (value -> STRING .)
    DIVIDE          reduce using rule 144 (value -> STRING .)
    INT_DIVIDE      reduce using rule 144 (value -> STRING .)
    MODULE          reduce using rule 144 (value -> STRING .)
    ID              reduce using rule 126 (type -> STRING .)


state 225

    (20) variable_def -> VAR ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 20 (variable_def -> VAR ID ASSIGN expression SEMICOLON .)


state 226

    (78) object_instantiation -> VAR ID ASSIGN NEW ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR ID ASSIGN NEW ID . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 289


state 227

    (83) object_instantiation -> ID ID ASSIGN ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    argument_list_opt              shift and go to state 290
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 228

    (82) object_instantiation -> ID ID ASSIGN NEW ID . LPAREN argument_list_opt RPAREN SEMICOLON

    LPAREN          shift and go to state 291


state 229

    (72) function_call -> ID LPAREN argument_list RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    STDIN           reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    VOID            reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    LIST            reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    MAP             reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    STATIC          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    ID              reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    CLASS           reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    LPAREN          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    STRING          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    INT             reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    BOOL            reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    IF              reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    FOR             reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    TRUE            reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    FALSE           reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    $end            reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (function_call -> ID LPAREN argument_list RPAREN SEMICOLON .)


state 230

    (74) argument_list -> argument_list COMMA expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    RPAREN          reduce using rule 74 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 74 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 231

    (85) object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 292


state 232

    (87) object_instantiation -> ID ASSIGN ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 293


state 233

    (130) argument_list_opt -> argument_list .
    (74) argument_list -> argument_list . COMMA expression

    RPAREN          reduce using rule 130 (argument_list_opt -> argument_list .)
    COMMA           shift and go to state 161


state 234

    (131) argument_list_opt -> empty .

    RPAREN          reduce using rule 131 (argument_list_opt -> empty .)


state 235

    (84) object_instantiation -> ID ASSIGN NEW ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> ID ASSIGN NEW ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 295
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 294
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 236

    (81) object_instantiation -> type ID ASSIGN ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (91) object_instantiation -> type ID ASSIGN ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 297
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 296
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 237

    (29) input_stmt -> type ID ASSIGN STDIN DOT . READLINESYNC LPAREN RPAREN SEMICOLON

    READLINESYNC    shift and go to state 298


state 238

    (149) lambda_function -> type ID ASSIGN LPAREN parameters . RPAREN ARROW expression SEMICOLON
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 299
    COMMA           shift and go to state 244


state 239

    (151) lambda_function -> type ID ASSIGN LPAREN RPAREN . ARROW expression SEMICOLON

    ARROW           shift and go to state 300


state 240

    (18) variable_def -> type ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 18 (variable_def -> type ID ASSIGN expression SEMICOLON .)


state 241

    (79) object_instantiation -> type ID ASSIGN NEW ID . LPAREN argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type ID ASSIGN NEW ID . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 301


state 242

    (61) parameter -> type ID .

    RPAREN          reduce using rule 61 (parameter -> type ID .)
    COMMA           reduce using rule 61 (parameter -> type ID .)


state 243

    (55) function -> type ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 302


state 244

    (60) parameters -> parameters COMMA . parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    parameter                      shift and go to state 303
    type                           shift and go to state 169

state 245

    (57) function -> type ID LPAREN RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 304
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 246

    (62) parameter -> REQUIRED type . ID

    ID              shift and go to state 305


state 247

    (43) else_block -> ELSE LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    ID              reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    INT             reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    IF              reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    $end            reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 43 (else_block -> ELSE LBRACE statement_composed RBRACE .)


state 248

    (56) function -> VOID ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 306


state 249

    (58) function -> VOID ID LPAREN RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 307
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 250

    (133) list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .

    SEMICOLON       reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    STDIN           reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    VAR             reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    LIST            reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    MAP             reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    DYNAMIC         reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    STATIC          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    ID              reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    DECREMENT       reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    CLASS           reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    STRING          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    INT             reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    DOUBLE          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    BOOL            reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    IF              reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    WHILE           reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    TRUE            reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    FALSE           reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    $end            reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 133 (list_def -> LIST LBRACKET value_list RBRACKET SEMICOLON .)


state 251

    (136) value_list -> value_list COMMA value .

    RBRACKET        reduce using rule 136 (value_list -> value_list COMMA value .)
    COMMA           reduce using rule 136 (value_list -> value_list COMMA value .)


state 252

    (134) list_def -> LIST LESS type GREATER ID . ASSIGN LBRACKET value_list RBRACKET SEMICOLON

    ASSIGN          shift and go to state 308


state 253

    (137) map_def -> MAP LESS type COMMA type . GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON

    GREATER         shift and go to state 309


state 254

    (138) map_def -> MAP ID ASSIGN LBRACE map_entries . RBRACE SEMICOLON
    (140) map_entries -> map_entries . COMMA map_entry

    RBRACE          shift and go to state 310
    COMMA           shift and go to state 311


state 255

    (139) map_entries -> map_entry .

    RBRACE          reduce using rule 139 (map_entries -> map_entry .)
    COMMA           reduce using rule 139 (map_entries -> map_entry .)


state 256

    (141) map_entry -> value . COLON value

    COLON           shift and go to state 312


state 257

    (19) variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 19 (variable_def -> DYNAMIC ID ASSIGN expression SEMICOLON .)


state 258

    (21) variable_def -> STATIC type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 313
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 259

    (22) variable_def -> STATIC VAR ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 314
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 260

    (23) variable_def -> STATIC DYNAMIC ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 315
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 261

    (124) constructor -> ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> ID LPAREN . RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 317
    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    parameters                     shift and go to state 316
    parameter                      shift and go to state 172
    type                           shift and go to state 169

state 262

    (94) class_def -> CLASS ID LBRACE class_body RBRACE .

    SEMICOLON       reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    STDIN           reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LIST            reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    MAP             reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    STATIC          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    INCREMENT       reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    DECREMENT       reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    IF              reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    WHILE           reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    TRUE            reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FALSE           reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 94 (class_def -> CLASS ID LBRACE class_body RBRACE .)


state 263

    (93) class_body -> class_body class_member .

    RBRACE          reduce using rule 93 (class_body -> class_body class_member .)
    VAR             reduce using rule 93 (class_body -> class_body class_member .)
    FINAL           reduce using rule 93 (class_body -> class_body class_member .)
    CONST           reduce using rule 93 (class_body -> class_body class_member .)
    STATIC          reduce using rule 93 (class_body -> class_body class_member .)
    VOID            reduce using rule 93 (class_body -> class_body class_member .)
    ID              reduce using rule 93 (class_body -> class_body class_member .)
    STRING          reduce using rule 93 (class_body -> class_body class_member .)
    INT             reduce using rule 93 (class_body -> class_body class_member .)
    DOUBLE          reduce using rule 93 (class_body -> class_body class_member .)
    BOOL            reduce using rule 93 (class_body -> class_body class_member .)


state 264

    (108) class_property -> type ID . SEMICOLON
    (113) class_property -> type ID . ASSIGN expression SEMICOLON
    (118) class_method -> type ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> type ID . LPAREN RPAREN LBRACE statement_composed RBRACE

    SEMICOLON       shift and go to state 318
    ASSIGN          shift and go to state 319
    LPAREN          shift and go to state 320


state 265

    (109) class_property -> VAR ID . SEMICOLON
    (114) class_property -> VAR ID . ASSIGN expression SEMICOLON

    SEMICOLON       shift and go to state 321
    ASSIGN          shift and go to state 322


state 266

    (110) class_property -> FINAL type . ID SEMICOLON
    (115) class_property -> FINAL type . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 323


state 267

    (111) class_property -> CONST type . ID SEMICOLON
    (116) class_property -> CONST type . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 324


state 268

    (112) class_property -> STATIC type . ID SEMICOLON
    (117) class_property -> STATIC type . ID ASSIGN expression SEMICOLON
    (122) class_method -> STATIC type . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 325


state 269

    (123) class_method -> STATIC VOID . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 326


state 270

    (119) class_method -> VOID ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> VOID ID . LPAREN RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 327


state 271

    (95) class_def -> CLASS ID EXTENDS ID LBRACE . class_body RBRACE
    (92) class_body -> . class_member
    (93) class_body -> . class_body class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_body                     shift and go to state 328
    class_member                   shift and go to state 188
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 272

    (97) class_def -> CLASS ID EXTENDS ID IMPLEMENTS . ID LBRACE class_body RBRACE

    ID              shift and go to state 329


state 273

    (96) class_def -> CLASS ID IMPLEMENTS ID LBRACE . class_body RBRACE
    (92) class_body -> . class_member
    (93) class_body -> . class_body class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_body                     shift and go to state 330
    class_member                   shift and go to state 188
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 274

    (42) if_block -> IF LPAREN conditions RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 331
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 275

    (45) conditions -> conditions AND condition .

    RPAREN          reduce using rule 45 (conditions -> conditions AND condition .)
    AND             reduce using rule 45 (conditions -> conditions AND condition .)
    OR              reduce using rule 45 (conditions -> conditions AND condition .)
    SEMICOLON       reduce using rule 45 (conditions -> conditions AND condition .)


state 276

    (46) conditions -> conditions OR condition .

    RPAREN          reduce using rule 46 (conditions -> conditions OR condition .)
    AND             reduce using rule 46 (conditions -> conditions OR condition .)
    OR              reduce using rule 46 (conditions -> conditions OR condition .)
    SEMICOLON       reduce using rule 46 (conditions -> conditions OR condition .)


state 277

    (47) condition -> value comparison_operator value .

    RPAREN          reduce using rule 47 (condition -> value comparison_operator value .)
    AND             reduce using rule 47 (condition -> value comparison_operator value .)
    OR              reduce using rule 47 (condition -> value comparison_operator value .)
    SEMICOLON       reduce using rule 47 (condition -> value comparison_operator value .)


state 278

    (77) while_loop -> WHILE LPAREN conditions RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 332
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 279

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions . SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (45) conditions -> conditions . AND condition
    (46) conditions -> conditions . OR condition

    SEMICOLON       shift and go to state 333
    AND             shift and go to state 201
    OR              shift and go to state 202


state 280

    (99) for_loop -> FOR LPAREN type ID IN . ID RPAREN LBRACE statement_composed RBRACE

    ID              shift and go to state 334


state 281

    (18) variable_def -> type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 167
    value                          shift and go to state 21

state 282

    (20) variable_def -> VAR ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 155
    value                          shift and go to state 21

state 283

    (27) input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 27 (input_stmt -> STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)


state 284

    (80) object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 335


state 285

    (89) object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 336


state 286

    (28) input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 337


state 287

    (150) lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN . ARROW expression SEMICOLON

    ARROW           shift and go to state 338


state 288

    (152) lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 339
    value                          shift and go to state 21

state 289

    (78) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (88) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 341
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 340
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 290

    (83) object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 342


state 291

    (82) object_instantiation -> ID ID ASSIGN NEW ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RPAREN          reduce using rule 132 (empty -> .)
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    argument_list_opt              shift and go to state 343
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 292

    (85) object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 344


state 293

    (87) object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 87 (object_instantiation -> ID ASSIGN ID LPAREN RPAREN SEMICOLON .)


state 294

    (84) object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 345


state 295

    (86) object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 346


state 296

    (81) object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 347


state 297

    (91) object_instantiation -> type ID ASSIGN ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 348


state 298

    (29) input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 349


state 299

    (149) lambda_function -> type ID ASSIGN LPAREN parameters RPAREN . ARROW expression SEMICOLON

    ARROW           shift and go to state 350


state 300

    (151) lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 351
    value                          shift and go to state 21

state 301

    (79) object_instantiation -> type ID ASSIGN NEW ID LPAREN . argument_list_opt RPAREN SEMICOLON
    (90) object_instantiation -> type ID ASSIGN NEW ID LPAREN . RPAREN SEMICOLON
    (130) argument_list_opt -> . argument_list
    (131) argument_list_opt -> . empty
    (73) argument_list -> . expression
    (74) argument_list -> . argument_list COMMA expression
    (132) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 353
    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

  ! RPAREN          [ reduce using rule 132 (empty -> .) ]

    argument_list_opt              shift and go to state 352
    argument_list                  shift and go to state 233
    empty                          shift and go to state 234
    expression                     shift and go to state 113
    value                          shift and go to state 21

state 302

    (55) function -> type ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 354
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 303

    (60) parameters -> parameters COMMA parameter .

    RPAREN          reduce using rule 60 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 60 (parameters -> parameters COMMA parameter .)


state 304

    (57) function -> type ID LPAREN RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 355
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 305

    (62) parameter -> REQUIRED type ID .

    RPAREN          reduce using rule 62 (parameter -> REQUIRED type ID .)
    COMMA           reduce using rule 62 (parameter -> REQUIRED type ID .)


state 306

    (56) function -> VOID ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 356
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 307

    (58) function -> VOID ID LPAREN RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 357
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 308

    (134) list_def -> LIST LESS type GREATER ID ASSIGN . LBRACKET value_list RBRACKET SEMICOLON

    LBRACKET        shift and go to state 358


state 309

    (137) map_def -> MAP LESS type COMMA type GREATER . ID ASSIGN LBRACE map_entries RBRACE SEMICOLON

    ID              shift and go to state 359


state 310

    (138) map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 360


state 311

    (140) map_entries -> map_entries COMMA . map_entry
    (141) map_entry -> . value COLON value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    map_entry                      shift and go to state 361
    value                          shift and go to state 256

state 312

    (141) map_entry -> value COLON . value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value                          shift and go to state 362

state 313

    (21) variable_def -> STATIC type ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 21 (variable_def -> STATIC type ID ASSIGN expression SEMICOLON .)


state 314

    (22) variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 22 (variable_def -> STATIC VAR ID ASSIGN expression SEMICOLON .)


state 315

    (23) variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .

    SEMICOLON       reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    STDIN           reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    LIST            reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    MAP             reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    DYNAMIC         reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    INCREMENT       reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    DECREMENT       reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    TRUE            reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    FALSE           reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    $end            reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 23 (variable_def -> STATIC DYNAMIC ID ASSIGN expression SEMICOLON .)


state 316

    (124) constructor -> ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 363
    COMMA           shift and go to state 244


state 317

    (125) constructor -> ID LPAREN RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 364


state 318

    (108) class_property -> type ID SEMICOLON .

    RBRACE          reduce using rule 108 (class_property -> type ID SEMICOLON .)
    VAR             reduce using rule 108 (class_property -> type ID SEMICOLON .)
    FINAL           reduce using rule 108 (class_property -> type ID SEMICOLON .)
    CONST           reduce using rule 108 (class_property -> type ID SEMICOLON .)
    STATIC          reduce using rule 108 (class_property -> type ID SEMICOLON .)
    VOID            reduce using rule 108 (class_property -> type ID SEMICOLON .)
    ID              reduce using rule 108 (class_property -> type ID SEMICOLON .)
    STRING          reduce using rule 108 (class_property -> type ID SEMICOLON .)
    INT             reduce using rule 108 (class_property -> type ID SEMICOLON .)
    DOUBLE          reduce using rule 108 (class_property -> type ID SEMICOLON .)
    BOOL            reduce using rule 108 (class_property -> type ID SEMICOLON .)


state 319

    (113) class_property -> type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 365
    value                          shift and go to state 21

state 320

    (118) class_method -> type ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> type ID LPAREN . RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 367
    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 169
    parameters                     shift and go to state 366
    parameter                      shift and go to state 172

state 321

    (109) class_property -> VAR ID SEMICOLON .

    RBRACE          reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    VAR             reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    FINAL           reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    CONST           reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    STATIC          reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    VOID            reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    ID              reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    STRING          reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    INT             reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    DOUBLE          reduce using rule 109 (class_property -> VAR ID SEMICOLON .)
    BOOL            reduce using rule 109 (class_property -> VAR ID SEMICOLON .)


state 322

    (114) class_property -> VAR ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 368
    value                          shift and go to state 21

state 323

    (110) class_property -> FINAL type ID . SEMICOLON
    (115) class_property -> FINAL type ID . ASSIGN expression SEMICOLON

    SEMICOLON       shift and go to state 369
    ASSIGN          shift and go to state 370


state 324

    (111) class_property -> CONST type ID . SEMICOLON
    (116) class_property -> CONST type ID . ASSIGN expression SEMICOLON

    SEMICOLON       shift and go to state 371
    ASSIGN          shift and go to state 372


state 325

    (112) class_property -> STATIC type ID . SEMICOLON
    (117) class_property -> STATIC type ID . ASSIGN expression SEMICOLON
    (122) class_method -> STATIC type ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE

    SEMICOLON       shift and go to state 373
    ASSIGN          shift and go to state 374
    LPAREN          shift and go to state 375


state 326

    (123) class_method -> STATIC VOID ID . LPAREN parameters RPAREN LBRACE statement_composed RBRACE

    LPAREN          shift and go to state 376


state 327

    (119) class_method -> VOID ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> VOID ID LPAREN . RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RPAREN          shift and go to state 378
    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    parameters                     shift and go to state 377
    parameter                      shift and go to state 172
    type                           shift and go to state 169

state 328

    (95) class_def -> CLASS ID EXTENDS ID LBRACE class_body . RBRACE
    (93) class_body -> class_body . class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RBRACE          shift and go to state 379
    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_member                   shift and go to state 263
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 329

    (97) class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 380


state 330

    (96) class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body . RBRACE
    (93) class_body -> class_body . class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RBRACE          shift and go to state 381
    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_member                   shift and go to state 263
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 331

    (42) if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 382
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 332

    (77) while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 383
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 333

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON . for_update RPAREN LBRACE statement_composed RBRACE
    (102) for_update -> . incdec_statement
    (103) for_update -> . ID ASSIGN expression
    (104) for_update -> . empty
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (132) empty -> .

    ID              shift and go to state 386
    INCREMENT       shift and go to state 388
    DECREMENT       shift and go to state 389
    RPAREN          reduce using rule 132 (empty -> .)

    for_update                     shift and go to state 384
    incdec_statement               shift and go to state 385
    empty                          shift and go to state 387

state 334

    (99) for_loop -> FOR LPAREN type ID IN ID . RPAREN LBRACE statement_composed RBRACE

    RPAREN          shift and go to state 390


state 335

    (80) object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 391


state 336

    (89) object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 89 (object_instantiation -> VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON .)


state 337

    (28) input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 392


state 338

    (150) lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 393
    value                          shift and go to state 21

state 339

    (152) lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 394
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 340

    (78) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 395


state 341

    (88) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 396


state 342

    (83) object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 397


state 343

    (82) object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 398


state 344

    (85) object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 85 (object_instantiation -> ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 345

    (84) object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 399


state 346

    (86) object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 86 (object_instantiation -> ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)


state 347

    (81) object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 400


state 348

    (91) object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 91 (object_instantiation -> type ID ASSIGN ID LPAREN RPAREN SEMICOLON .)


state 349

    (29) input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 401


state 350

    (149) lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 402
    value                          shift and go to state 21

state 351

    (151) lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 403
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 352

    (79) object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt . RPAREN SEMICOLON

    RPAREN          shift and go to state 404


state 353

    (90) object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 405


state 354

    (55) function -> type ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 406
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 355

    (57) function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 57 (function -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)


state 356

    (56) function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 407
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 357

    (58) function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 58 (function -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)


state 358

    (134) list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET . value_list RBRACKET SEMICOLON
    (135) value_list -> . value
    (136) value_list -> . value_list COMMA value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    value_list                     shift and go to state 408
    value                          shift and go to state 123

state 359

    (137) map_def -> MAP LESS type COMMA type GREATER ID . ASSIGN LBRACE map_entries RBRACE SEMICOLON

    ASSIGN          shift and go to state 409


state 360

    (138) map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .

    SEMICOLON       reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    PRINT           reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STDIN           reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    VAR             reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    VOID            reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    LIST            reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    MAP             reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DYNAMIC         reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STATIC          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    ID              reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    RETURN          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DECREMENT       reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    CLASS           reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    LPAREN          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STRING          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    INT             reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DOUBLE          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    BOOL            reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    IF              reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    WHILE           reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    FOR             reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    TRUE            reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    FALSE           reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    $end            reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    RBRACE          reduce using rule 138 (map_def -> MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)


state 361

    (140) map_entries -> map_entries COMMA map_entry .

    RBRACE          reduce using rule 140 (map_entries -> map_entries COMMA map_entry .)
    COMMA           reduce using rule 140 (map_entries -> map_entries COMMA map_entry .)


state 362

    (141) map_entry -> value COLON value .

    RBRACE          reduce using rule 141 (map_entry -> value COLON value .)
    COMMA           reduce using rule 141 (map_entry -> value COLON value .)


state 363

    (124) constructor -> ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 410


state 364

    (125) constructor -> ID LPAREN RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 411
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 365

    (113) class_property -> type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 412
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 366

    (118) class_method -> type ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 413
    COMMA           shift and go to state 244


state 367

    (120) class_method -> type ID LPAREN RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 414


state 368

    (114) class_property -> VAR ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 415
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 369

    (110) class_property -> FINAL type ID SEMICOLON .

    RBRACE          reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    VAR             reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    FINAL           reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    CONST           reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    STATIC          reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    VOID            reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    ID              reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    STRING          reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    INT             reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    DOUBLE          reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)
    BOOL            reduce using rule 110 (class_property -> FINAL type ID SEMICOLON .)


state 370

    (115) class_property -> FINAL type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 416
    value                          shift and go to state 21

state 371

    (111) class_property -> CONST type ID SEMICOLON .

    RBRACE          reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    VAR             reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    FINAL           reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    CONST           reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    STATIC          reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    VOID            reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    ID              reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    STRING          reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    INT             reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    DOUBLE          reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)
    BOOL            reduce using rule 111 (class_property -> CONST type ID SEMICOLON .)


state 372

    (116) class_property -> CONST type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 417
    value                          shift and go to state 21

state 373

    (112) class_property -> STATIC type ID SEMICOLON .

    RBRACE          reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    VAR             reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    FINAL           reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    CONST           reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    STATIC          reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    VOID            reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    ID              reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    STRING          reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    INT             reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    DOUBLE          reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)
    BOOL            reduce using rule 112 (class_property -> STATIC type ID SEMICOLON .)


state 374

    (117) class_property -> STATIC type ID ASSIGN . expression SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 418
    value                          shift and go to state 21

state 375

    (122) class_method -> STATIC type ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    type                           shift and go to state 169
    parameters                     shift and go to state 419
    parameter                      shift and go to state 172

state 376

    (123) class_method -> STATIC VOID ID LPAREN . parameters RPAREN LBRACE statement_composed RBRACE
    (59) parameters -> . parameter
    (60) parameters -> . parameters COMMA parameter
    (61) parameter -> . type ID
    (62) parameter -> . REQUIRED type ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    REQUIRED        shift and go to state 173
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    parameters                     shift and go to state 420
    parameter                      shift and go to state 172
    type                           shift and go to state 169

state 377

    (119) class_method -> VOID ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 421
    COMMA           shift and go to state 244


state 378

    (121) class_method -> VOID ID LPAREN RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 422


state 379

    (95) class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .

    SEMICOLON       reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    STDIN           reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    LIST            reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    MAP             reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    STATIC          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    INCREMENT       reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    DECREMENT       reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    IF              reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    WHILE           reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    TRUE            reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    FALSE           reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 95 (class_def -> CLASS ID EXTENDS ID LBRACE class_body RBRACE .)


state 380

    (97) class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE . class_body RBRACE
    (92) class_body -> . class_member
    (93) class_body -> . class_body class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_body                     shift and go to state 423
    class_member                   shift and go to state 188
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 381

    (96) class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .

    SEMICOLON       reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STDIN           reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    LIST            reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    MAP             reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STATIC          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    INCREMENT       reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DECREMENT       reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    IF              reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    WHILE           reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    TRUE            reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    FALSE           reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 96 (class_def -> CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE .)


state 382

    (42) if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .

    ELSE            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    SEMICOLON       reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 42 (if_block -> IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)


state 383

    (77) while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 77 (while_loop -> WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE .)


state 384

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update . RPAREN LBRACE statement_composed RBRACE

    RPAREN          shift and go to state 424


state 385

    (102) for_update -> incdec_statement .

    RPAREN          reduce using rule 102 (for_update -> incdec_statement .)


state 386

    (103) for_update -> ID . ASSIGN expression
    (67) incdec_statement -> ID . INCREMENT SEMICOLON
    (68) incdec_statement -> ID . DECREMENT SEMICOLON

    ASSIGN          shift and go to state 425
    INCREMENT       shift and go to state 426
    DECREMENT       shift and go to state 427


state 387

    (104) for_update -> empty .

    RPAREN          reduce using rule 104 (for_update -> empty .)


state 388

    (69) incdec_statement -> INCREMENT . ID SEMICOLON

    ID              shift and go to state 428


state 389

    (70) incdec_statement -> DECREMENT . ID SEMICOLON

    ID              shift and go to state 429


state 390

    (99) for_loop -> FOR LPAREN type ID IN ID RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 430


state 391

    (80) object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 80 (object_instantiation -> VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 392

    (28) input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 431


state 393

    (150) lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 432
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 394

    (152) lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .

    SEMICOLON       reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    PRINT           reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STDIN           reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    VAR             reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    VOID            reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    LIST            reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    MAP             reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STATIC          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    ID              reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    RETURN          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    INCREMENT       reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DECREMENT       reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    CLASS           reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    LPAREN          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STRING          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    INT             reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DOUBLE          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    BOOL            reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    IF              reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    WHILE           reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    FOR             reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    TRUE            reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    FALSE           reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    $end            reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    RBRACE          reduce using rule 152 (lambda_function -> VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)


state 395

    (78) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 433


state 396

    (88) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 88 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)


state 397

    (83) object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (object_instantiation -> ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 398

    (82) object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 434


state 399

    (84) object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 84 (object_instantiation -> ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 400

    (81) object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 81 (object_instantiation -> type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 401

    (29) input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 435


state 402

    (149) lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 436
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 403

    (151) lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .

    SEMICOLON       reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    PRINT           reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STDIN           reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    VAR             reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    VOID            reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    LIST            reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    MAP             reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STATIC          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    ID              reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    RETURN          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    INCREMENT       reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DECREMENT       reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    CLASS           reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    LPAREN          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    STRING          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    INT             reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    DOUBLE          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    BOOL            reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    IF              reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    WHILE           reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    FOR             reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    TRUE            reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    FALSE           reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    $end            reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)
    RBRACE          reduce using rule 151 (lambda_function -> type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON .)


state 404

    (79) object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 437


state 405

    (90) object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 90 (object_instantiation -> type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON .)


state 406

    (55) function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 55 (function -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 407

    (56) function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 56 (function -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 408

    (134) list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list . RBRACKET SEMICOLON
    (136) value_list -> value_list . COMMA value

    RBRACKET        shift and go to state 438
    COMMA           shift and go to state 178


state 409

    (137) map_def -> MAP LESS type COMMA type GREATER ID ASSIGN . LBRACE map_entries RBRACE SEMICOLON

    LBRACE          shift and go to state 439


state 410

    (124) constructor -> ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 440
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 411

    (125) constructor -> ID LPAREN RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 441
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 412

    (113) class_property -> type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    FINAL           reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 113 (class_property -> type ID ASSIGN expression SEMICOLON .)


state 413

    (118) class_method -> type ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 442


state 414

    (120) class_method -> type ID LPAREN RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 443
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 415

    (114) class_property -> VAR ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    FINAL           reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 114 (class_property -> VAR ID ASSIGN expression SEMICOLON .)


state 416

    (115) class_property -> FINAL type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 444
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 417

    (116) class_property -> CONST type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 445
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 418

    (117) class_property -> STATIC type ID ASSIGN expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    SEMICOLON       shift and go to state 446
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 419

    (122) class_method -> STATIC type ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 447
    COMMA           shift and go to state 244


state 420

    (123) class_method -> STATIC VOID ID LPAREN parameters . RPAREN LBRACE statement_composed RBRACE
    (60) parameters -> parameters . COMMA parameter

    RPAREN          shift and go to state 448
    COMMA           shift and go to state 244


state 421

    (119) class_method -> VOID ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 449


state 422

    (121) class_method -> VOID ID LPAREN RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 450
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 423

    (97) class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body . RBRACE
    (93) class_body -> class_body . class_member
    (105) class_member -> . class_property
    (106) class_member -> . class_method
    (107) class_member -> . constructor
    (108) class_property -> . type ID SEMICOLON
    (109) class_property -> . VAR ID SEMICOLON
    (110) class_property -> . FINAL type ID SEMICOLON
    (111) class_property -> . CONST type ID SEMICOLON
    (112) class_property -> . STATIC type ID SEMICOLON
    (113) class_property -> . type ID ASSIGN expression SEMICOLON
    (114) class_property -> . VAR ID ASSIGN expression SEMICOLON
    (115) class_property -> . FINAL type ID ASSIGN expression SEMICOLON
    (116) class_property -> . CONST type ID ASSIGN expression SEMICOLON
    (117) class_property -> . STATIC type ID ASSIGN expression SEMICOLON
    (118) class_method -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (119) class_method -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (120) class_method -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (121) class_method -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (122) class_method -> . STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (123) class_method -> . STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (124) constructor -> . ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (125) constructor -> . ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL

    RBRACE          shift and go to state 451
    VAR             shift and go to state 193
    FINAL           shift and go to state 194
    CONST           shift and go to state 195
    STATIC          shift and go to state 196
    VOID            shift and go to state 197
    ID              shift and go to state 186
    STRING          shift and go to state 82
    INT             shift and go to state 83
    DOUBLE          shift and go to state 84
    BOOL            shift and go to state 41

    class_member                   shift and go to state 263
    class_property                 shift and go to state 189
    class_method                   shift and go to state 190
    constructor                    shift and go to state 191
    type                           shift and go to state 192

state 424

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 452


state 425

    (103) for_update -> ID ASSIGN . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    LPAREN          shift and go to state 20
    ID              shift and go to state 57
    INCREMENT       shift and go to state 58
    DECREMENT       shift and go to state 59
    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 453
    value                          shift and go to state 21

state 426

    (67) incdec_statement -> ID INCREMENT . SEMICOLON

    SEMICOLON       shift and go to state 114


state 427

    (68) incdec_statement -> ID DECREMENT . SEMICOLON

    SEMICOLON       shift and go to state 115


state 428

    (69) incdec_statement -> INCREMENT ID . SEMICOLON

    SEMICOLON       shift and go to state 133


state 429

    (70) incdec_statement -> DECREMENT ID . SEMICOLON

    SEMICOLON       shift and go to state 134


state 430

    (99) for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 454
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 431

    (28) input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 28 (input_stmt -> VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)


state 432

    (150) lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .

    SEMICOLON       reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    PRINT           reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STDIN           reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    VAR             reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    VOID            reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    LIST            reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    MAP             reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STATIC          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    ID              reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    RETURN          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    INCREMENT       reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DECREMENT       reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    CLASS           reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    LPAREN          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STRING          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    INT             reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DOUBLE          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    BOOL            reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    IF              reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    WHILE           reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    FOR             reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    TRUE            reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    FALSE           reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    $end            reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    RBRACE          reduce using rule 150 (lambda_function -> VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)


state 433

    (78) object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (object_instantiation -> VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 434

    (82) object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (object_instantiation -> ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 435

    (29) input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STDIN           reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    VOID            reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LIST            reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    MAP             reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    TRUE            reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    FALSE           reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 29 (input_stmt -> type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON .)


state 436

    (149) lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .

    SEMICOLON       reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    PRINT           reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STDIN           reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    VAR             reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    VOID            reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    LIST            reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    MAP             reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STATIC          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    ID              reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    RETURN          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    INCREMENT       reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DECREMENT       reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    CLASS           reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    LPAREN          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    STRING          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    INT             reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    DOUBLE          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    BOOL            reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    IF              reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    WHILE           reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    FOR             reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    TRUE            reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    FALSE           reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    $end            reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)
    RBRACE          reduce using rule 149 (lambda_function -> type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON .)


state 437

    (79) object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .

    SEMICOLON       reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    PRINT           reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STDIN           reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VAR             reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    VOID            reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LIST            reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    MAP             reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STATIC          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    ID              reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INCREMENT       reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DECREMENT       reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    CLASS           reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    LPAREN          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    STRING          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    INT             reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    BOOL            reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    IF              reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FOR             reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    TRUE            reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    FALSE           reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    $end            reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (object_instantiation -> type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON .)


state 438

    (134) list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 455


state 439

    (137) map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE . map_entries RBRACE SEMICOLON
    (139) map_entries -> . map_entry
    (140) map_entries -> . map_entries COMMA map_entry
    (141) map_entry -> . value COLON value
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    INT             shift and go to state 60
    DOUBLE          shift and go to state 61
    STRING          shift and go to state 62
    ID              shift and go to state 124
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    map_entries                    shift and go to state 456
    map_entry                      shift and go to state 255
    value                          shift and go to state 256

state 440

    (124) constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 457
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 441

    (125) constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 125 (constructor -> ID LPAREN RPAREN LBRACE statement_composed RBRACE .)


state 442

    (118) class_method -> type ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 458
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 443

    (120) class_method -> type ID LPAREN RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 459
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 444

    (115) class_property -> FINAL type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    FINAL           reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 115 (class_property -> FINAL type ID ASSIGN expression SEMICOLON .)


state 445

    (116) class_property -> CONST type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    FINAL           reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 116 (class_property -> CONST type ID ASSIGN expression SEMICOLON .)


state 446

    (117) class_property -> STATIC type ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    FINAL           reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    STATIC          reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    DOUBLE          reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 117 (class_property -> STATIC type ID ASSIGN expression SEMICOLON .)


state 447

    (122) class_method -> STATIC type ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 460


state 448

    (123) class_method -> STATIC VOID ID LPAREN parameters RPAREN . LBRACE statement_composed RBRACE

    LBRACE          shift and go to state 461


state 449

    (119) class_method -> VOID ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 462
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 450

    (121) class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 463
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 451

    (97) class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .

    SEMICOLON       reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STDIN           reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    LIST            reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    MAP             reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STATIC          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    INCREMENT       reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DECREMENT       reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    IF              reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    WHILE           reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    TRUE            reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    FALSE           reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 97 (class_def -> CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE .)


state 452

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 464
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 453

    (103) for_update -> ID ASSIGN expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . INT_DIVIDE expression
    (35) expression -> expression . MODULE expression

    RPAREN          reduce using rule 103 (for_update -> ID ASSIGN expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    INT_DIVIDE      shift and go to state 53
    MODULE          shift and go to state 54


state 454

    (99) for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 465
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 455

    (134) list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .

    SEMICOLON       reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    PRINT           reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    STDIN           reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    VAR             reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    VOID            reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    LIST            reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    MAP             reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    DYNAMIC         reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    STATIC          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    ID              reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    RETURN          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    INCREMENT       reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    DECREMENT       reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    CLASS           reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    STRING          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    INT             reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    DOUBLE          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    BOOL            reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    IF              reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    WHILE           reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    FOR             reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    TRUE            reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    FALSE           reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    $end            reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 134 (list_def -> LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON .)


state 456

    (137) map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries . RBRACE SEMICOLON
    (140) map_entries -> map_entries . COMMA map_entry

    RBRACE          shift and go to state 466
    COMMA           shift and go to state 311


state 457

    (124) constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 124 (constructor -> ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 458

    (118) class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 467
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 459

    (120) class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 120 (class_method -> type ID LPAREN RPAREN LBRACE statement_composed RBRACE .)


state 460

    (122) class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement_composed             shift and go to state 468
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 461

    (123) class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE . statement_composed RBRACE
    (2) statement_composed -> . statement
    (3) statement_composed -> . statement_composed statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement_composed             shift and go to state 469
    statement                      shift and go to state 3
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 462

    (119) class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 470
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 463

    (121) class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 121 (class_method -> VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE .)


state 464

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 471
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 465

    (99) for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 99 (for_loop -> FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE .)


state 466

    (137) map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 472


state 467

    (118) class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 118 (class_method -> type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 468

    (122) class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 473
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    type                           shift and go to state 25
    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 469

    (123) class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed . RBRACE
    (3) statement_composed -> statement_composed . statement
    (4) statement -> . print_stmt
    (5) statement -> . input_stmt
    (6) statement -> . control_structures
    (7) statement -> . function
    (8) statement -> . lambda_function
    (9) statement -> . list_def
    (10) statement -> . map_def
    (11) statement -> . variable_def
    (12) statement -> . SEMICOLON
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . incdec_statement
    (16) statement -> . class_def
    (17) statement -> . object_instantiation
    (148) statement -> . expression SEMICOLON
    (24) print_stmt -> . PRINT LPAREN RPAREN SEMICOLON
    (25) print_stmt -> . PRINT LPAREN value RPAREN SEMICOLON
    (26) print_stmt -> . PRINT LPAREN expression RPAREN SEMICOLON
    (27) input_stmt -> . STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (28) input_stmt -> . VAR ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (29) input_stmt -> . type ID ASSIGN STDIN DOT READLINESYNC LPAREN RPAREN SEMICOLON
    (38) control_structures -> . if_block
    (39) control_structures -> . if_block else_block
    (40) control_structures -> . while_loop
    (41) control_structures -> . for_loop
    (55) function -> . type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (56) function -> . VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE
    (57) function -> . type ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (58) function -> . VOID ID LPAREN RPAREN LBRACE statement_composed RBRACE
    (149) lambda_function -> . type ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (150) lambda_function -> . VAR ID ASSIGN LPAREN parameters RPAREN ARROW expression SEMICOLON
    (151) lambda_function -> . type ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (152) lambda_function -> . VAR ID ASSIGN LPAREN RPAREN ARROW expression SEMICOLON
    (133) list_def -> . LIST LBRACKET value_list RBRACKET SEMICOLON
    (134) list_def -> . LIST LESS type GREATER ID ASSIGN LBRACKET value_list RBRACKET SEMICOLON
    (137) map_def -> . MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (138) map_def -> . MAP ID ASSIGN LBRACE map_entries RBRACE SEMICOLON
    (18) variable_def -> . type ID ASSIGN expression SEMICOLON
    (19) variable_def -> . DYNAMIC ID ASSIGN expression SEMICOLON
    (20) variable_def -> . VAR ID ASSIGN expression SEMICOLON
    (21) variable_def -> . STATIC type ID ASSIGN expression SEMICOLON
    (22) variable_def -> . STATIC VAR ID ASSIGN expression SEMICOLON
    (23) variable_def -> . STATIC DYNAMIC ID ASSIGN expression SEMICOLON
    (71) function_call -> . ID LPAREN RPAREN SEMICOLON
    (72) function_call -> . ID LPAREN argument_list RPAREN SEMICOLON
    (75) return_statement -> . RETURN expression SEMICOLON
    (76) return_statement -> . RETURN SEMICOLON
    (67) incdec_statement -> . ID INCREMENT SEMICOLON
    (68) incdec_statement -> . ID DECREMENT SEMICOLON
    (69) incdec_statement -> . INCREMENT ID SEMICOLON
    (70) incdec_statement -> . DECREMENT ID SEMICOLON
    (94) class_def -> . CLASS ID LBRACE class_body RBRACE
    (95) class_def -> . CLASS ID EXTENDS ID LBRACE class_body RBRACE
    (96) class_def -> . CLASS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (97) class_def -> . CLASS ID EXTENDS ID IMPLEMENTS ID LBRACE class_body RBRACE
    (78) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (79) object_instantiation -> . type ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (80) object_instantiation -> . VAR ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (81) object_instantiation -> . type ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (82) object_instantiation -> . ID ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (83) object_instantiation -> . ID ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (84) object_instantiation -> . ID ASSIGN NEW ID LPAREN argument_list_opt RPAREN SEMICOLON
    (85) object_instantiation -> . ID ASSIGN ID LPAREN argument_list_opt RPAREN SEMICOLON
    (86) object_instantiation -> . ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (87) object_instantiation -> . ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (88) object_instantiation -> . VAR ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (89) object_instantiation -> . VAR ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (90) object_instantiation -> . type ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON
    (91) object_instantiation -> . type ID ASSIGN ID LPAREN RPAREN SEMICOLON
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression INT_DIVIDE expression
    (35) expression -> . expression MODULE expression
    (36) expression -> . LPAREN expression RPAREN
    (37) expression -> . value
    (63) expression -> . ID INCREMENT
    (64) expression -> . ID DECREMENT
    (65) expression -> . INCREMENT ID
    (66) expression -> . DECREMENT ID
    (126) type -> . STRING
    (127) type -> . INT
    (128) type -> . DOUBLE
    (129) type -> . BOOL
    (42) if_block -> . IF LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (77) while_loop -> . WHILE LPAREN conditions RPAREN LBRACE statement_composed RBRACE
    (98) for_loop -> . FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE
    (99) for_loop -> . FOR LPAREN type ID IN ID RPAREN LBRACE statement_composed RBRACE
    (142) value -> . INT
    (143) value -> . DOUBLE
    (144) value -> . STRING
    (145) value -> . ID
    (146) value -> . TRUE
    (147) value -> . FALSE

    RBRACE          shift and go to state 474
    SEMICOLON       shift and go to state 12
    PRINT           shift and go to state 19
    STDIN           shift and go to state 22
    VAR             shift and go to state 23
    VOID            shift and go to state 29
    LIST            shift and go to state 30
    MAP             shift and go to state 31
    DYNAMIC         shift and go to state 32
    STATIC          shift and go to state 33
    ID              shift and go to state 24
    RETURN          shift and go to state 34
    INCREMENT       shift and go to state 35
    DECREMENT       shift and go to state 36
    CLASS           shift and go to state 37
    LPAREN          shift and go to state 20
    STRING          shift and go to state 38
    INT             shift and go to state 39
    DOUBLE          shift and go to state 40
    BOOL            shift and go to state 41
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    statement                      shift and go to state 47
    print_stmt                     shift and go to state 4
    input_stmt                     shift and go to state 5
    control_structures             shift and go to state 6
    function                       shift and go to state 7
    lambda_function                shift and go to state 8
    list_def                       shift and go to state 9
    map_def                        shift and go to state 10
    variable_def                   shift and go to state 11
    function_call                  shift and go to state 13
    return_statement               shift and go to state 14
    incdec_statement               shift and go to state 15
    class_def                      shift and go to state 16
    object_instantiation           shift and go to state 17
    expression                     shift and go to state 18
    value                          shift and go to state 21
    type                           shift and go to state 25
    if_block                       shift and go to state 26
    while_loop                     shift and go to state 27
    for_loop                       shift and go to state 28

state 470

    (119) class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 119 (class_method -> VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 471

    (98) for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .

    SEMICOLON       reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    PRINT           reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    STDIN           reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    LIST            reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    MAP             reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    DYNAMIC         reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    RETURN          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    INCREMENT       reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    DECREMENT       reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    CLASS           reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    LPAREN          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    IF              reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    WHILE           reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    FOR             reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    TRUE            reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    FALSE           reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    $end            reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)
    RBRACE          reduce using rule 98 (for_loop -> FOR LPAREN for_init SEMICOLON conditions SEMICOLON for_update RPAREN LBRACE statement_composed RBRACE .)


state 472

    (137) map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .

    SEMICOLON       reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    PRINT           reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STDIN           reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    VAR             reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    VOID            reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    LIST            reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    MAP             reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DYNAMIC         reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STATIC          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    ID              reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    RETURN          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    INCREMENT       reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DECREMENT       reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    CLASS           reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    LPAREN          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    STRING          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    INT             reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    DOUBLE          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    BOOL            reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    IF              reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    WHILE           reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    FOR             reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    TRUE            reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    FALSE           reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    $end            reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)
    RBRACE          reduce using rule 137 (map_def -> MAP LESS type COMMA type GREATER ID ASSIGN LBRACE map_entries RBRACE SEMICOLON .)


state 473

    (122) class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 122 (class_method -> STATIC type ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)


state 474

    (123) class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .

    RBRACE          reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VAR             reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    FINAL           reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    CONST           reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STATIC          reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    VOID            reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    ID              reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    STRING          reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    INT             reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    DOUBLE          reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)
    BOOL            reduce using rule 123 (class_method -> STATIC VOID ID LPAREN parameters RPAREN LBRACE statement_composed RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 67 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 68 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 87 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 94 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 96 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for INT_DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 98 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 162 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 218 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 235 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 236 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 289 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 301 resolved as shift
